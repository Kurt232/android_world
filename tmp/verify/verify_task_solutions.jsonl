{"task": "Starting from the home page, open the more options menu for the current checklist", "solution": "tap($open_note)\ntap($more_options_checklist)"}
{"task": "Open settings from a checklist note by first creating a checklist note or opening an existing one.", "solution": "tap($open_note)\nif len($open_note_title_list) == 0:\n    tap($create_note)\n    tap($checklist_type)\n    tap($add_note_ok)\nelse:\n    tap($open_note_title_list[0])\ntap($more_options_checklist)\ntap($settings)"}
{"task": "Create multiple checklist items and then sort the items of the current checklist by Custom", "solution": "tap($open_note)\nif len($open_note_title_list) == 0:\n    tap($create_note)\n    tap($checklist_type)\n    tap($add_note_ok)\nelse:\n    tap($open_note_title_list[0])\nfor i in range(3):\n    tap($add_checklist_item)\n    set_text($add_checklist_item_title, f'Item {i+1}')\n    tap($add_checklist_item_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Starting from the home page, open more options for the current checklist", "solution": "tap($open_note)\ntap($more_options_checklist)"}
{"task": "Open a checklist note or create one if there is none, then open more options for the current checklist", "solution": "tap($open_note)\nif len($open_note_title_list) == 0:\n    tap($create_note)\n    tap($checklist_type)\n    tap($add_note_ok)\nelse:\n    tap($open_note_title_list[0])\ntap($more_options_checklist)"}
{"task": "Open a checklist note or create one if there is none, then rename the current checklist to 'Grocery List'", "solution": "if len($open_note_title_list) == 0:\n\ttap($create_note)\n\ttap($checklist_type)\n\tset_text($add_note_title, 'New Checklist')\n\ttap($add_note_ok)\nelse:\n\ttap($open_note)\n\ttap($open_note_title_list[0].match({'selected': False}))\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)"}
{"task": "If a note with the title 'Grocery List' already exists, rename it; then create a new note with the title 'Grocery List'", "solution": "if len($open_note_title_list.match('Grocery List')) == 1:\n\ttap($open_note_title_list.match('Grocery List')[0])\n\ttap($more_options_note)\n\ttap($rename_note)\n\tset_text($rename_input, 'Renamed Note')\n\ttap($rename_ok)\ntap($create_note)\ntap($text_note_type)\nset_text($add_note_title, 'Grocery List')\ntap($add_note_ok)"}
{"task": "Open the settings of the app from the home page.", "solution": "tap($more_options_note)\ntap($settings)"}
{"task": "Ensure there is no checklist titled 'Weekend Tasks' and then create a new checklist note titled 'Weekend Tasks'", "solution": "if len($open_note_title_list.match('Weekend Tasks')) > 0:\n\ttap($open_note_title_list.match('Weekend Tasks')[0])\n\ttap($more_options_checklist)\n\ttap($delete_note)\n\ttap($delete_note_ok)\ntap($create_note)\ntap($checklist_type)\nset_text($add_note_title, 'Weekend Tasks')\ntap($add_note_ok)"}
{"task": "Set the theme color to auto light/dark", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)"}
{"task": "Open a checklist note or create one if there is none, then sort the current checklist by title.", "solution": "if len($open_note_title_list) == 0:\n    tap($open_note)\n    tap($create_note)\n    set_text($add_note_title, 'New Checklist')\n    tap($checklist_type)\n    tap($add_note_ok)\nelse:\n    tap($open_note)\n    tap($open_note_title_list[0])\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($sort_checklist_items_types.match({'text': 'Title'})[0])\ntap($sort_checklist_items_ok)"}
{"task": "Ensure a checklist is open and print the current checklist", "solution": "if len($open_note_title_list) == 0:\n    tap($open_note)\n    tap($create_note)\n    set_text($add_note_title, 'New Checklist')\n    tap($checklist_type)\n    tap($add_note_ok)\nelse:\n    tap($open_note)\n    tap($open_note_title_list[0])\nprint([get_text(item) for item in $checklist_item_list])"}
{"task": "Create a note titled 'Meeting Notes' if it doesn't already exist, then delete the 'Meeting Notes' note.", "solution": "note_titles = [get_text(note) for note in $open_note_title_list]\nif 'Meeting Notes' not in note_titles:\n    tap($open_note)\n    tap($create_note)\n    set_text($add_note_title, 'Meeting Notes')\n    tap($text_note_type)\n    tap($add_note_ok)\nnote_titles = [get_text(note) for note in $open_note_title_list]\nif 'Meeting Notes' in note_titles:\n    idx = note_titles.index('Meeting Notes')\n    tap($open_note)\n    tap($open_note_title_list[idx])\n    tap($more_options_note)\n    tap($delete_note)\n    tap($delete_note_ok)"}
{"task": "Open the settings of the app and set the font size to 90%", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\nsleep(1)\ntap($set_font_size)\ntap($font_size_types.match({'text': '90%'})[0])"}
{"task": "Open a note or create one if there is none, and set the app to place the cursor at the end of the note.", "solution": "if len($open_note_title_list) == 0:\n    tap($open_note)\n    tap($create_note)\n    set_text($add_note_title, 'New Note')\n    tap($text_note_type)\n    tap($add_note_ok)\nelse:\n    tap($open_note)\n    tap($open_note_title_list[0])\ntap($more_options_note)\ntap($settings)\nscroll($scroll_settings_page, 'down')\nsleep(1)\ntap($set_place_cursor_to_the_end_of_note)\nback()"}
{"task": "Open the checklist containing the item 'Shopping List' and rename the checklist item 'Shopping List' to 'Groceries List'", "solution": "\n# Step 1: Open the note containing the item 'Shopping List'\ntap($open_note)\n# Assuming we need to find and tap the note containing 'Shopping List'\nopen_note_titles = $open_note_title_list\nfor note_title in open_note_titles:\n    if 'Shopping List' in get_text(note_title):\n        tap(note_title)\n        break\n# Step 2: Renaming the checklist item 'Shopping List' to 'Groceries List'\nchecklist_items = $checklist_item_list\nfor item in checklist_items:\n    if 'Shopping List' in get_text(item):\n        long_tap(item)\n        tap($rename_selected_checklist_item)\n        rename_input = $item_title\n        set_text(rename_input, 'Groceries List')\n        tap($rename_ok)\n        break\n"}
{"task": "If no checklist note is currently open, open one first, and then open more options for the current checklist.", "solution": "\n# Step 1: Check if a checklist note is open and open one if not\nchecklist_open = False\nif len($checklist_item_list) > 0:\n    checklist_open = True\n# else, open a checklist note\nif not checklist_open:\n    tap($open_note)\n    open_note_titles = $open_note_title_list\n    for note_title in open_note_titles:\n        if 'Checklist' in get_text(note_title):\n            tap(note_title)\n            break\n            checklist_open = True\n# Step 2: Open more options for the current checklist\ntap($more_options_checklist)\n"}
{"task": "Ensure that a note titled 'Grocery List' exists and is opened, then print the current note about the grocery list.", "solution": "\n# Step 1: Ensure a note titled 'Grocery List' exists and is opened\nnote_found = False\ntap($open_note)\nopen_note_titles = $open_note_title_list\nfor title in open_note_titles:\n    if 'Grocery List' in get_text(title):\n        tap(title)\n        note_found = True\n        break\nif not note_found:\n    tap($create_note)\n    set_text($add_note_title, 'Grocery List')\n    tap($text_note_type)\n    tap($add_note_ok)\n# Step 2: Execute the typical function to print the current note's content\nprint(get_text($note_content))\n"}
{"task": "Open an existing note or create a new one if necessary, then show the title of the current note", "solution": "\n# Step 1: Check if any note or checklist is opened\nnote_opened = False\nif len($checklist_item_list) > 0 or 'note_content' in str($note_content):\n    note_opened = True\nif not note_opened:\n    tap($open_note)\n# Open the first note if required\nopen_note_titles = $open_note_title_list\nif len(open_note_titles) > 0:\n    tap(open_note_titles[0])\n# Step 2: Show the title of the current note\nprint(get_text($item_title))\n"}
{"task": "Check the current font size", "solution": "\n# Check the current font size\nprint(get_text($current_font_size))\n"}
{"task": "Open the current note and then open more options for that note in the Notes APP", "solution": "tap($open_note)\ntap($more_options_note)"}
{"task": "Open the note 'Journal Entry' and navigate to the app settings.", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Journal Entry':\n        tap(note_titles[i])\n        break\ntap($more_options_note)\ntap($settings)"}
{"task": "Make sure a checklist is open and is the current checklist, then open the more options menu of the current checklist.", "solution": "tap($more_options_checklist)"}
{"task": "Open the 'Christmas shopping' checklist, then delete my 'Christmas shopping checklist'", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Christmas shopping':\n        tap(note_titles[i])\n        break\ntap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Ensure a note titled 'Meeting Agenda' exists and create a shortcut for the note.", "solution": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Meeting Agenda':\n        tap(note_titles[i])\n        break\nNote_exists = False\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Meeting Agenda':\n        Note_exists = True\n        break\nif Note_exists:\n    tap($more_options_note)\n    tap($create_shortcut)"}
{"task": "Open the settings page in the Notes app and scroll through it.", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')"}
{"task": "Create checklist items, mark some as done, and then remove all done items from the current checklist.", "solution": "# Step 1: Create checklist items\ntap($create_note)\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Checklist Item 1')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Checklist Item 2')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Checklist Item 3')\ntap($add_checklist_item_ok)\n\n# Step 2: Mark some items as done\ntap($checklist_item_list[0])\n\n# Step 3: Remove all done items\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Open a checklist note containing 'Meeting at 3PM' if one is not already opened, then rename the checklist item 'Meeting at 3PM' to 'Team Meeting at 3PM'.", "solution": "# Step 1: Open a checklist note\nnotes = $open_note_title_list.match({'text': 'Meeting at 3PM'})\nif not notes:\n    tap($create_note)\n    tap($checklist_type)\n    set_text($add_note_title, 'Meeting at 3PM')\n    tap($add_note_ok)\nelse:\n    tap(notes[0])\n\n# Step 2: Rename the checklist item\ntap($checklist_item_list.match({'text': 'Meeting at 3PM'})[0])\nlong_tap($checklist_item_list.match({'text': 'Meeting at 3PM'})[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Team Meeting at 3PM')\ntap($rename_ok)"}
{"task": "Open a checklist note or create one if there is none, then confirm the current checklist sorting type", "solution": "# Step 1: Open or create a checklist note\nif not len($open_note_title_list.match({'text': 'Checklist'})):\n    tap($create_note)\n    tap($checklist_type)\n    set_text($add_note_title, 'Checklist')\n    tap($add_note_ok)\nelse:\n    tap($open_note_title_list.match({'text': 'Checklist'})[0])\n\n# Step 2: Confirm the current checklist sorting type\ntap($more_options_checklist)\ntap($sort_checklist_items)\nfor sort_type in $sort_checklist_items_types:\n    if get_attributes(sort_type)[\"checked\"]:\n        print(get_text(sort_type))\ntap($sort_checklist_items_ok)"}
{"task": "Open any existing note or create a new note, then enable Incognito mode for keyboards in notes.", "solution": "# Step 1: Open any existing note or create a new one\nnotes_list = $open_note_title_list\nif len(notes_list) == 0:\n    tap($create_note)\n    tap($text_note_type)\n    tap($add_note_ok)\nelse:\n    tap(notes_list[0])\n\n# Step 2: Enable Incognito mode for keyboards\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_use_incognito_mode_of_keyboards)\nback()"}
{"task": "If a note with the title 'Grocery List' already exists, rename the note title to something else, then create a new checklist note and title it 'Grocery List'", "solution": "tap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Grocery List':\n        tap(notes[i])\n        tap($more_options_note)\n        tap($rename_note)\n        set_text($rename_input, 'Grocery List Renamed')\n        tap($rename_ok)\n        back()\n        break\nback()\ntap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Show the current font size directly from the home page", "solution": "tap($settings)\ntap($set_font_size)\nsize_elements = $font_size_types\nfor i in range(len(size_elements)):\n    if get_attributes(size_elements[i])['checked']:\n        print(get_text(size_elements[i]))\n        break\nback()"}
{"task": "Open the settings of the notes app", "solution": "tap($settings)"}
{"task": "Open a text note or create one if there is none, then search within the current note for the keyword 'deadline'.", "solution": "tap($open_note)\nnotes = $open_note_title_list\nif len(notes) > 0:\n    tap(notes[0])\nelse:\n    back()\n    tap($create_note)\n    set_text($add_note_title, 'New Note')\n    tap($text_note_type)\n    tap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'deadline')"}
{"task": "Open the more options menu for the current note from the home page.", "solution": "tap($more_options_note)"}
{"task": "Open a checklist note or create one if there is none, then move the checklist item 'Buy Groceries' to the top of the list.", "solution": "if len($open_note_title_list) > 0:\n    tap($open_note)\nelse:\n    tap($create_note)\n    set_text($add_note_title, 'Checklist Note')\n    tap($checklist_type)\n    tap($add_note_ok)\ntap($checklist_item_list.match('Buy Groceries')[0])\ntap($move_selected_item_to_the_top)"}
{"task": "Ensure a note is open and then delete all text in the current note.", "solution": "if len($note_content) == 0:\n    tap($open_note)\n    tap($open_note_title_list[0])\nset_text($note_content, '')\ntap($save_note)"}
{"task": "Verify the checklist contains the item 'Plan Vacation' and rename it to 'Book Flights'.", "solution": "if len($open_note_title_list) > 0:\n    tap($open_note)\n    tap($open_note_title_list[0])\ntarget_item = $checklist_item_list.match('Plan Vacation')\nif len(target_item) > 0:\n    long_tap(target_item[0])\n    tap($rename_selected_checklist_item)\n    set_text($rename_input, 'Book Flights')\n    tap($rename_ok)"}
{"task": "Open a checklist and then open more options for the current checklist", "solution": "tap($open_note)\ntap($open_note_title_list[0])\ntap($more_options_checklist)"}
{"task": "Add the text 'meeting notes' to the note and then search for the text 'meeting notes' within the current note.", "solution": "set_text($note_content, 'meeting notes')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'meeting notes')"}
{"task": "Open a checklist note if none are currently opened, then move the checklist item 'Read a Book' to the top of the list.", "solution": "if len($open_note_title_list) == 0:\n    tap($open_note)\nelse:\n    checklist_note_found = False\n    for i in range(len($open_note_title_list)):\n        tap($open_note_title_list[i])\n        if len($checklist_item_list) > 0:\n            checklist_note_found = True\n            break\n        tap($switch_to_next_item)\n    if not checklist_note_found:\n        tap($create_note)\n        tap($checklist_type)\n        tap($add_note_ok)\ntap($checklist_item_list.match('Read a Book')[0])\ntap($move_selected_item_to_the_top)"}
{"task": "Open a note, make it the current note, and then search for 'important dates' within the current note.", "solution": "tap($open_note)\ntap($open_note_title_list[0])\ntap($search_within_note)\nset_text($search_text, 'important dates')"}
{"task": "Open a note (or create one if none exists) and edit the content of the note to say 'Meeting at 10am on Monday'", "solution": "if len($open_note_title_list) == 0:\n    tap($create_note)\n    tap($text_note_type)\n    tap($add_note_ok)\nelse:\n    tap($open_note)\n    tap($open_note_title_list[0])\nset_text($note_content, 'Meeting at 10am on Monday')\ntap($save_note)"}
{"task": "Create a checklist item 'Clean Room' if it does not exist, then delete the checklist item 'Clean Room'", "solution": "if len($checklist_item_list.match('Clean Room')) == 0:\n    tap($add_checklist_item)\n    set_text($add_checklist_item_title, 'Clean Room')\n    tap($add_checklist_item_ok)\nlong_tap($checklist_item_list.match('Clean Room')[0])\ntap($delete_selected_checklist_item)"}
{"task": "Change the theme color of the app to White", "solution": "tap($settings)\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)"}
