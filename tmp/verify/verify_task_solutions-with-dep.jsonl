{"task": "Starting from the home page, open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open settings from a checklist note by first creating a checklist note or opening an existing one.", "solution": "if len($checklist_item_list) == 0:\n    tap($create_note)\n    set_text($add_note_title, 'My Checklist')\n    tap($checklist_type)\n    tap($add_note_ok)\ntap($more_options_note)\ntap($settings)"}
{"task": "Create multiple checklist items and then sort the items of the current checklist by Custom", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Item 1')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Item 2')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Item 3')\ntap($add_checklist_item_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Starting from the home page, open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open a checklist note or create one if there is none, then open more options for the current checklist", "solution": "if len($checklist_item_list) == 0:\n    tap($create_note)\n    set_text($add_note_title, 'My Checklist')\n    tap($checklist_type)\n    tap($add_note_ok)\ntap($more_options_checklist)"}
{"task": "Open a checklist note or create one if there is none, then sort the current checklist by title.", "solution": "if len($open_note_title_list) == 0:\n    tap($create_note)\n    set_text($add_note_title, 'New Checklist')\n    tap($checklist_type)\n    tap($add_note_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($title_type)\ntap($sort_checklist_items_ok)"}
{"task": "Ensure a checklist is open and print the current checklist", "solution": "if len($open_note_title_list) == 0:\n    tap($create_note)\n    set_text($add_note_title, 'New Checklist')\n    tap($checklist_type)\n    tap($add_note_ok)\nfor item in $checklist_item_list:\n    print(get_text(item))"}
{"task": "Create a note titled 'Meeting Notes' if it doesn't already exist, then delete the 'Meeting Notes' note.", "solution": "existing_notes = $open_note_title_list\nnote_exists = False\nfor note in existing_notes:\n    if get_text(note) == 'Meeting Notes':\n        note_exists = True\n        selected_note = note\n        break\nif not note_exists:\n    tap($create_note)\n    set_text($add_note_title, 'Meeting Notes')\n    tap($text_note_type)\n    tap($add_note_ok)\n    existing_notes = $open_note_title_list\n    selected_note = existing_notes.match('Meeting Notes')[0]\ntap(selected_note)\ntap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Open the settings of the app and set the font size to 90%", "solution": "tap($settings)\ntap($set_font_size)\ntap($font_size_90%)"}
{"task": "Open a note or create one if there is none, and set the app to place the cursor at the end of the note.", "solution": "if len($open_note_title_list) == 0:\n    tap($create_note)\n    set_text($add_note_title, 'New Note')\n    tap($text_note_type)\n    tap($add_note_ok)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_place_cursor_to_the_end_of_note)"}
{"task": "Open the checklist containing the item 'Shopping List' and rename the checklist item 'Shopping List' to 'Groceries List'", "solution": "tap($open_note)\ntap($open_note_title_list.match('Shopping List')[0])\nlong_tap($checklist_item_list.match('Shopping List')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Groceries List')\ntap($rename_ok)"}
{"task": "If no checklist note is currently open, open one first, and then open more options for the current checklist.", "solution": "attributes = get_attributes($checklist_item_list)\nif not attributes['scrollable']:\n    tap($open_note)\n    tap($open_note_title_list[0])\ntap($more_options_checklist)"}
{"task": "Ensure that a note titled 'Grocery List' exists and is opened, then print the current note about the grocery list.", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Grocery List')\nif len(notes) == 0:\n    tap($create_note)\n    set_text($add_note_title, 'Grocery List')\n    tap($add_note_ok)\ntap(notes[0])\nprint(get_text($note_content))"}
{"task": "Open an existing note or create a new one if necessary, then show the title of the current note", "solution": "tap($open_note)\nnotes = $open_note_title_list\nif len(notes) == 0:\n    tap($create_note)\n    set_text($add_note_title, 'New Note')\n    tap($add_note_ok)\ntap(notes[0])\nprint(get_text($item_title))"}
{"task": "Check the current font size", "solution": "tap($more_options_note)\ntap($settings)\ntap($set_font_size)\nprint(get_text($font_size_types.match({'selected': true})[0]))"}
{"task": "Open a checklist note or create one if there is none, then rename the current checklist to 'Grocery List'", "solution": "if len($open_note_title_list) > 0:\n    tap($open_note)\n    checklist_notes = $open_note_title_list.match({\"text\": \"Checklist\"})\n    if len(checklist_notes) > 0:\n        tap(checklist_notes[0])\n        tap($more_options_checklist)\n        tap($rename_note)\n        set_text($rename_input, 'Grocery List')\n        tap($rename_ok)\n    else:\n        tap($create_note)\n        set_text($add_note_title, 'Grocery List')\n        tap($checklist_type)\n        tap($add_note_ok)\nelse:\n    tap($create_note)\n    set_text($add_note_title, 'Grocery List')\n    tap($checklist_type)\n    tap($add_note_ok)\ntap($more_options_checklist)\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)"}
{"task": "If a note with the title 'Grocery List' already exists, rename it; then create a new note with the title 'Grocery List'", "solution": "if len($open_note_title_list) > 0:\n    tap($open_note)\n    grocery_list_notes = $open_note_title_list.match('Grocery List')\n    if len(grocery_list_notes) > 0:\n        tap(grocery_list_notes[0])\n        tap($more_options_note)\n        tap($rename_note)\n        set_text($rename_input, 'Old Grocery List')\n        tap($rename_ok)\ntap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($text_note_type)\ntap($add_note_ok)"}
{"task": "Open the settings of the app from the home page.", "solution": "tap($settings)"}
{"task": "Ensure there is no checklist titled 'Weekend Tasks' and then create a new checklist note titled 'Weekend Tasks'", "solution": "if len($open_note_title_list) > 0:\n    tap($open_note)\n    weekend_tasks_notes = $open_note_title_list.match('Weekend Tasks')\n    if len(weekend_tasks_notes) > 0:\n        tap(weekend_tasks_notes[0])\n        tap($more_options_checklist)\n        tap($delete_note)\n        tap($delete_note_ok)\ntap($create_note)\nset_text($add_note_title, 'Weekend Tasks')\ntap($checklist_type)\ntap($add_note_ok)"}
{"task": "Set the theme color to auto light/dark", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\ntap($save_set_colors)"}
{"task": "Open the current note and then open more options for that note in the Notes APP", "solution": "tap($open_note)\ntap($more_options_note)"}
{"task": "Open the note 'Journal Entry' and navigate to the app settings.", "solution": "tap($open_note)\ntitles = $open_note_title_list.match('Journal Entry')\ntap(titles[0])\ntap($more_options_note)\ntap($settings)"}
{"task": "Make sure a checklist is open and is the current checklist, then open the more options menu of the current checklist.", "solution": "tap($more_options_checklist)"}
{"task": "Open the 'Christmas shopping' checklist, then delete my 'Christmas shopping checklist'", "solution": "tap($open_note)\ntitles = $open_note_title_list.match('Christmas shopping')\ntap(titles[0])\ntap($more_options_checklist)\ntap($delete_note)\ntap($delete_note_ok)"}
{"task": "Ensure a note titled 'Meeting Agenda' exists and create a shortcut for the note.", "solution": "tap($open_note)\ntitles = $open_note_title_list.match('Meeting Agenda')\ntap(titles[0])\ntap($more_options_note)\ntap($create_shortcut)"}
{"task": "If a note with the title 'Grocery List' already exists, rename the note title to something else, then create a new checklist note and title it 'Grocery List'", "solution": "\nexisting_notes = $open_note_title_list\nfor i in range(len(existing_notes)):\n    if get_text(existing_notes[i]) == 'Grocery List':\n        tap(existing_notes[i])\n        tap($more_options_note)\n        tap($rename_note)\n        set_text($rename_input, 'Grocery List (old)')\n        tap($rename_ok)\n        break\nback()\ntap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($checklist_type)\ntap($add_note_ok)\n"}
{"task": "Show the current font size directly from the home page", "solution": "\ntap($settings)\ntap($current_font_size)\ncurrent_font_size_options = $font_size_types\nfor option in current_font_size_options:\n    if get_attributes(option)['selected']:\n        selected_font_size = get_text(option)\n        break\nback()\nback()\nprint(selected_font_size)\n"}
{"task": "Open the settings of the notes app", "solution": "\ntap($settings)\n"}
{"task": "Open a text note or create one if there is none, then search within the current note for the keyword 'deadline'.", "solution": "\nopen_note_elements = $open_note_title_list\nif len(open_note_elements) > 0:\n    tap(open_note_elements[0])\nelse:\n    tap($create_note)\n    set_text($add_note_title, 'New Note')\n    tap($text_note_type)\n    tap($add_note_ok)\ntap($search_within_note)\nset_text($search_text, 'deadline')\n"}
{"task": "Open the more options menu for the current note from the home page.", "solution": "\nopen_note_elements = $open_note_title_list\nif len(open_note_elements) > 0:\n    tap(open_note_elements[0])\ntap($more_options_note)\n"}
{"task": "Open the settings page in the Notes app and scroll through it.", "solution": "tap($open_note)\ntap($settings)\nscroll($scroll_settings_page, 'down')\nscroll($scroll_settings_page, 'down')\nscroll($scroll_settings_page, 'down')"}
{"task": "Create checklist items, mark some as done, and then remove all done items from the current checklist.", "solution": "tap($open_note)\ntap($create_note)\ntap($checklist_type)\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Item 1')\ntap($add_checklist_item_ok)\ntap($checklist_item[0])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Item 2')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Item 3')\ntap($add_checklist_item_ok)\ntap($checklist_item[1])\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Open a checklist note containing 'Meeting at 3PM' if one is not already opened, then rename the checklist item 'Meeting at 3PM' to 'Team Meeting at 3PM'.", "solution": "if len($open_note_title_list) > 0:\n    tap($open_note_title_list.match('Meeting at 3PM'))\nelse:\n    tap($create_note)\n    set_text($add_note_title, 'Meeting at 3PM')\n    tap($checklist_type)\n    tap($add_note_ok)\nlong_tap($checklist_item_list.match('Meeting at 3PM')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Team Meeting at 3PM')\ntap($rename_ok)"}
{"task": "Open a checklist note or create one if there is none, then confirm the current checklist sorting type", "solution": "if len($open_note_title_list) > 0:\n    tap($open_note_title[0])\nelse:\n    tap($create_note)\n    set_text($add_note_title, 'New Checklist')\n    tap($checklist_type)\n    tap($add_note_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items_ok)"}
{"task": "Open any existing note or create a new note, then enable Incognito mode for keyboards in notes.", "solution": "if len($open_note_title_list) > 0:\n    tap($open_note_title[0])\nelse:\n    tap($create_note)\n    tap($text_note_type)\n    tap($add_note_ok)\ntap($more_options_note)\ntap($settings)\ntap($set_use_incognito_mode_of_keyboards)\ntap($exit_settings)"}
{"task": "Open a checklist note if none are currently opened, then move the checklist item 'Read a Book' to the top of the list.", "solution": "if len($checklist_item_list) == 0:\n    if len($open_note_title_list) == 0:\n        tap($open_note)\n        checklists = [title for title in $open_note_title_list if 'checklist' in get_text(title).lower()]\n        if len(checklists) > 0:\n            tap(checklists[0])\n    else:\n        tap($create_note)\n        set_text($add_note_title, 'New Checklist')\n        tap($checklist_type)\n        tap($add_note_ok)\nswitch_to_checklist = [item for item in $checklist_item_list if 'Read a Book' in get_text(item)]\nif len(switch_to_checklist) > 0:\n    long_tap(switch_to_checklist[0])\n    tap($move_selected_item_to_the_top)"}
{"task": "Open a note, make it the current note, and then search for 'important dates' within the current note.", "solution": "tap($open_note)\nnote_list = $open_note_title_list\nnote_index = 0\nfor i in range(len(note_list)):\n    if 'important dates' in get_text(note_list[i]).lower():\n        note_index = i\n        break\ntap(note_list[note_index])\ntap($note_content)\ntap($search_within_note)\nset_text($search_text, 'important dates')"}
{"task": "Open a note (or create one if none exists) and edit the content of the note to say 'Meeting at 10am on Monday'", "solution": "tap($open_note)\nif len($open_note_title_list) == 0:\n    tap($create_note)\n    set_text($add_note_title, 'New Note')\n    tap($text_note_type)\n    tap($add_note_ok)\nnote = $open_note_title_list[0]\ntap(note)\nset_text($note_content, 'Meeting at 10am on Monday')\ntap($save_note)"}
{"task": "Create a checklist item 'Clean Room' if it does not exist, then delete the checklist item 'Clean Room'", "solution": "if 'Clean Room' not in [get_text(item) for item in $checklist_item_list]:\n    tap($add_checklist_item)\n    set_text($add_checklist_item_title, 'Clean Room')\n    tap($add_checklist_item_ok)\nclean_room_items = [item for item in $checklist_item_list if 'Clean Room' in get_text(item)]\nif len(clean_room_items) > 0:\n    long_tap(clean_room_items[0])\n    tap($delete_selected_checklist_item)"}
{"task": "Change the theme color of the app to White", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_white)\ntap($save_set_colors)\ntap($exit_settings)"}
