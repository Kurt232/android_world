{"task": "Open the checklist containing the item 'Shopping List' and rename the checklist item 'Shopping List' to 'Groceries List'", "solution": "\ntap($open_note)\nopen_notes = $open_note_title_list\nfor i in range(len(open_notes)):\n    if get_text(open_notes[i]) == 'Shopping List':\n        tap(open_notes[i])\n        break\ntap($more_options_checklist)\nchecklist_items = $checklist_item_list\nfor j in range(len(checklist_items)):\n    if get_text(checklist_items[j]) == 'Shopping List':\n        long_tap(checklist_items[j])\n        tap($rename_selected_checklist_item)\n        set_text($rename_input, 'Groceries List')\n        tap($rename_ok)\n        break\nback()\n"}
{"task": "If no checklist note is currently open, open one first, and then open more options for the current checklist.", "solution": "\nif len($checklist_item_list) == 0:\n    tap($open_note)\n    tap($open_note_title_list[0])\n    back()\ntap($more_options_checklist)\n"}
{"task": "Ensure that a note titled 'Grocery List' exists and is opened, then print the current note about the grocery list.", "solution": "\ntap($open_note)    \nexists = False\nopen_notes = $open_note_title_list\nfor i in range(len(open_notes)):\n    if get_text(open_notes[i]) == 'Grocery List':\n        tap(open_notes[i])\n        exists = True\n        break\nif not exists:\n    tap($create_note)\n    set_text($add_note_title, 'Grocery List')\n    tap($text_note_type)\n    tap($add_note_ok)\ntap($more_options_note)\ntap($export_as_file)  # Temporary usage to print\n"}
{"task": "Open an existing note or create a new one if necessary, then show the title of the current note", "solution": "\nopen_notes = $open_note_title_list\nif len(open_notes) == 0:\n    tap($create_note)\n    set_text($add_note_title, 'New Note')\n    tap($text_note_type)\n    tap($add_note_ok)\nelse:\n    tap(open_notes[0])\nget_text($item_title)\n"}
{"task": "Check the current font size", "solution": "\ntap($settings)\ntap($current_font_size)\nback()\n"}
{"task": "Starting from the home page, open the more options menu for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open settings from a checklist note by first creating a checklist note or opening an existing one.", "solution": "tap($open_note)\nif len($open_note_title_list) == 0:\n\ttap($create_note)\n\ttap($checklist_type)\n\ttap($add_note_ok)\nelse:\n\ttap($open_note_title_list[0])\ntap($more_options_checklist)\ntap($settings)"}
{"task": "Create multiple checklist items and then sort the items of the current checklist by Custom", "solution": "tap($open_note)\nif len($open_note_title_list) == 0:\n\ttap($create_note)\n\ttap($checklist_type)\n\ttap($add_note_ok)\nelse:\n\ttap($open_note_title_list[0])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Item 1')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Item 2')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Item 3')\ntap($add_checklist_item_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)"}
{"task": "Starting from the home page, open more options for the current checklist", "solution": "tap($more_options_checklist)"}
{"task": "Open a checklist note or create one if there is none, then open more options for the current checklist", "solution": "tap($open_note)\nif len($open_note_title_list) == 0:\n\ttap($create_note)\n\ttap($checklist_type)\n\ttap($add_note_ok)\nelse:\n\ttap($open_note_title_list[0])\ntap($more_options_checklist)"}
{"task": "Open a checklist note or create one if there is none, then rename the current checklist to 'Grocery List'", "solution": "def task0():\n    tap($open_note)\n    if len($open_note_title_list) == 0:\n        back()\n        tap($create_note)\n        set_text($add_note_title, 'New Checklist')\n        tap($checklist_type)\n        tap($add_note_ok)\n    tap($more_options_note)\n    tap($rename_note)\n    set_text($rename_input, 'Grocery List')\n    tap($rename_ok)\ntask0()"}
{"task": "If a note with the title 'Grocery List' already exists, rename it; then create a new note with the title 'Grocery List'", "solution": "def task1():\n    tap($open_note)\n    grocery_list_notes = $open_note_title_list.match('Grocery List')\n    if len(grocery_list_notes) > 0:\n        tap(grocery_list_notes[0])\n        tap($more_options_note)\n        tap($rename_note)\n        set_text($rename_input, 'Renamed Grocery List')\n        tap($rename_ok)\n    back()\n    tap($create_note)\n    set_text($add_note_title, 'Grocery List')\n    tap($text_note_type)\n    tap($add_note_ok)\ntask1()"}
{"task": "Open the settings of the app from the home page.", "solution": "def task2():\n    tap($open_note)\n    back()\n    tap($more_options_checklist)\n    tap($settings)\ntask2()"}
{"task": "Ensure there is no checklist titled 'Weekend Tasks' and then create a new checklist note titled 'Weekend Tasks'", "solution": "def task3():\n    tap($open_note)\n    weekend_tasks = $open_note_title_list.match('Weekend Tasks')\n    if len(weekend_tasks) > 0:\n        for note in weekend_tasks:\n            tap(note)\n            tap($more_options_note)\n            tap($delete_note)\n            tap($delete_note_ok)\n        tap($open_note)\n    back()\n    tap($create_note)\n    set_text($add_note_title, 'Weekend Tasks')\n    tap($checklist_type)\n    tap($add_note_ok)\ntask3()"}
{"task": "Set the theme color to auto light/dark", "solution": "def task4():\n    tap($more_options_checklist)\n    tap($settings)\n    tap($set_colors)\n    tap($set_theme_color)\n    tap($theme_color_auto_light_dark)\n    tap($save_set_colors)\n    back()\ntask4()"}
{"task": "Open the current note and then open more options for that note in the Notes APP", "solution": "tap($open_note)\ntap($open_note_title_list[0])\ntap($more_options_note)"}
{"task": "Open the note 'Journal Entry' and navigate to the app settings.", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Journal Entry')\nif len(notes) > 0:\n    tap(notes[0])\n    tap($more_options_note)\n    tap($settings)"}
{"task": "Make sure a checklist is open and is the current checklist, then open the more options menu of the current checklist.", "solution": "tap($more_options_checklist)"}
{"task": "Open the 'Christmas shopping' checklist, then delete my 'Christmas shopping checklist'", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Christmas shopping')\nif len(notes) > 0:\n    tap(notes[0])\n    tap($more_options_checklist)\n    tap($delete_note)\n    tap($delete_note_ok)"}
{"task": "Ensure a note titled 'Meeting Agenda' exists and create a shortcut for the note.", "solution": "tap($open_note)\nnotes = $open_note_title_list.match('Meeting Agenda')\nif len(notes) > 0:\n    tap(notes[0])\n    tap($more_options_note)\n    tap($create_shortcut)"}
{"task": "Open a checklist note or create one if there is none, then sort the current checklist by title.", "solution": "try:\n    tap($open_note)\n    checklist_notes = $open_note_title_list.match('Checklist')\n    if len(checklist_notes) > 0:\n        tap(checklist_notes[0])\n    else:\n        back()\n        tap($create_note)\n        set_text($add_note_title, 'Checklist')\n        tap($checklist_type)\n        tap($add_note_ok)\n    tap($more_options_checklist)\n    tap($sort_checklist_items)\n    tap($title_type)\n    tap($sort_checklist_items_ok)\nexcept:\n    pass"}
{"task": "Ensure a checklist is open and print the current checklist", "solution": "try:\n    tap($open_note)\n    checklist_notes = $open_note_title_list.match('Checklist')\n    if len(checklist_notes) > 0:\n        tap(checklist_notes[0])\n    else:\n        back()\n        tap($create_note)\n        set_text($add_note_title, 'Checklist')\n        tap($checklist_type)\n        tap($add_note_ok)\n    items = [get_text(item) for item in $checklist_item_list]\n    for item in items:\n        print(item)\nexcept:\n    pass"}
{"task": "Create a note titled 'Meeting Notes' if it doesn't already exist, then delete the 'Meeting Notes' note.", "solution": "try:\n    tap($open_note)\n    notes = $open_note_title_list.match('Meeting Notes')\n    if len(notes) == 0:\n        back()\n        tap($create_note)\n        set_text($add_note_title, 'Meeting Notes')\n        tap($text_note_type)\n        tap($add_note_ok)\n    else:\n        tap(notes[0])\n    tap($more_options_note)\n    tap($delete_note)\n    tap($delete_note_ok)\n    back()\nexcept:\n    pass"}
{"task": "Open the settings of the app and set the font size to 90%", "solution": "try:\n    tap($more_options_note)\n    tap($settings)\n    tap($set_font_size)\n    tap($font_size_90%)\n    tap($sort_checklist_items_ok)\n    tap($exit_settings)\nexcept:\n    pass"}
{"task": "Open a note or create one if there is none, and set the app to place the cursor at the end of the note.", "solution": "try:\n    tap($open_note)\n    notes = $open_note_title_list\n    if len(notes) > 0:\n        tap(notes[0])\n    else:\n        back()\n        tap($create_note)\n        set_text($add_note_title, 'New Note')\n        tap($text_note_type)\n        tap($add_note_ok)\n    tap($more_options_note)\n    tap($settings)\n    tap($set_place_cursor_to_the_end_of_note)\n    tap($exit_settings)\nexcept:\n    pass"}
{"task": "If a note with the title 'Grocery List' already exists, rename the note title to something else, then create a new checklist note and title it 'Grocery List'", "solution": "tap($open_note)\nfor i in range(len($open_note_title_list)):\n    if get_text($open_note_title_list[i]) == 'Grocery List':\n        tap($open_note_title_list[i])\n        tap($more_options_note)\n        tap($rename_note)\n        set_text($rename_input, 'Grocery List - Old')\n        tap($rename_ok)\n        back()\n        back()\n        break\ntap($create_note)\nset_text($add_note_title, 'Grocery List')\ntap($checklist_type)\ntap($add_note_ok)\n"}
{"task": "Show the current font size directly from the home page", "solution": "tap($settings)\ntap($current_font_size)\nfont_sizes = $font_size_types\nfor idx in range(len(font_sizes)):\n    if get_attributes(font_sizes[idx])[\"selected\"]:\n        print(get_text(font_sizes[idx]))\n        break\nback()"}
{"task": "Open the settings of the notes app", "solution": "tap($settings)"}
{"task": "Open a text note or create one if there is none, then search within the current note for the keyword 'deadline'.", "solution": "tap($open_note)\nif len($open_note_title_list) == 0:\n    tap($create_note)\n    set_text($add_note_title, 'New Note')\n    tap($text_note_type)\n    tap($add_note_ok)\ntap($open_note_title_list[0])\nback()\ntap($search_within_note)\nset_text($search_text, 'deadline')"}
{"task": "Open the more options menu for the current note from the home page.", "solution": "tap($open_note)\ntap($open_note_title_list[0])\ntap($more_options_note)"}
{"task": "Open the settings page in the Notes app and scroll through it.", "solution": "tap($settings)\nscroll($scroll_settings_page, 'down')"}
{"task": "Create checklist items, mark some as done, and then remove all done items from the current checklist.", "solution": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Task 1')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Task 2')\ntap($add_checklist_item_ok)\ntap($checklist_item[0])\ntap($checklist_item[1])\ntap($more_options_checklist)\ntap($remove_done_checklist_items)"}
{"task": "Open a checklist note containing 'Meeting at 3PM' if one is not already opened, then rename the checklist item 'Meeting at 3PM' to 'Team Meeting at 3PM'.", "solution": "tap($open_note)\nfor i in range(len($open_note_title_list)):\n    if 'Meeting at 3PM' in get_text($open_note_title_list[i]):\n        tap($open_note_title_list[i])\n        break\ntap($checklist_item_list.match('Meeting at 3PM')[0])\nlong_tap($checklist_item_list.match('Meeting at 3PM')[0])\ntap($rename_selected_checklist_item)\nset_text($rename_input, 'Team Meeting at 3PM')\ntap($rename_ok)"}
{"task": "Open a checklist note or create one if there is none, then confirm the current checklist sorting type", "solution": "tap($open_note)\nif len($open_note_title_list) == 0:\n    tap($create_note)\n    set_text($add_note_title, 'New Checklist')\n    tap($checklist_type)\n    tap($add_note_ok)\ntap($more_options_checklist)\ntap($sort_checklist_items)\nback()"}
{"task": "Open any existing note or create a new note, then enable Incognito mode for keyboards in notes.", "solution": "tap($open_note)\nif len($open_note_title_list) == 0:\n    tap($create_note)\n    set_text($add_note_title, 'New Note')\n    tap($text_note_type)\n    tap($add_note_ok)\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_use_incognito_mode_of_keyboards)"}
{"task": "Open a checklist note or create one if there is none, then move the checklist item 'Buy Groceries' to the top of the list.", "solution": "tap($switch_item)\nif len($checklist_item_list) == 0:\n    tap($create_note)\n    set_text($add_note_title, 'New Checklist Note')\n    tap($checklist_type)\n    tap($add_note_ok)\n\nfor i in range(len($checklist_item_list)):\n    if get_text($checklist_item_list[i]) == 'Buy Groceries':\n        long_tap($checklist_item_list[i])\n        tap($move_selected_item_to_the_top)\n        break"}
{"task": "Ensure a note is open and then delete all text in the current note.", "solution": "tap($open_note)\ntap($open_note_title_list[0])\ntap($note_content)\nset_text($note_content, '')"}
{"task": "Verify the checklist contains the item 'Plan Vacation' and rename it to 'Book Flights'.", "solution": "for i in range(len($checklist_item_list)):\n    if get_text($checklist_item_list[i]) == 'Plan Vacation':\n        long_tap($checklist_item_list[i])\n        tap($rename_selected_checklist_item)\n        set_text($rename_input, 'Book Flights')\n        tap($rename_ok)\n        break"}
{"task": "Open a checklist and then open more options for the current checklist", "solution": "tap($switch_item)\nif len($checklist_item_list) == 0:\n    tap($create_note)\n    set_text($add_note_title, 'New Checklist Note')\n    tap($checklist_type)\n    tap($add_note_ok)\ntap($more_options_checklist)"}
{"task": "Add the text 'meeting notes' to the note and then search for the text 'meeting notes' within the current note.", "solution": "tap($note_content)\nset_text($note_content, 'meeting notes')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'meeting notes')"}
{"task": "Open a checklist note if none are currently opened, then move the checklist item 'Read a Book' to the top of the list.", "solution": "\nif get_text($item_title) != 'No Opened Checklist Note': \n    tap($open_note)\n    notes = $open_note_titles\n    for i in range(len(notes)):\n        if 'Checklist' in get_text(notes[i]):\n            tap(notes[i])\n            break\n\nif 'Read a Book' in [get_text(item) for item in $checklist_item_list]:\n    checklist_items = $checklist_item_list\n    for i in range(len(checklist_items)):\n        if get_text(checklist_items[i]) == 'Read a Book':\n            long_tap(checklist_items[i])\n            tap($move_selected_item_to_the_top)\n            break\nelse:\n    print('The checklist item Read a Book does not exist')\n"}
{"task": "Open a note, make it the current note, and then search for 'important dates' within the current note.", "solution": "\ntap($open_note)\nnotes = $open_note_titles\nfor i in range(len(notes)):\n    if 'important dates' in get_text(notes[i]):\n        tap(notes[i])\n        break\ntap($search_within_note)\nset_text($search_text, 'important dates')\n"}
{"task": "Open a note (or create one if none exists) and edit the content of the note to say 'Meeting at 10am on Monday'", "solution": "\nif len($open_note_titles) == 0:\n    tap($create_note)\n    set_text($add_note_title, 'New Note')\n    tap($text_note_type)\n    tap($add_note_ok)\n    set_text($note_content, 'Meeting at 10am on Monday')\nelse:\n    tap($open_note)\n    tap($open_note_titles[0])\n    set_text($note_content, 'Meeting at 10am on Monday')\n"}
{"task": "Create a checklist item 'Clean Room' if it does not exist, then delete the checklist item 'Clean Room'", "solution": "\nif get_text_list($checklist_item_list).count('Clean Room') == 0:\n    tap($add_checklist_item)\n    set_text($add_checklist_item_title, 'Clean Room')\n    tap($add_checklist_item_ok)\n\nfor i in range(len($checklist_item_list)):\n    if get_text($checklist_item_list[i]) == 'Clean Room':\n        long_tap($checklist_item_list[i])\n        tap($delete_selected_checklist_item)\n        break\n"}
{"task": "Change the theme color of the app to White", "solution": "\ntap($settings)\nscroll($scroll_settings_page, 'down')\ntap($set_colors)\ntap($set_theme_color)\ntap($theme_color_types.match('White'))\ntap($save_set_colors)\n"}
