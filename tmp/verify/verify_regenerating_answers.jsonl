{"3": "```json\n{\n    \"Plan\": \"From the current UI, first tap the 'open_note' button to check if there are any existing notes to open. If there are no notes, I will then proceed to create a new note. After opening or creating a note, I will get the title of the current note.\",\n    \"Script\": \"tap($open_note)\\nopen_notes = $open_note_title_list\\nif len(open_notes) == 0:\\n    tap($create_note)\\n    set_text($add_note_title, 'New Note')\\n    tap($text_note_type)\\n    tap($add_note_ok)\\nelse:\\n    tap(open_notes[0])\\nnote_title = get_text($item_title)\\nprint(note_title)\"\n}\n```"}
{"0": "```json\n{\n    'Plan': 'From the current UI state, we need to complete the task by first opening the desired checklist note with the title \"Shopping List\", then renaming the checklist item \"Shopping List\" to \"Groceries List\". Since accessing more checklist options failed in the previous script, we should account for that in the new plan.',\n    'Script': '''\n# From the current UI state, open the note containing the title \"Shopping List\"\nopen_notes = $open_note_title_list\n\nfor i in range(len(open_notes)):\n    if get_text(open_notes[i]) == 'Shopping List':\n        tap(open_notes[i])\n        break\n\n# Ensuring that the open_note action correctly opened the note and displaying the checklist items\nchecklist_items = $checklist_item_list\nfor j in range(len(checklist_items)):\n    if get_text(checklist_items[j]) == 'Shopping List':\n        long_tap(checklist_items[j])\n        tap($rename_selected_checklist_item)\n        set_text($rename_input, 'Groceries List')\n        tap($rename_ok)\n        break\n    '''\n}\n```"}
{"10": "```json\n{\n    'Plan': 'From the current UI, I need to check if there are any notes available to open. If there are no notes, I need to create a new checklist note. After opening or creating the note, I will rename it to \"Grocery List\". The more_options_note element is not available in the current UI state, so I need to take a different approach by directly opening the note and then renaming it.',\n    'Script': '''\n# Check if there are any notes available to open\nif len($open_note_title_list) == 0:\n    # No notes available, create a new checklist note\n    tap($create_note)\n    set_text($add_note_title, 'New Checklist')\n    tap($checklist_type)\n    tap($add_note_ok)\nelse:\n    # Open the first available note\n    tap($open_note_title_list[0])\n\n# Open more options for the current note\ntap($more_options_note)\n\n# Rename the current note to 'Grocery List'\ntap($rename_note)\nset_text($rename_input, 'Grocery List')\ntap($rename_ok)\n    '''\n}\n```"}
{"32": "```json\n{\n    'Plan': 'Since the former script failed to execute correctly, we need to ensure we properly open the note containing \"Meeting at 3PM\". First, we should handle the situation where the note might already be opened. We'll search for and open the note if it is not already displayed, then rename the checklist item \"Meeting at 3PM\" to \"Team Meeting at 3PM\".',\n    'Script': \n    '''\n    def open_note_by_title(title):\n        tap($open_note)\n        for i in range(len($open_note_title_list)):\n            if title in get_text($open_note_title_list[i]):\n                tap($open_note_title_list[i])\n                return True\n        return False\n\n    def rename_checklist_item(old_name, new_name):\n        long_tap($checklist_item_list.match(old_name)[0])\n        tap($rename_selected_checklist_item)\n        set_text($rename_input, new_name)\n        tap($rename_ok)\n\n    # Check if the note containing 'Meeting at 3PM' is already opened\n    note_opened = False\n    for item in $checklist_item_list:\n        if 'Meeting at 3PM' in get_text(item):\n            note_opened = True\n            break\n\n    if not note_opened:\n        note_opened = open_note_by_title('Meeting at 3PM')\n\n    if note_opened:\n        rename_checklist_item('Meeting at 3PM', 'Team Meeting at 3PM')\n    else:\n        print(\"Note 'Meeting at 3PM' not found\")\n    '''\n}\n```"}
{"7": "```json\n{\n    'Plan': 'From the current UI, tap on the open_note button. Then, if there are no notes in the open_note_title_list, create a new checklist note. After creating a new checklist note or opening the first note, proceed to add three checklist items. Finally, open more options for the checklist and sort the checklist items by Custom.',\n    'Script': \n    '''\ntap($open_note)\n\nif len($open_note_title_list) == 0:\n    tap($create_note)\n    tap($checklist_type)\n    tap($add_note_ok)\nelse:\n    tap($open_note_title_list[0])\n\nfor i in range(3):\n    tap($add_checklist_item)\n    set_text($add_checklist_item_title, f'Item {i+1}')\n    tap($add_checklist_item_ok)\n\ntap($more_options_checklist)\ntap($sort_checklist_items)\ntap($custom_type)\ntap($sort_checklist_items_ok)\n    '''\n}\n```"}
{"31": "```json\n{\n    'Plan': 'From the current UI state, the goal is to navigate back to the checklist to create checklist items, mark some as done, and remove all done items. First, exit the current state and navigate back to the checklist view where checklist items can be added. Then, create two checklist items, mark them as done, and remove them.',\n    'Script': '''back()\nback()\ntap($switch_item)\ntap($add_checklist_item)\nset_text($add_note_title, 'Task 1')\ntap($add_note_ok)\ntap($add_checklist_item)\nset_text($add_note_title, 'Task 2')\ntap($add_note_ok)\ntap($checklist_item[0])\ntap($checklist_item[1])\ntap($more_options_checklist)\ntap($remove_done_checklist_items)'''\n}\n```"}
{"2": "```json\n{\n    \"Plan\": \"The script needs to backtrack to a state where it can ensure the note titled 'Grocery List' exists and can be opened. From the current UI, it should first tap back to return to the open note dialog. Then it should follow the appropriate steps to check if the 'Grocery List' note exists and open it or create it if it doesn't, and finally print the contents of the note.\",\n    \"Script\": \"\\n# Since there is no element indicating we are on the notes list or creating a new note, backtrack to the appropriate state\\nback()\\n\\nexists = False\\nopen_notes = $open_note_title_list\\n# Ensure that open_note_titles is visible\\nfor i in range(len(open_notes)):\\n    if get_text(open_notes[i]) == 'Grocery List':\\n        tap(open_notes[i])\\n        exists = True\\n        break\\n\\nif not exists:\\n    tap($create_note)\\n    set_text($add_note_title, 'Grocery List')\\n    tap($text_note_type)\\n    tap($add_note_ok)\\n\\n# Print the content of the current note\\nprint(get_text($note_content))\"\n}\n```"}
{"33": "```json\n{\n    \"Plan\": \"From the current UI, which shows the elements 'save_set_colors', 'open_note_title_list', and 'create_note', I will first check if there are any existing notes. If there are no notes, I will create a new checklist note. Then, I will open the 'more options' for the checklist and confirm the current sorting type by tapping on 'Sort by'.\",\n    \"Script\": \"\\\nif len($open_note_title_list) == 0:\\n\\\n    tap($create_note)\\n\\\n    set_text($add_note_title, 'New Checklist')\\n\\\n    tap($checklist_type)\\n\\\n    tap($add_note_ok)\\n\\\nelse:\\n\\\n    tap($open_note_title_list[0])\\n\\\ntap($more_options_checklist)\\n\\\ntap($sort_checklist_items)\\n\\\nback()\"\n}\n```"}
{"36": "```json\n{\n    'Plan': 'From the current UI, tap on open_note to open the list of notes, select the first note, and clear its content by using set_text on note_content.',\n    'Script': \"\"\"tap($open_note)\ntap($open_note_title_list[0])\ntap($note_content)\nset_text($note_content, '')\n\"\"\"\n}\n```"}
{"38": "```json\n{\n    \"Plan\": \"From the current UI state, I will navigate to open a note, switch to a checklist item, and then open the more options for that checklist.\",\n    \"Script\": \"\ntap($open_note)\nopen_note_titles = $open_note_title_list\nfor idx in range(len(open_note_titles)):\n    tap(open_note_titles[idx])\n    if len($checklist_item_list) > 0:\n        tap($more_options_checklist)\n        break\n\"\n}\n```"}
{"34": "```json\n{\n    \"Plan\": \"Since the former script contains a bug during navigation, we need to first handle the current UI state. If there are no existing notes, create a new one, open the settings menu and then enable the 'Use Incognito mode of keyboards' setting.\",\n    \"Script\": \"\\n\"\n              \"if len($open_note_title_list) == 0:\\n\"\n              \"    tap($create_note)\\n\"\n              \"    set_text($add_note_title, 'New Note')\\n\"\n              \"    tap($text_note_type)\\n\"\n              \"    tap($add_note_ok)\\n\"\n              \"else:\\n\"\n              \"    tap($open_note_title_list[0])\\n\"\n              \"\\n\"\n              \"tap($more_options_note)\\n\"\n              \"tap($settings)\\n\"\n              \"scroll($scroll_settings_page, 'down')\\n\"\n              \"tap($set_use_incognito_mode_of_keyboards)\\n\"\n              \"back()\\n\"\n}\n```"}
{"41": "```json\n{\n    'Plan': 'Identify the element selector for the open note titles list, iterate through the list to find the note with \"important dates\" in its title, tap on it to open it, then initiate a search within the current note.',\n    'Script': '''\n# Tap to open the notes list\ntap($open_note)\n\n# Get the list of open note titles\nnotes = $open_note_title_list\n\n# Iterate through the list to find and tap the note with \"important dates\" in the title\nfor i in range(len(notes)):\n    if 'important dates' in get_text(notes[i]):\n        tap(notes[i])\n        break\n\n# Tap the search button within the current note\ntap($search_within_note)\n# Set the search text to 'important dates'\nset_text($search_text, 'important dates')\n'''\n}\n```"}
{"37": "```json\n{\n    'Plan': 'Since the current UI state does not display the checklist items, first open a note by tapping the open_note element, then proceed to iterate over the checklist items to find and rename the specified item.',\n    'Script': '\ntap($open_note)\n# Waiting until the note is opened and the checklist items are displayed\nfor i in range(len($checklist_item_list)):\n    if get_text($checklist_item_list[i]) == \"Plan Vacation\":\n        long_tap($checklist_item_list[i])\n        tap($rename_selected_checklist_item)\n        set_text($rename_input, \"Book Flights\")\n        tap($rename_ok)\n        break\n'\n}\n```"}
{"42": "```json\n{\n    'Plan': 'From the current UI state, first tap on the \"open_note\" button to check if any notes exist. If notes exist, open the first note. If no notes exist, create a new note and set its content to the required text \"Meeting at 10am on Monday\".',\n    'Script': 'tap($open_note)\\n\\n# Check if there are any existing note titles\\ntitles = $open_note_title_list\\nif len(titles) == 0:\\n    tap($create_note)\\n    set_text($add_note_title, \\'New Note\\')\\n    tap($text_note_type)\\n    tap($add_note_ok)\\n    set_text($note_content, \\'Meeting at 10am on Monday\\')\\nelse:\\n    tap(titles[0])\\n    set_text($note_content, \\'Meeting at 10am on Monday\\')'\n}\n```"}
{"40": "```json\n{\n    'Plan': 'First, I will check if there is an open checklist note by tapping on \"open_note\" and checking the note titles. If there is no checklist note currently open, I will open one. Then, I will find the item \"Read a Book\" in the checklist items and move it to the top.',\n    'Script': '''\ntap($open_note)\nnotes = $open_note_title_list\nchecklist_found = False\nfor i in range(len(notes)):\n    if 'Checklist' in get_text(notes[i]):\n        tap(notes[i])\n        checklist_found = True\n        break\n\nif checklist_found:\n    if 'Read a Book' in [get_text(item) for item in $checklist_item_list]:\n        checklist_items = $checklist_item_list\n        for i in range(len(checklist_items)):\n            if get_text(checklist_items[i]) == 'Read a Book':\n                long_tap(checklist_items[i])\n                tap($move_selected_item_to_the_top)\n                break\n    else:\n        print('The checklist item Read a Book does not exist')\n'''\n}\n```"}
{"35": "```json\n{\n    'Plan': 'Since there is no checklist present in the former script, it tries to create a new checklist but fails. Starting from the current UI, the plan will be to first open a checklist if exists or create a new one, and then move the item \"Buy Groceries\" to the top of the list.',\n    'Script': '\ntap($open_note)\n\n# Try to open an existing checklist\nchecklist_found = False\nfor i in range(len($open_note_title_list)):\n    tap($open_note_title_list[i])\n    if len($checklist_item_list) > 0:\n        checklist_found = True\n        break\n\n# If no checklist is found, create a new checklist\nif not checklist_found:\n    tap($create_note)\n    set_text($add_note_title, \"New Checklist Note\")\n    tap($checklist_type)\n    tap($add_note_ok)\n\n# Move the checklist item \"Buy Groceries\" to the top of the list\nfor i in range(len($checklist_item_list)):\n    if get_text($checklist_item_list[i]) == \"Buy Groceries\":\n        long_tap($checklist_item_list[i])\n        tap($move_selected_item_to_the_top)\n        break\n    '\n}\n```"}
{"43": "```json\n{\n    \"Plan\": \"1. Tap 'Open Note' to open a note, which will display the checklist items. 2. Check if 'Clean Room' is present in the checklist. 3. If 'Clean Room' is not present, add it. 4. Locate the 'Clean Room' item and delete it.\",\n    \"Script\": \"tap($open_note)\\n\\n# Check if 'Clean Room' exists in the checklist\\nchecklist_items = [get_text(item) for item in $checklist_item_list]\\nif 'Clean Room' not in checklist_items:\\n    tap($add_checklist_item)\\n    set_text($add_checklist_item_title, 'Clean Room')\\n    tap($add_checklist_item_ok)\\n\\n# Delete 'Clean Room' item\\nfor i in range(len($checklist_item_list)):\\n    if get_text($checklist_item_list[i]) == 'Clean Room':\\n        long_tap($checklist_item_list[i])\\n        tap($delete_selected_checklist_item)\\n        break\"\n}\n```"}
{"44": "```json\n{\n    'Plan': 'To change the theme color of the app to White from the current UI, I will: 1) scroll the settings page up to find the \"set_colors\" button, 2) tap on \"set_colors\", 3) tap on \"set_theme_color\", 4) select \"White\" from the theme color options, 5) save the new theme color.',\n    'Script': \n    'scroll($scroll_settings_page, \"up\")\\n'\n    'tap($set_colors)\\n'\n    'tap($set_theme_color)\\n'\n    'tap($theme_color_types.match(\"White\"))\\n'\n    'tap($save_set_colors)'\n}\n```"}
