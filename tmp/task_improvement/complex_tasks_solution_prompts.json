{
  "0-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new checklist note titled 'Vacation Packing List', add three items: 'Passport', 'Sunscreen', and 'Tickets', confirm it, and then remove the item 'Sunscreen'.\ntask2: Create a text note titled 'Team Meeting Notes', center-align the text, and set the font size of the app to 125%.\ntask3: Create a new text note titled 'Office Supplies', confirm it, change the theme color to dark red, and then set the font size of the app to 90%.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "1-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new note titled 'Grocery List', add 'milk, eggs, bread', and save it.\ntask2: Export the note titled 'Meeting Notes' and print the note titled 'To Print'.\ntask3: Rename the note titled 'Old Title' to 'New Title' and lock it.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "1-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a shortcut for the note titled 'Frequently Used', and set the font size to 250% in the app.\ntask2: Open the note titled 'Vacation Plans', change the font size to 200%, and export it as a file.\ntask3: Create a new checklist note titled 'Weekly Tasks', add an item 'buy groceries', and remove done items from a checklist titled 'To Do'.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "2-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new note titled \"Shopping List\" and edit the content to \"Buy milk, eggs, and bread.\"\ntask2: Open the note titled \"Vacation Plans\", change the app font size to 125%, and confirm the sort type of the checklist as date created.\ntask3: Create a new checklist type note titled \"Office Tasks\" and add an item \"Prepare presentation\".\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "2-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Open the note titled \"Recipes\", input \"chocolate\" to search within the note, and highlight the next matching text.\ntask2: Create a new note titled \"Books to Read\", then change the app font size to 150%, and edit the content to \"The Great Gatsby\".\ntask3: Create a checklist for \"Weekly Tasks\" and add items \"Finish report\" and \"Plan meeting\".\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "2-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Open the note titled \"Recipes\", change the app font size to 200%, and search for the previous matching text \"sugar\".\ntask2: Create a new note titled \"Movies to Watch\" and edit the content to \"Inception.\"\ntask3: Open the note titled \"Weekly Tasks\" and add a new item \"Grocery shopping\".\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "3-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new checklist note titled 'Project Planning', set the font size to 150%, and add a new checklist item titled 'Define project scope'.\ntask2: Switch to the next note in the list, highlight the word 'deadline', increase the font size to 250%, and change the background color to light gray.\ntask3: Enable autosave notes in the settings, change the text color of the note to blue, and add a new checklist item titled 'Review progress'.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "4-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Rename the current note to 'Meeting Notes - April 2024' and then print it.\ntask2: Export the current note as a PDF file and create a shortcut on the home screen for the note titled 'Grocery List'.\ntask3: Create a new note titled 'Home Repairs' and add a checklist item 'Call plumber', setting the theme color of the Notes app to Dark Red.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "4-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Open the note titled 'Meeting Notes', increase the font size to 175%, and add the text 'Discussed project timelines and budget.'\ntask2: Create a new note with the title 'Weekly Planner' and adjust the text alignment to center, then set the font size to 150%.\ntask3: Show a note picker on startup in the Notes app and automatically show the keyboard when the Notes app starts.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "4-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new note titled 'Daily Journal', use a monospaced font for consistent typing experience, and show the word count on the screen.\ntask2: Set the place cursor to the end of the note titled 'To-Do List' every time you open it and enable line wrapping in the Notes app.\ntask3: Delete the note named 'Old Project Ideas' and then create a new note titled 'Project Planning' with the text type.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "5-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Search for the word 'meeting' in the 'Project Plan' note, highlight the next instance, then modify its content to say 'Team meeting is scheduled for Wednesday'.\ntask2: Create a new note titled 'Travel Checklist', add 'Passport', then set the font size to 150% and make the links clickable from settings.\ntask3: Set the font size to 250% in the 'Recipes' note, then center align the text before exiting the settings menu.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "5-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Export all your notes into a PDF file, then turn off the setting for displaying save success messages.\ntask2: Enable line wrap and set the app to show a note picker on startup from settings, then exit settings of the app.\ntask3: Search for the previous 'deadline' text in the 'Work Tasks' note and highlight the next instance, then close the search box.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "5-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new note titled 'Holiday Gifts', set it to 'Checklist' type, add 'Buy chocolates', and then toggle the font size to 75%.\ntask2: Set the font size to 175% in the 'Workout Plan' note, then search for the word 'routine', highlight the next instance, and exit settings.\ntask3: Modify the note called 'Office Tasks' to say 'Prepare the monthly report by Friday', then search and highlight the word 'report', and finally enable line wrap from settings.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "6-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Open the note titled 'Meeting Notes', change the background color to light gray, then save the edits made to the note.\ntask2: Create a new text note with the title 'Vacation Ideas', increase the font size to 125%, then add a content summary of today's meeting.\ntask3: Set the app icon color to green and change the primary color of the app to purple, then scroll through the settings page to find the data backup option.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "6-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Open the note titled 'Grocery List', add a new checklist item titled 'Groceries', then sort the items using custom sorting.\ntask2: Create a new text note titled 'Book List', set the font size to 75%, then create a shortcut for this note.\ntask3: Open the note titled 'Workout Plan', adjust the font size to 90%, then save the current note and switch to the next note.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "6-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Delete the note titled 'Old Receipts' and then view information about the Notes app.\ntask2: Create a new text note titled 'Grocery List', then add the title 'Work Meeting Notes' to another new note.\ntask3: Import notes from an external source and lock the note containing sensitive information, then confirm.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "7-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new checklist note titled \"Weekend Chores\" with tasks and switch the theme color to dark red\ntask2: Open the note titled \"Grocery List\", change the text color to blue, and set the background color of the app to light grey\ntask3: Create a checklist titled \"Travel Packing\", confirm sorting the checklist items by title, then export all notes to local storage\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "7-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Enable autosave notes feature, create a new text note, and set the font size to 150% for the new note\ntask2: Create a new note titled \"Meeting Notes\", switch the app theme color to dark, and enable automatic backups for notes\ntask3: Switch to the note titled \"Workout Plan\", set the app font size to 175%, and enable display of save success messages\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "7-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a checklist titled \"Home Improvement\" with tasks, sort the checklist items by the date they were created, and set the app to autosave notes\ntask2: Create a new note titled \"Grocery List\", change the text color of the note to blue, and import notes from your email account\ntask3: Create a new checklist note, set the app icon color to green, and set the background color of the app to light grey\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "8-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new checklist note titled 'Grocery List', add 'Eggs', 'Milk', and 'Bread' as items, then sort them by title.\ntask2: Open the note titled 'Travel Details', switch its type to text note, and confirm the changes.\ntask3: Create a new text note titled 'Daily Schedule', set the font size of the app to 75%, and add '9 AM: Meeting with team' to the note.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "8-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Set the Notes app to show a note picker on startup, then create a new note with the title 'Project Ideas'.\ntask2: Create a note named 'Home Renovation', change the theme color of the Notes app to light, then add 'Kitchen remodeling' to the note.\ntask3: Set autosave notes on in the settings, create a text note titled 'Work Summary', and add 'Complete project report' to it.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "8-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Rename the current note to 'Budget Plan', adjust the app font size to 60%, and save the changes.\ntask2: Create a new note named 'Exercise Routine', set the type of note to checklist, and add 'Push-ups', 'Sit-ups', 'Running' to it.\ntask3: Open the note titled 'Project Timeline', highlight the next matched text for the word 'deadline', and save any changes.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "9-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new note titled 'Business Plan', add a checklist item with the title 'Budget Planning', and highlight the next occurrence of 'market research' in the note\ntask2: Open the note titled 'Vacation Packing', move the checklist item 'Sunglasses' to the bottom of the list, and export the note as a file\ntask3: Add a new checklist item with the title 'Weekend Plan', create tasks 'Grocery Shopping', 'Clean the House', and then save the note\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "9-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new note titled 'Client Meetings', add 'Remember to call John tomorrow', find the word 'meeting' within the note, and then edit the content to include 'Prepare presentation slides'\ntask2: Open the note titled 'Grocery List', decrease the font size to 50%, delete the checklist item 'Old Meeting Agenda', and save the note\ntask3: Rename the current note to 'Weekly Agenda', add a checklist item 'Book hotels for trips', move the item 'Book hotels for NY and LA' to the top of the list, and set the font size of the app to 60%\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "10-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Open the note titled 'Project Timeline', search for the term 'project deadline' within it, and then close the search box after looking at the results.\ntask2: Switch to the previous note item, then edit its content to 'Tomorrow meeting at 10:00' and save the changes.\ntask3: Create a new note with the title 'Vacation Packing', set the font size to 60%, and enable automatic backups.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "11-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Highlight and search for all instances of the word \"meeting\" in the note titled \"Project Updates\", then switch to the previous note and change the font size to 175%.\ntask2: Create a new note titled \"Travel Itinerary\" and then set the font size to 200%, followed by toggling the app theme color to black & white.\ntask3: Search for the word \"budget\" in the note titled \"Annual Financial Plan\" and highlight the next matching text within the current note, then sort the checklist items by title.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "11-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Save the changes to the note titled \"Holiday Plans\" and then import notes from local storage, toggle the setting to display save success messages.\ntask2: Add an item titled \"Buy Groceries\" to the checklist \"Weekend Chores\" and then scroll down to view the next item on the checklist.\ntask3: Search for the previous occurrence of the word \"meeting\" in the note \"Team Strategy\", highlight it, then close the search box.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "12-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new note titled \"Weekend Plans\", customize widget colors to blue and white, and then switch the theme to a custom setting.\ntask2: Delete the note \"Old Notes\", then create a new note titled \"Grocery List\" and add a checklist item \"Grocery Shopping\" at the top.\ntask3: Change the font size to 250%, enable line wrap, and then set the app to automatically save notes every 5 minutes.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "12-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a shortcut for the note \"ToDo List\", lock the note \"Personal Diary\", and then switch to the next note in the Notes app.\ntask2: Use monospaced font for the note \"Snippet Collection\", then search for the word \"meeting\" and highlight it in the current note.\ntask3: Lock the note \"Personal Diary\" with a password, set the app to show a recent notes picker on launch, and then display the keyboard immediately when starting a new note.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "13-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new checklist type note titled 'Grocery List', add a new checklist item named 'Buy groceries', and then print the checklist.\ntask2: Open the note titled 'Read Later', search for the term 'budget' and highlight the next instance, and then close the search box after finding the needed information.\ntask3: Change the text color of the note to blue, set the font size of the note to 150%, and then export the note titled 'Vacation Itinerary' as a PDF file.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "13-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Set the alignment of the app, switch the theme color to dark red in the Notes app, and finally lock the current note with a password.\ntask2: Edit the content of the current note to 'Discuss budget allocations', create a shortcut for the current note, and then maximize the font size to 300% in the Notes app.\ntask3: Rename the current note to 'Meeting Notes April 27', scroll to the next note or checklist item, and customize the widget colors to blue and yellow.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "13-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Search for the term 'budget' in the current note, remove all completed items from the current checklist, and then export the note as a PDF file.\ntask2: Switch to the next note in the list, set the font size to 125%, and print the current note.\ntask3: Change the text color of the note to blue, lock the current note with a password, and then search for the term 'budget' in the current note highlighting the next instance.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "14-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new note with the title 'Travel Itinerary', set its type to text, and enable line wrapping while writing.\ntask2: Set the theme color of the app to Light, change the font size to 250%, and ensure monospaced font is enabled.\ntask3: Create a new note with the title 'Meeting Notes', set its type to checklist, and make sure links and emails are clickable.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "15-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new checklist note titled 'Vacation Packing List', rename the first item to 'Essentials', move it to the top, and export the note as a PDF file.\ntask2: Create a text note titled 'Weekly Report', highlight the previous matched text in the search within the note, change the theme to black and white, and then print the note.\ntask3: Switch to the next note by swiping down using the scrollbar, set the theme color to dark red, increase the font size to 250%, and export all notes to the 'Documents' folder.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "16-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Switch to the next note, change the font size to 150%, and search for the term 'meeting' in the current note.\ntask2: Create a new note with the title 'Vacation Plans', set the font size to 125%, and add the item 'Book hotel' to the checklist.\ntask3: Open the note titled 'Grocery List', switch to the previous item in the checklist, and highlight the term 'milk'.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "16-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Change the current note title to 'Project Notes', display the word count for the notes, and enable automatic backups in settings.\ntask2: Import the notes from my previously saved file, sort the checklist items by date created, and customize widget colors to blue and yellow.\ntask3: Go to the color settings and adjust the app icon color to green, save the color modifications made, and close the color settings window.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "17-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create three new notes named \"Daily Journal\", \"Research Notes\", and \"Shopping List\" with appropriate types, then rename the \"Shopping List\" note to \"Grocery List\".\ntask2: Create a new checklist note titled \"Vacation Checklist\", add some items, move one item to the top, and rename another item \"Packing Essentials\".\ntask3: Set up automatic backups and change the font size of the app to 125%, then print the current note.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "18-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new checklist note titled 'Weekend Packing List', change the app theme to dark red, and set automatic backups to enabled.\ntask2: Open the note titled 'Workout Routine', highlight the next instance of 'milk' in the note search, and change the font size to 125%.\ntask3: Create a new text note titled 'Movie List', change the app theme to black and white, and save the current color settings.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "18-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Scroll through the list of open note titles, then open the note titled 'Project Ideas', and change the note type to text for the note titled 'Book Ideas'.\ntask2: Create a new text note titled 'Travel Itinerary', change the primary color of the app to teal, and change the font size to 150%.\ntask3: Create a new checklist note titled 'Daily Tasks', change the app theme to light, and close the color settings window after saving the current color settings.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "18-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new text note titled 'Birthday Party Ideas', change the app font size to 200%, and set automatic backups to enabled.\ntask2: Create a new checklist note titled 'Books to Read', open the note titled 'Holiday Plans', and change the app theme to white.\ntask3: Create a new text note titled 'Daily Diary', change the font size to 90%, then change the theme color to custom, and save the color settings.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "19-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Automatically back up notes, change the theme color to black and white, and display save success messages.\ntask2: Add a new note titled 'Conference Schedule' as a checklist, rename the first item to 'Keynote Speaker', and move it to the top.\ntask3: Create a new text note titled 'Vacation Plans', lock it, and confirm the lock.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "19-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Open the note 'Work Report', print it, and then rename it to 'Annual Report'.\ntask2: Add a new note titled 'Groceries', add 'Milk' and 'Bread' as checklist items, and then delete the item 'Bread'.\ntask3: Set the app theme to dark red, then change it back to light.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "19-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new checklist note titled 'Study Plan', rename an item to 'Subjects to Cover', and remove all completed items.\ntask2: Change the theme to white, print the note 'Project Proposal', and exit settings menu.\ntask3: Enable incognito mode for the keyboard and show the keyboard automatically on startup.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "20-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new note titled 'Fitness Goals', select checklist type, rename the first item to 'Workout Plan', then move it to the top of the list.\ntask2: Adjust the app to have a green primary color and set the font size to 100%.\ntask3: Create a new text note titled 'Research Notes', save the note, then set the font size to 50%.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "20-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a checklist note titled 'Shopping List', rename the first item to 'Grocery Items', then delete this item.\ntask2: Import notes from a backup file and export the current note with its settings.\ntask3: Create a checklist note titled 'Shopping List', rename the first item to 'Groceries', move this item to the bottom of the list, then confirm the note creation.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "21-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a shortcut for the note titled 'Grocery List' on the home screen and customize the widget colors to blue and white.\ntask2: Add a new note with the title 'Workout Plan' as a text note, set the font size to 100%, and enable clickable links and emails in notes.\ntask3: Rename the selected checklist item to 'Fruits and Vegetables', move it to the top of the list, and then delete the selected item.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "21-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Add a new note with the title 'Home Repairs' as a checklist, enable automatic backups, and set the background color to light grey.\ntask2: Create a note titled 'Vacation Plans' and set the font size to 75%, enable autosave notes feature, and display the current word count.\ntask3: Customize the app icon color to red, change the text color to blue, and set the font size to 60%.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "21-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Add a new note titled 'Code Snippets' with a monospaced font, enable line wrapping, and set the keyboard to Incognito mode.\ntask2: Enable the autosave notes feature, then sort all checklist items by date created, and exit the settings menu.\ntask3: Delete the selected checklist item, create a new text note titled 'Mindfulness Practices', and display the keyboard automatically when opening the app.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "22-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new checklist note titled 'Weekend Tasks', select the checklist type, add items 'Buy groceries', 'Clean the house', 'Visit friends', and confirm it.\ntask2: Open the note 'Project Proposal', scroll through the settings page to view advanced options, and then enable automatic backups.\ntask3: Create a new text note titled 'Grocery List', confirm it, and then change the font size to 175%.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "22-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Add a new note titled 'Work Notes' and select the text note type, enable line wrap, and then show word count in the notes.\ntask2: Scroll down the settings page, set the theme color to Dark, and then increase the font size to 200%.\ntask3: Open a new note and set its title to 'Shopping List', select the 'Checklist' type for the new note, and then sort the items of the current checklist by Custom.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "22-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new checklist note titled 'Party Checklist', confirm it, rename the selected checklist item to 'Party Items', and lock the note 'Personal Diary'.\ntask2: Set the theme color of the app to Custom, then enable the incognito mode of keyboards and show the keyboard on startup.\ntask3: Create a new text note titled 'Grocery List', activate the use of monospaced font, then increase the font size to 300%, and confirm it.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "23-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new checklist note titled 'Travel Checklist', add items 'Passport', 'Tickets', and 'Sunscreen' to it, then move 'Sunscreen' to the top of the list.\ntask2: Create a new text note named 'Conference Outline', set the text alignment to justified, then set the font size to 125%.\ntask3: Add a new note titled 'Weekly Plan' with checklist type, rename the first item to 'Gym Session', and move it to the bottom.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "23-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new text note called 'Recipe ideas', switch to a monospaced font, and enable line wrap in settings.\ntask2: Create a new checklist note titled 'Shopping List', add items 'Milk', 'Bread', 'Eggs', then delete 'Bread'.\ntask3: Create a new text note called 'Work Timetable', set the cursor to the end of the note when opened and set the theme color to auto light/dark.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "23-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new checklist note titled 'Meeting Agenda', add items 'Introduction', 'Project Updates', and 'Q&A', then move 'Q&A' to the top.\ntask2: Add a new text note titled 'Daily Journal', lock the note with the password '12345', and enable incognito mode for the keyboard.\ntask3: Add a new note titled 'Project Notes' with text note type, then enable the setting to show a note picker on startup.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "24-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Change the text color to green and set the font size to 175% in the Notes App.\ntask2: Rename the current note to \"Work Tasks\" and export it as a PDF file.\ntask3: Enable automatic backups and display success messages when notes are saved.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "24-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Scroll down the settings page, set the alignment of the text to center and enable line wrap.\ntask2: Set the background color of the app to yellow and customize the widget colors to blue and yellow.\ntask3: Delete the note \"Old Project Ideas\" after confirming and enable autosave notes in settings.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "25-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Customize the Notes App settings for optimal night usage.\ntask2: Set up the Notes App for an efficient meeting workflow.\ntask3: Prepare the Notes App for daily task management and reporting.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "25-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Optimize the Notes App for detailed coding notes.\ntask2: Export project notes and prepare it for printing.\ntask3: Configure the Notes App for secure writing and note management.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "26-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new text note titled 'Grocery List', add checklist items 'Milk', 'Bread', 'Eggs', and move 'Bread' to the top.\ntask2: Create a new note titled 'Daily Journal', lock it, and set the font size of the app to 75%.\ntask3: Create a new note titled 'Project Plan' with checklist type, add item 'Review documentation', rename it to 'Review project documentation', and move it to the bottom.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "26-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Add a new note titled 'Meal Prep' with checklist type, add items 'Buy ingredients', 'Prep meals', remove the done items, and print the note.\ntask2: Create a shortcut for the note titled 'Vacation Plans' on my home screen and export all my notes to my Dropbox account.\ntask3: Create a new text note titled 'Project Ideas', lock it, and set the primary color of the app to dark blue.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "26-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Add a new checklist note titled 'Weekly Tasks', add items 'Laundry', 'Groceries', 'Email', move 'Email' to the top, and rename it to 'Send Emails'.\ntask2: Add a new note titled 'To-Do List', add items 'Vacuum', 'Dust', 'Mop', delete 'Dust', and move 'Mop' to the top.\ntask3: Change the app's font size to 50%, set the note font size to 125%, and display a success message after saving the notes.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "27-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Prepare a note for today's team meeting, title it 'Team Meeting', set the font size to 150%, and export it as a PDF.\ntask2: Set the app theme to light gray, change the app icon color to green, and save the settings.\ntask3: Create a checklist titled 'Grocery List', add some items, and then remove all done items.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "27-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Import notes from Google Drive, lock the first note, and print the second note.\ntask2: Create a new note for workout routines, rename it to 'Workout Routine', and set it as a checklist.\ntask3: Create a note titled 'Meeting Notes', set the font size to 125%, and export it as a file.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "27-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Add a new checklist for 'Workout Plan', rename the first item to 'Cardio', and move it to the top.\ntask2: Set the font size of the app to 125%, enable automatic backups, and open the About section to view app information.\ntask3: Add a note titled 'Ideas', lock it, and confirm its creation.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "28-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Export the note 'Monthly report' as a file and then lock the note immediately after that\ntask2: Change the font size of the app to 200%, print the current note, and then set the font size back to 75%\ntask3: Open the settings page, set the font size to 60%, and then exit the settings page\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "28-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Rename the selected checklist item 'get groceries' to 'buy groceries' and then immediately delete the checklist item 'Wash car'\ntask2: Lock the note 'Personal diary' and then confirm the lock\ntask3: Open the note titled 'Important document', open the attached file, and then lock the note\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "28-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Set the font size of the app to 300% to assist viewing, print the note titled 'Recipe', and then set the font size back to 100%\ntask2: Show the word count permanently at the bottom of the app and then use a monospaced font for better readability of code snippets\ntask3: Align text to the center for a formatted look of meeting notes and then set the theme color to dark red for night time usage\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "29-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Sort the checklist items in 'Travel Planning' by their creation date, then remove all completed items.\ntask2: Enable automatic nightly backups at 2 AM and confirm the deletion of the note titled 'Outdated Meeting Notes'.\ntask3: Export notes related to the project 'Office Renovation' to a zip file and print the current note.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "29-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Rename the note titled 'Final Report' to 'Project Launch Details' and enable the use of monospaced font in notes.\ntask2: Set the app's font size to 60%, show the word count for each note, and create a shortcut on the home screen for the note titled 'Annual Budget'.\ntask3: Close the color settings menu without making changes, then open and print the file attached to the note 'Quarterly Review'.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "29-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Remove done items from the current checklist, then automatically save any changes in notes.\ntask2: Scroll through all available settings and enable the use of a monospaced font in notes.\ntask3: Print the note containing the minutes of the 'Marketing Meeting March 2024' and set the font size to 50%.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "30-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new note with the title \"Ideas for Project\", select the text note type, set the font size to 150%, and export it as a PDF file.\ntask2: Create a new note with the title \"Travel Packing List\", select the checklist type, sort the checklist items by title, and export it from the notes app.\ntask3: Set the font size in the notes app to 150%, change the primary color to blue, and save these settings.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "30-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Add a new note titled \"Meeting Notes April 2024\", confirm creation, set the cursor to place at the end of the note, and make all links and emails clickable.\ntask2: Set the theme color to dark red, customize the widget colors to blue and green, and close the color setting popup.\ntask3: Import notes in the notes app and display the word count for the documents.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "30-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Turn on the display save success messages feature, set the font size to 100%, and export notes from the notes app.\ntask2: Create a new note with the title \"Creative Ideas\", select the text note type, and use monospaced font for better readability in the note\ntask3: Add a new note titled \"Grocery List\", select the checklist type, sort the items by title, and move the selected checklist item to the bottom of the list.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "31-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Rename the current note to 'Travel Itinerary', then set the font size to 150% for easier reading, and finally enable line wrap to avoid horizontal scrolling while reading long notes.\ntask2: Create a shortcut for the note 'Project Plan', set the cursor position to the end of the note, and switch the theme to auto light/dark mode based on current lighting conditions.\ntask3: Input 'Workout Schedule' as the new name of the current note, set the font size of the app to the smallest setting at 60%, and ensure the keyboard shows immediately on startup for quick input.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "31-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Enable incognito mode on the keyboard for enhanced privacy, then remove done items from the current checklist and make all links and email addresses in the note clickable.\ntask2: Set the primary color of the app to blue to match my phone's theme, increase the font size to 150% for easier reading, and display a note picker on startup to quickly access recent notes.\ntask3: Switch to the note 'Weekend shopping list,' make all links and email addresses clickable, and print the current note.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "32-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Save the current theme colors and then set the application theme color to dark in the Notes app.\ntask2: Adjust the app icon color to green and then enable autosave for notes in the Notes app.\ntask3: Enable automatic backups and then change the application theme color to black and white in the Notes app.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "32-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Set the font size to 75% and then sort the checklist items by title in the Notes app.\ntask2: Make the font size as large as possible and then enable the line wrap setting in the Notes app.\ntask3: Increase the font size to 175% for better readability and then move the selected checklist item to the top of the list in the Notes app.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "32-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Enable the display save success messages and then customize the colors of the widget in the Notes app.\ntask2: Export notes and then exit the settings page in the Notes app.\ntask3: Change the text color of the app to blue and set the cursor placement to the end of the note in the Notes app.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "33-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Change the theme color of the app to dark, then increase the font size to 200%, and set the cursor to be placed at the end of the note by default.\ntask2: Sort the items of the current checklist by Title and change the background color of the app to pink.\ntask3: Export all the notes, set the theme color of the app to dark red, and activate the option to make links and emails clickable.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "33-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Set the font size in the Notes app to 300%, change the app icon color to black, and customize the widget colors to green.\ntask2: Change the text color to blue, sort the checklist by the date they were created, and export notes.\ntask3: Import notes from my external storage, set the theme color to a custom color, and save the chosen colors of the app.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "33-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Set the cursor to the end of note in the Notes app, change the font size to 150%, and sort the items of the current checklist by Custom.\ntask2: Change the theme color of the app to white, increase the font size to 90%, and exit the settings page.\ntask3: Set the theme color to black and white, activate the option to make links and emails clickable, and close the setting colors pop-up window.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "34-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a new checklist note titled 'Shopping List', add three items 'Milk', 'Bread', and 'Eggs', and then move 'Eggs' to the top of the list.\ntask2: Create a new note titled 'Work Plan', set alignment to justified, and export it as a PDF file.\ntask3: Create a new note titled 'Daily Reflections', set the alignment to center, and change the font size to 150%.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "34-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Add a new text note with the title 'Fitness Goals' and customize the widget colors to match the primary color.\ntask2: Create a new checklist note titled 'Travel Checklist', add items 'Passport' and 'Tickets', move 'Passport' to the bottom, and rename the note to 'Vacation Prep'.\ntask3: Create a new note titled 'Project Notes', set the theme color of the app to dark, and lock the note titled 'Personal Diary'.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "34-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Add a new note titled 'Weekly Overview' and then print the note titled 'Recipe Collection'.\ntask2: Create a new note titled 'Tech Innovations', set the theme to auto light/dark mode, and import notes from the download folder.\ntask3: Open the PDF file associated with the note titled 'Project Proposal' and then save the current color settings.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "35-complex_task_3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Set the font size in the Notes app to 90%, export the checklist titled \"Holiday Shopping\" as a PDF file, and then exit the settings menu.\ntask2: Customize the colors of the widget in the Notes app, enable automatic backups for the notes, and save the custom color settings of the application.\ntask3: Set the font size in the Notes app to 125%, show a note picker on startup, and import notes from the backup file located in the \"Backup\" folder.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "35-complex_task_6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Remove done items from the checklist \"Daily Task\", sort the checklist items by their titles, and confirm custom sort for the checklist items.\ntask2: Change the font size in the Notes app to 175%, enable line wrapping in notes, and display a message when a note is successfully saved.\ntask3: Make all links and emails in the Notes app clickable, enable the incognito mode for typing notes, and confirm renaming the note to \"Groceries List\" by tapping OK.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "36-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Import notes from the backup file in the Downloads folder, change the background color of the app to white, and set the font size of the app to 50%\ntask2: Create a shortcut for the note titled 'Grocery List', then lock the note titled 'Personal Diary', and enable custom sorting for checklist items\ntask3: Change the app theme to dark mode, customize the widget colors to match the new theme, and set the place cursor to the end of the note\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "36-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Export notes to the Downloads directory, set the sorting preference of checklist items to Title, and print the note containing the project outline\ntask2: Turn off autosave for notes, change the app icon color to green, and increase the font size of the app text to 150%\ntask3: Delete the note titled 'Old Receipts', make links and emails in the notes clickable, and confirm and close the checklist sorting options\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "37-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Enable the use of monospaced font and set the font size to 150% for better readability in notes\ntask2: Change the application theme to dark red, then enable automatic backups\ntask3: Rename the current note to \"Project Plan\" and activate the word count display\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "37-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Sort the checklist items by date created and export the current checklist as a PDF file\ntask2: Change the theme color to white and decrease the font size to 50% for a more minimalistic view\ntask3: Set the application to show a note picker on startup and import notes through settings\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "37-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Enable automatic backups, then change the font size to 125% for clarity\ntask2: Sort the checklist items in a custom type and rename the selected checklist item to \"Key Task\"\ntask3: Switch the theme color to Auto light/dark and ensure the font size is set to 100%\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "38-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Change the font size to 75%, scroll through the settings page, and set the alignment of the text to center.\ntask2: Rename the current note to 'Meeting Notes', sort the checklist items by the date they were created, and enable automatic backups for my notes.\ntask3: Export the current note as a PDF file, enable display of save success messages, and create a shortcut for the current note on the home screen.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "38-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Set the font size of the app to 100%, change the theme color of the app to Dark Red, and show the word count in my notes.\ntask2: Use monospaced font in my notes, autosave my notes, and decrease the font size to 60%.\ntask3: Set the font size of the app to 150%, confirm the sort type of the current checklist items, and remove all completed items from the checklist.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "39-Change app icon color, then lock the current note and confirm": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Lock the note 'Personal Diary', confirm with a password, and then view the about page of the notes app.\ntask2: Set the font size in the Notes app to 300%, change the text color in the notes app, then sort the checklist items by title.\ntask3: Change the app icon color in the notes app, then lock the current note and confirm the lock.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "39-Adjust font size for better readability, change alignment, then sort checklist": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Scroll down the settings page to access the advanced security options, then set the app to display a success message whenever settings are successfully saved, and confirm.\ntask2: Import notes into the app, set the font size in the Notes app to 100%, and then change the background color in the notes app.\ntask3: Set the font size in the Notes app to 125% for better readability, change the alignment setting, and then sort the checklist items by custom order.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "40-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Set the theme color to Dark, change the font size to 75%, and enable autosave notes in the app.\ntask2: Set the font size to 125%, change the text color to red, and export notes to my Dropbox account.\ntask3: Enable automatic backups to iCloud every day, set the theme color to Black & White, and change the background color to yellow.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "40-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Set the font size to 100%, rename the current note to \"Meeting Notes\", and enable autosave notes every 5 minutes.\ntask2: Set the font size to 300%, change the theme color to Dark red, and close the theme color settings window.\ntask3: Change the font size to 50%, change the app icon color to green, and save the current theme color settings.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "41-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Set the font size to 150%, turn on the auto light/dark theme, and sort checklist items by title in the Notes app.\ntask2: Enable autosave, change the font size to 75%, and export notes from the Notes app.\ntask3: Turn on automatic backups, set the theme color to white, and sort checklist items by date created in the Notes app.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "41-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Set the font size to 90%, change the text color to blue, and import notes into the Notes app.\ntask2: Set the font size to 125%, change the theme color to light grey, and confirm the sort type before closing the sorting popup in the Notes app.\ntask3: Change the font size to 100%, set the theme color to light, and sort checklist items by custom order in the Notes app.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "41-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Change the font size to 90%, sort checklist items by title, and enable the autosave feature in the Notes app.\ntask2: Set the font size to 175%, turn on auto light/dark theme, and export notes from the Notes app.\ntask3: Set the theme color to white, change the font size to 200%, and sort checklist items by date created in the Notes app.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "42-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Change the app theme color to dark red and set the font size to 250% to improve readability.\ntask2: Rename the selected checklist item to 'Buy Groceries' and move it to the top of the list in the Notes app.\ntask3: Import notes in the app and change the text color and background color for better visibility.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "42-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Enable clickable links and email addresses in my notes and enable line wrap for easier reading of long notes.\ntask2: Set the font size in the Notes app to 100% and after that, change the font size to 150%.\ntask3: Customize widget colors and change the primary color to blue.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "42-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Delete the selected checklist item and then sort the remaining items of the current checklist by custom order.\ntask2: Change the text color in the Notes app and set the cursor to the end of the note when I open the app.\ntask3: Set the font size in the app to 90% and then change it to 125% for better readability.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "43-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Configure the Notes app for better productivity by enabling all the enhanced features and aesthetics.\ntask2: Prepare the app for a presentation by optimizing font and color settings and ensuring data security.\ntask3: Set the application to focus on editing with readability and user interface settings optimized.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "44-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Change the text color to blue and then set the font size to 150% in the Notes app.\ntask2: Delete the current note after confirming and then print the next note in the Notes app.\ntask3: Switch the Notes app theme to dark mode and then increase the font size to 200%.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "44-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Lock the current note with the password 'Secure123' and then change the background color to light gray.\ntask2: Switch the theme to light mode, then adjust the font size to 50% in the Notes app.\ntask3: Import notes from Google Drive backup and then set the app icon color to green.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "44-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Sort the checklist items by date created, and then delete the selected checklist item.\ntask2: Set the theme to dark red and then change the primary color to teal in the Notes app.\ntask3: Toggle the theme color to auto light/dark mode, then adjust the font size to 175%.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "45-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Set the font size to 150%, change the theme color of the notes app to auto light/dark mode, and enable autosave.\ntask2: Sort all checklist items by title, show the word count at the bottom of each note, and set the font to a monospaced style.\ntask3: Change the font size to 90%, set the app theme to switch between light and dark modes based on time, and ensure that the keyboard is shown when starting the app.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "46-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Change the font size to 150% and print the current note titled \"Project Plan\".\ntask2: Rename the current note to \"Shopping List\", create a shortcut on the home screen, and set the primary color to blue.\ntask3: Customize the widget colors to purple, set the app theme color to auto light/dark, and reduce the font size in the Notes app to 50%.\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "46-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Set the font size to 75%, switch to the Black & White theme, and lock the current note titled \"To-Do List\".\ntask2: Adjust the primary color to teal, set the font size to 200%, and export the current note titled \"Weekly Report\" as a file.\ntask3: Change the background color to light gray, set the font size to 100%, and delete the current note titled \"Old Notes\".\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "47-complex task 3": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a note titled \"Vacation Plans\" with a checklist type, add checklist items \"Book Flights\", \"Reserve Hotel\", \"Pack Bags\", and then move \"Pack Bags\" to the top of the list\ntask2: Create a note titled \"Grocery List\" with a checklist type, add items \"Buy Milk\", \"Buy Bread\", \"Buy Eggs\", and then delete the item \"Buy Bread\"\ntask3: Add a new note titled \"Project Proposal\" with a text note type, set the font size to 200%, enable clickable links, and set the cursor to appear at the end of the note when opening it\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "47-complex task 6": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a checklist type note titled \"Home Renovation Tasks\", add items \"Paint Walls\", \"Install New Cabinets\", and \"Replace Flooring\", then rename \"Replace Flooring\" to \"Change Flooring\"\ntask2: Create a text note titled \"Conference Notes\", set the font size to 250% for a presentation, and lock the note and confirm\ntask3: Rename the selected checklist item to \"Important Task\", move it to the top, and increase the font size to 175%\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**",
  "47-complex task 9": "A Notes app in smartphone has the following important UI elements:\n\n\nelement: remove_done_checklist_items \n\tDescription: a button \"Remove done items\"; used to remove the done items of the current checklist \n\tFunction: tap to clost the more options popup window \n\tDependency: this UI element could be interacted after tap(more_options_checklist)\n\nelement: exit_settings \n\tDescription: a button \"Back\"; used to exit the settings page \n\tFunction: tap to exit the settings page \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: add_note_types \n\tDescription: a element tuple including text_note_type and checklist_type; used to show the types of the new note \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: create_shortcut \n\tDescription: a button \"Create shortcut\"; used to create a shortcut of the current note \n\tFunction: tap to create a shortcut of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: add_note_title \n\tDescription: a input \"label\"; used to input the title of the new note \n\tFunction: set text to input the title of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: open_note_title \n\tDescription: a button; used to open the note with the title \n\tFunction: tap to switch the note or checklist \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: lock_note_ok \n\tDescription: a button \"OK\"; used to confirm the lock of the current note \n\tFunction: tap to close the lock popup window \n\tDependency: this UI element could be interacted after tap(lock_note)\n\nelement: rename_input \n\tDescription: a input; used to input the new name of the current note \n\tFunction: set text to input the new name of the current note \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: rename_ok \n\tDescription: a button \"OK\"; used to confirm the new name of the current note \n\tFunction: tap to close the rename popup window \n\tDependency: this UI element could be interacted after tap(rename_note)\n\nelement: text_note_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: about \n\tDescription: a button \"About\"; used to show the information of the app \n\tFunction: tap to switch the about page of the app \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: scroll_settings_page \n\tDescription: a scrollbar; used to scroll the settings page \n\tFunction: swipe down to get more settings \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: open_file \n\tDescription: a button \"Open file\"; used to open the file of the current note \n\tFunction: tap to switch the file manager to open the file of the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: print_note \n\tDescription: a button \"Print\"; used to print the current note \n\tFunction: tap to print the current note \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: open_note_title_list \n\tDescription: A list of open_note_title elements; used to display the titles of notes to open \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(open_note)\n\nelement: checklist_type \n\tDescription: a checkbox; used to select the type of the new note \n\tFunction: select or unselect the type of the new note \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: export_as_file \n\tDescription: a button \"Export as file\"; used to export the current note as a file \n\tFunction: tap to switch the file manager to export the current note as a file \n\tDependency: this UI element could be interacted after tap(more_options_note) or this UI element could be interacted after tap(more_options_checklist)\n\nelement: delete_note_ok \n\tDescription: a button \"Delete\"; used to confirm the delete of the current note \n\tFunction: tap to close the delete popup window \n\tDependency: this UI element could be interacted after tap(delete_note)\n\nelement: add_checklist_item \n\tDescription: a button; used to add a new checklist item \n\tFunction: tap to open a popup window of checklist item, containing, add_checklist_item_title, add_more_checklist_item, add_to_the_top, add_checklist_item_ok, add_checklist_item_cancel \n\tDependency: this UI element could be reached in the checklist screen of the app\n\nelement: set_enable_line_wrap \n\tDescription: a checkbox \"Enable line wrap\"; used to enable line wrap \n\tFunction: select or unselect to enable line wrap \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_prev_item \n\tDescription: a button; used to switch the previous item of checklist or note \n\tFunction: tap to switch to the previous item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_monospaced_font \n\tDescription: a checkbox \"use monospaced font\"; used to use monospaced font \n\tFunction: select or unselect to use monospaced font \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_keyboard_on_startup \n\tDescription: a checkbox; used to set the show keyboard on startup \n\tFunction: select or unselect to set the show keyboard on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: item_title \n\tDescription: a text showed current item title; used to show the title of the current item \n\tFunction:  \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_show_a_note_picker_on_startup \n\tDescription: a checkbox; used to set show a note picker on startup \n\tFunction: select or unselect to set show a note picker on startup \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_item \n\tDescription: a scrollbar; used to switch previous or next item which is a checklist or a note \n\tFunction: swipe up to switch to the previous item of checklist or note; swipe down to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_alignment \n\tDescription: a button \"Alignment\"; used to set the alignment of the app \n\tFunction: tap to open a popup window to set the alignment of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_search_box \n\tDescription: a button; used to close the search box of matching text within the current note \n\tFunction: tap to close the search box \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: search_text \n\tDescription: a input; used to input the text to search within the current note \n\tFunction: set text to input the text to search within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: save_note \n\tDescription: a button; used to save the current note after changed text_note_content \n\tFunction: tap to save the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: note_content \n\tDescription: a input; used to show a large editable text area; used to edit the content of the current note \n\tFunction: set text to edit the content of the current note \n\tDependency: this UI element could be reached in the note screen of the app\n\nelement: set_autosave_notes \n\tDescription: a checkbox; used to set autosave notes \n\tFunction: select or unselect to set autosave notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: switch_to_next_item \n\tDescription: a button; used to switch the next item of checklist or note \n\tFunction: tap to switch to the next item of checklist or note \n\tDependency: No dependency, this UI element is in the main screen of the app. \n\nelement: set_use_incognito_mode_of_keyboards \n\tDescription: a checkbox \"Use Incognito mode of keyboards\"; used to use Incognito mode of keyboards \n\tFunction: select or unselect to use Incognito mode of keyboards \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_show_word_count \n\tDescription: a checkbox \"Show word count\"; used to show the word count of the app \n\tFunction: select or unselect to show the word count of the app \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: next_matchhed_text \n\tDescription: a button \"Next\"; used to search the next matching text within the current note \n\tFunction: tap to highlight the next matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_make_links_and_emails_clickable \n\tDescription: a checkbox \"Make links and emails clickable\"; used to make links and emails clickable \n\tFunction: select or unselect to make links and emails clickable \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: set_place_cursor_to_the_end_of_note \n\tDescription: a checkbox; used to set the place cursor to the end of note \n\tFunction: select or unselect to set the place cursor to the end of note \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: prev_matched_text \n\tDescription: a button \"Previous\"; used to search the previous matching text within the current note \n\tFunction: tap to highlight the previous matching text within the current note \n\tDependency: this UI element could be interacted after tap(search_within_note)\n\nelement: set_widget_colors \n\tDescription: a button \"Customize widget colors\"; used to customize the colors of the widget \n\tFunction: tap to open a popup window to set colors of the widget \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: font_size_60% \n\tDescription: a checkbox \"60%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_125% \n\tDescription: a checkbox \"125%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_auto_light_dark \n\tDescription: a checkbox \"Auto light / dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_250% \n\tDescription: a checkbox \"250%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: theme_color_types \n\tDescription: a element tuple including auto_light_drak, light, dark, dark_red, white, black_white, custom; used to show the theme color types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: font_size_75% \n\tDescription: a checkbox \"75%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_300% \n\tDescription: a checkbox \"300%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_175% \n\tDescription: a checkbox \"175%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_150% \n\tDescription: a checkbox \"150%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_90% \n\tDescription: a checkbox \"90%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_200% \n\tDescription: a checkbox \"200%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: font_size_100% \n\tDescription: a checkbox \"100%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_app_icon_color \n\tDescription: a button \"App icon color\"; used to set the app icon color of the app \n\tFunction: tap to open a popup window to set the app icon color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_types \n\tDescription: a element tuple including 50%, 60%, 75%, 90%, 100%, 125%, 150%, 175%, 200%, 250%, 300%; used to show the font size types of the app \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: set_background_color \n\tDescription: a button \"Background color\"; used to set the background color of the app \n\tFunction: tap to open a popup window to set the background color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_primary_color \n\tDescription: a button \"Primary color\"; used to set the primary color of the app \n\tFunction: tap to open a popup window to set the primary color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_text_color \n\tDescription: a button \"Text color\"; used to set the text color of the app \n\tFunction: tap to open a popup window to set the text color of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: font_size_50% \n\tDescription: a checkbox \"50%\"; used to set the font size of the app \n\tFunction: select or unselect to set the font size of the app \n\tDependency: this UI element could be interacted after tap(set_font_size) or this UI element could be interacted after tap(current_font_size)\n\nelement: title_type \n\tDescription: a checkbox \"Title\"; used to sort the items of the current checklist by title \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: import_notes \n\tDescription: a button; used to import notes \n\tFunction: tap to import notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: export_notes \n\tDescription: a button; used to export notes \n\tFunction: tap to export notes \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: close_set_colors \n\tDescription: a button \"Close\"; used to close the popup window of setting colors \n\tFunction: tap to close the popup window \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: set_enable_automatic_backups \n\tDescription: a checkbox; used to set enable automatic backups \n\tFunction: select or unselect to set enable automatic backups \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_types \n\tDescription: a element tuple including sort_by_title, sort_by_date_created, sort_by_custom; used to show the types of sorting the items of the current checklist \n\tFunction:  \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: set_display_save_success_messages \n\tDescription: a checkbox; used to set display save success messages \n\tFunction: select or unselect to set display save success messages \n\tDependency: this UI element could be interacted after tap(settings)\n\nelement: sort_checklist_items_ok \n\tDescription: a button \"OK\"; used to confirm the sort type of the current checklist \n\tFunction: tap to confirom the sort type of the current checklist and close the popup window \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: custom_type \n\tDescription: a checkbox \"Custom\"; used to sort the items of the current checklist by Custom \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: date_created_type \n\tDescription: a checkbox \"Date created\"; used to sort the items of the current checklist by Date created \n\tFunction: select or unselect the type of sorting the items of the current checklist \n\tDependency: this UI element could be interacted after tap(sort_checklist_items)\n\nelement: save_set_colors \n\tDescription: a button \"Save\"; used to save the colors of the app \n\tFunction: tap to save the colors of the app \n\tDependency: this UI element could be interacted after tap(set_colors)\n\nelement: theme_color_white \n\tDescription: a checkbox \"White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark_red \n\tDescription: a checkbox \"Dark red\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_light \n\tDescription: a checkbox \"light\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_custom \n\tDescription: a checkbox \"Custom\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_dark \n\tDescription: a checkbox \"Dark\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: theme_color_black_white \n\tDescription: a checkbox \"Black & White\"; used to set the theme color of the app \n\tFunction: select or unselect to set the theme color of the app \n\tDependency: this UI element could be interacted after tap(set_theme_color)\n\nelement: add_note_ok \n\tDescription: a button \"OK\"; used to confirm the new note \n\tFunction: tap to confirom the new note and close the popup window \n\tDependency: this UI element could be interacted after tap(create_note)\n\nelement: rename_selected_checklist_item \n\tDescription: a button \"Rename\"; used to rename the selected checklist item \n\tFunction: tap to open the popup window to input the new name of the selected item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_top \n\tDescription: a button \"Move to the top\"; used to move the selected item to the top of the list \n\tFunction: tap to move the selected item to the top of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: delete_selected_checklist_item \n\tDescription: a button \"Delete\"; used to delete the selected item \n\tFunction: tap to delete item and close the popup window to edit the checklist item \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nelement: move_selected_item_to_the_buttom \n\tDescription: a button \"Move to the bottom\"; used to move the selected checklist item to the bottom of the list \n\tFunction: tap to move the selected item to the buttom of the list \n\tDependency: this UI element could be interacted after long_tap(checklist_item)\n\nYou will be asked to complete tasks by writing scripts to manipulate the above elements.\nIn the script, except for the common python control flow (for, if-else, function def/calls, etc.), you can use the following APIs:\n- tap(<element_selector>): tap on the element. Almost all elements can be taped. If an element's attribute checked=false or selected=false, tapping it can make it checked or selected, vice versa.\n- set_text(<element_selector>, <text>): set the text of the element to <text>. Only editable text fields can be set text.\n- get_text(<element_selector>): return the text of the element as a string.\n- get_attributes(<element_selector>): return the attributes of the element as a dict, dict keys include \"selected\", \"checked\", \"scrollable\", dict values are boolean. eg. get_attributes($files[3])[\"selected\"].\n- back(): close the current window\n\nThe <element_selector> primitive is used to select an element, possible ways of selection include:\n- $<element id>, eg. $settings_button\n- <element_list>[<idx>]: the idx-th in the element list. eg. $my_items[1]\n\nThe <element_list> primitive is used to select a list of elements, possible ways of selection include:\n- <element_selector>: the items in the list element identified by <element_selector>. eg. $my_items\n- <element_list>.match(<text or attribute dict>): the elements in the element list that match the given text or attribute dict. eg. $my_items.match(\"key words\") or $my_items.match({\"selected\": true})\nYou can use len(<element_list>) to get the total number of items in an element list.\n\n\nNow I will give you some tasks, you should return the python scripts to complete each task.\nThe tasks are:\n\ntask1: Create a note titled \"Office Setup\", add checklist items \"Order Desk\", \"Buy Chair\", and \"Install Monitor\", then confirm creation and print the note\ntask2: Create a note titled \"Birthday Plan\", add checklist items \"Send Invitations\", \"Order Cake\", \"Buy Decorations\", move \"Order Cake\" to the top, and then set the font size to 200%\ntask3: Create a text note titled \"Weekly Report\", confirm the creation, and then set the font size to 175% and lock the note with confirmation\n\nYour answer should follow this JSON format:\n\n{\n  \"<task1>\": \"<script1>\",\n  \"<task2>\": \"<script2>\",\n  ...\n}\n\n**Note that the script is a string of python code and should only output the JSON content.**"
}