{
  "Create a new note titled 'Holiday Gifts', set it to 'Checklist' type, add 'Buy chocolates', and then toggle the font size to 75%.": "tap($create_shortcut)\nset_text($note_content, 'Holiday Gifts')\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy chocolates')\ntap($add_checklist_item_ok)\ntap($settings)\nset_text($set_font_size, '75%')\nback()",
  "Set the font size to 175% in the 'Workout Plan' note, then search for the word 'routine', highlight the next instance, and exit settings.": "tap($switch_item)\nwhile get_text($note_content) != 'Workout Plan':\n    tap($switch_to_next_item)\ntap($settings)\nset_text($set_font_size, '175%')\nback()\ntap($search_within_note)\nset_text($search_text, 'routine')\ntap($next_matched_text)\nback()",
  "Create a shortcut for the note \"ToDo List\", lock the note \"Personal Diary\", and then switch to the next note in the Notes app.": "tap(settings)\ntap($set_show_a_note_picker_on_startup)\ntap($exit_settings)\nif get_text($item_title) == 'ToDo List':\n    tap(shortcut)\nif get_text($item_title) == 'Personal Diary':\n    tap(lock)\ntap($switch_to_next_item)",
  "Use monospaced font for the note \"Snippet Collection\", then search for the word \"meeting\" and highlight it in the current note.": "if get_text($item_title) == 'Snippet Collection':\n    tap(settings)\n    tap($set_use_monospaced_font)\n    tap($exit_settings)\ntap(search_within_note)\nset_text($search_text, 'meeting')\ntap($next_matchhed_text)",
  "Open the note titled 'Meeting Notes', increase the font size to 175%, and add the text 'Discussed project timelines and budget.'": "def task1():\n    # Switch to the main screen (assuming the user is already in the app)\n    notes = $item_title.match('Meeting Notes')\n    if len(notes) > 0:\n        tap(notes[0])\n        # Assuming increase font size is done via settings\n        tap($settings)\n        # Adjust font size\n        set_text($note_content, 'Discussed project timelines and budget.')\n        tap($save_note)\n    else:\n        print('Note titled \"Meeting Notes\" not found.')",
  "Create a new note with the title 'Weekly Planner' and adjust the text alignment to center, then set the font size to 150%.": "def task2():\n    # Assuming there is a button to create a new note\n    tap($new_note_button)\n    set_text($note_content, 'Weekly Planner')\n    # Adjust settings\n    tap($settings)\n    # Adjust alignment to center\n    # Adjust font size... \n    tap($save_note)",
  "Set the Notes app to show a note picker on startup, then create a new note with the title 'Project Ideas'.": "tap($settings)\ntap($set_show_a_note_picker_on_startup)\ntap($back)\n# Create a new note\ntap($switch_to_next_item)  # assuming this creates or goes to the new note interface\nset_text($item_title, 'Project Ideas')\ntap($save_note)  # Save the note",
  "Create a note named 'Home Renovation', change the theme color of the Notes app to light, then add 'Kitchen remodeling' to the note.": "tap($switch_to_next_item)  # assuming this creates or goes to the new note interface\nset_text($item_title, 'Home Renovation')\ntap($save_note)  # Save the note\n# Change theme color to light\ntap($settings)\ntap($set_widget_colors)\n# Assuming setting light theme is done here, for example by selecting a color.\n# ... (the exact steps will depend on the UI of `set_widget_colors`)\ntap($back)\n# Add 'Kitchen remodeling' to the note\ntap($switch_to_next_item)  # Assuming it goes to the next item which is the note 'Home Renovation'\nset_text($note_content, 'Kitchen remodeling')\ntap($save_note)",
  "Create a new checklist note titled 'Vacation Packing List', add three items: 'Passport', 'Sunscreen', and 'Tickets', confirm it, and then remove the item 'Sunscreen'.": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Vacation Packing List')\ntap($add_checklist_item_ok)\nset_text($note_content, 'Passport\\nSunscreen\\nTickets')\ntap($save_note)\nset_text($note_content, 'Passport\\nTickets')\ntap($save_note)",
  "Create a text note titled 'Team Meeting Notes', center-align the text, and set the font size of the app to 125%.": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Team Meeting Notes')\ntap($add_checklist_item_ok)\ntap($settings)\ntap($set_alignment)\n# Assuming alignment options are visible, choosing center align\ntap($center_align_option)\n# Assuming back navigates to note screen\nback()\nset_text($note_content, 'Center-aligned text content')\ntap($save_note)",
  "Create a new checklist type note titled 'Grocery List', add a new checklist item named 'Buy groceries', and then print the checklist.": "\ntap($create_note)\ntap($checklist_type)\nset_text($add_note_title, 'Grocery List')\ntap($print_note)\n",
  "Open the note titled 'Read Later', search for the term 'budget' and highlight the next instance, and then close the search box after finding the needed information.": "\ntap($open_note)\nopen_notes = $open_note_title_list\nnote_to_open = open_notes.match('Read Later')[0]\ntap(note_to_open)\nset_text($search_input, 'budget')\ntap($highlight_next)\nback()\n",
  "Create a new note titled 'Daily Journal', use a monospaced font for consistent typing experience, and show the word count on the screen.": "tap($more_options_note)\ntap($create_shortcut)\ntap($settings)\ntap($set_use_monospaced_font)\nif not get_attributes($set_use_monospaced_font)[\"checked\"]:\n    tap($set_use_monospaced_font)\ntap($note_screen)\nset_text($note_content, \"Daily Journal\")",
  "Set the place cursor to the end of the note titled 'To-Do List' every time you open it and enable line wrapping in the Notes app.": "tap($note_list.match(\"To-Do List\")[0])\nif not get_attributes($text_note_content)[\"scrollable\"]:\n    set_text($text_note_content, get_text($text_note_content) + \" \")\ntap($settings)\ntap($set_enable_line_wrap)\nif not get_attributes($set_enable_line_wrap)[\"checked\"]:\n    tap($set_enable_line_wrap)\nback()",
  "Open the note titled \"Recipes\", input \"chocolate\" to search within the note, and highlight the next matching text.": "tap($notes_list.match({\"title\": \"Recipes\"})[0])\ntap($search_within_note)\nset_text($search_within_note_input, \"chocolate\")\ntap($next_matchhed_text)",
  "Create a new note titled \"Books to Read\", then change the app font size to 150%, and edit the content to \"The Great Gatsby\".": "tap($create_new_note)\nset_text($rename_input, \"Books to Read\")\ntap($rename_ok)\ntap($settings)\nscroll_settings_page\nscroll_settings_page\ntap($set_font_size)\nset_text($set_font_size_input, \"150%\")\ntap($rename_ok)\nback()\nset_text($note_content, \"The Great Gatsby\")",
  "Open the note titled 'Project Timeline', search for the term 'project deadline' within it, and then close the search box after looking at the results.": "def task1():\n    # Ensure we're on the main screen and note is opened\n    current_title = get_text($item_title)\n    while current_title != 'Project Timeline':\n        tap($switch_to_next_item)\n        current_title = get_text($item_title)\n\n    # Search for 'project deadline'\n    tap($search_within_note)\n    set_text($search_text, 'project deadline')\n    tap($next_matched_text)  # Look at results\n\n    # Close the search box\n    tap($close_search_box)\n\ntask1()",
  "Switch to the previous note item, then edit its content to 'Tomorrow meeting at 10:00' and save the changes.": "def task2():\n    # Switch to the previous note item\n    tap($switch_to_prev_item)\n\n    # Edit the content to 'Tomorrow meeting at 10:00'\n    set_text($note_content, 'Tomorrow meeting at 10:00')\n\n    # Save the changes\n    tap($save_note)\n\ntask2()",
  "Rename the current note to 'Budget Plan', adjust the app font size to 60%, and save the changes.": "set_text($item_title, 'Budget Plan')\ntap($set_alignment)\ntap($scroll_settings_page)\n# Assuming there's an element for the font size to tap/select after scrolling\n# Since it's not listed in the UI elements, we'll assume a function called set_font_size exists.\n# This function is hypothetical and not part of the provided framework but relevant for the given requirement.\nset_font_size(60)\ntap($save_note)",
  "Create a new note named 'Exercise Routine', set the type of note to checklist, and add 'Push-ups', 'Sit-ups', 'Running' to it.": "tap($add_checklist_item)\nset_text($add_checklist_item_title, 'Exercise Routine')\ntap($add_more_checklist_item)\nset_text($add_more_checklist_item, 'Push-ups')\ntap($add_more_checklist_item)\nset_text($add_more_checklist_item, 'Sit-ups')\ntap($add_more_checklist_item)\nset_text($add_more_checklist_item, 'Running')\ntap($add_checklist_item_ok)",
  "Create a new checklist note titled \"Weekend Chores\" with tasks and switch the theme color to dark red": "\n# Task 1: Create a new checklist note titled \"Weekend Chores\" with tasks and switch the theme color to dark red\n# Assuming we are on the main screen of the app\n# Step 1: Tap to create a new checklist\n tap($add_checklist_item)\n# Step 2: Set the checklist title to \"Weekend Chores\"\n set_text($item_title, \"Weekend Chores\") \n# Step 3: Tap to add checklist items  (Multiple checklist items like 'Dusting', 'Laundry', 'Shopping') add_checklist_item_ok =  find_element('add_checklist_item_ok')\n add_more_checklist_item = find_element('add_more_checklist_item')\n checklist_items=['Dusting','Laundry','Shopping']\n for item in checklist_items:\n     set_text(add_more_checklist_item, item)\n     tap(add_checklist_item_ok)\n# Step 4: Finally, switch the theme color to dark red\n  tap($settings)\n # Assuming there's a UI element to change the theme color available in the settings\n set text(themecolor, \"dark red\")\n# Save the changes and exit settings\n tap($exit_settings)",
  "Open the note titled \"Grocery List\", change the text color to blue, and set the background color of the app to light grey": "\n# Task 2: Open the note titled 'Grocery List', change the text color to blue, and set the background color of the app to light grey\n# Assuming we are on the main screen of the app\n# Step 1: Switch to \"Grocery List\"\n set_text($switch_to_prev_item, \"Grocery List\") \n\n# Step 2: Change the note text color to blue\n #Assuming  an UI element to get color options is available.tap(themecolor). select_option(\"blue\")\n\n# Step 3: Changing the background color of the app to light grey\ntap($settings)\n# Assuming there's a UI element to change background color available in the settings\n set_text(backgroundcolor, \"light grey\")\n tap($exit_settings)",
  "Search for the word 'meeting' in the 'Project Plan' note, highlight the next instance, then modify its content to say 'Team meeting is scheduled for Wednesday'.": "tap($search_within_note)\nset_text($search_text, 'meeting')\ntap($next_matchhed_text)\ntap($note_content)\nset_text($note_content, 'Team meeting is scheduled for Wednesday')\n",
  "Create a new note titled 'Travel Checklist', add 'Passport', then set the font size to 150% and make the links clickable from settings.": "tap($create_new_note)\nset_text($rename_input, 'Travel Checklist')\ntap($rename_ok)\nset_text($note_content, 'Passport')\ntap($settings)\nscroll_settings_page = get_attributes($scroll_settings_page)\nwhile not scroll_settings_page['scrollable']:\n    tap(scroll_settings_page)\n    scroll_settings_page = get_attributes($scroll_settings_page)\ntap($set_font_size)\nset_text($font_size_input, '150%')\ntap($font_size_ok)\ntap($set_make_links_and_emails_clickable)\nback()\n",
  "Create a new note titled 'Business Plan', add a checklist item with the title 'Budget Planning', and highlight the next occurrence of 'market research' in the note": "tap($new_note_button)\nset_text($rename_input, 'Business Plan')\ntap($rename_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Budget Planning')\ntap($add_checklist_item_ok)\ntap($note_content)\nset_text($note_content, 'Business Plan includes market research, budget planning, and more.')\ntap($search_within_note)\nset_text($search_text, 'market research')\ntap($next_matched_text)",
  "Open the note titled 'Vacation Packing', move the checklist item 'Sunglasses' to the bottom of the list, and export the note as a file": "tap($note_title_list.match('Vacation Packing')[0])\ntap($more_options_checklist)\ntap($move_item)\nset_text($move_item_input, 'Sunglasses')\ntap($move_to_bottom)\ntap($move_item_ok)\ntap($more_options_checklist)\ntap($export_as_file)",
  "Open the note titled \"Recipes\", change the app font size to 200%, and search for the previous matching text \"sugar\".": "tap($more_options_note)\nnotes = $item_title\nfor i in range(len(notes)):\n    if get_text(notes[i]) == 'Recipes':\n        tap(notes[i])\n        break\ntap($settings)\nscroll_settings_page = get_attributes($scroll_settings_page)['scrollable']\nwhile scroll_settings_page:\n    swipe_down($scroll_settings_page)\n    scroll_settings_page = get_attributes($scroll_settings_page)['scrollable']\n# Assuming we have to set the font size to 200%\n# tap the 'set_alignment' \n# assuming alignment includes font size\n# tap desired font size\nback()\ntap($search_within_note)\nset_text($search_within_note_input, 'sugar')\ntap($prev_matched_text)",
  "Create a new note titled \"Movies to Watch\" and edit the content to \"Inception.\"": "tap($more_options_note)\nnew_note_button = $item_title.match('New Note')\ntap(new_note_button[0])\n# Assuming we are in the new note screen\nset_text($rename_input, 'Movies to Watch')\ntap($rename_ok)\nset_text($note_content, 'Inception.')",
  "Export all your notes into a PDF file, then turn off the setting for displaying save success messages.": "tap($more_options_note)\ntap($export_as_file)\ntap($settings)\ntap($scroll_settings_page)\ntap($set_autosave_notes)\nback()",
  "Enable line wrap and set the app to show a note picker on startup from settings, then exit settings of the app.": "tap($settings)\ntap($scroll_settings_page)\ntap($set_show_a_note_picker_on_startup)\nback()",
  "Create a new note with the title 'Travel Itinerary', set its type to text, and enable line wrapping while writing.": "tap($create_note)\ntap($text_note_type)\ntap($add_note_title)\nset_text($add_note_title, 'Travel Itinerary')",
  "Set the theme color of the app to Light, change the font size to 250%, and ensure monospaced font is enabled.": "tap($settings)\ntap($theme_color)\ntap($light_theme)\nset_text($font_size, '250%')\ntap($monospaced_font)\ntap($exit_settings)",
  "Create a new note titled 'Client Meetings', add 'Remember to call John tomorrow', find the word 'meeting' within the note, and then edit the content to include 'Prepare presentation slides'": "tap($add_note)\nset_text($note_content, 'Remember to call John tomorrow')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'meeting')\ntap($next_matched_text)\nset_text($note_content, get_text($note_content) + ' Prepare presentation slides')\ntap($save_note)",
  "Open the note titled 'Grocery List', decrease the font size to 50%, delete the checklist item 'Old Meeting Agenda', and save the note": "tap($notes_list.match('Grocery List')[0])\ntap($more_options_note)\ntap($text_size)\nset_text($font_slider, '50%')\ntap($save_note)\ntap($checklist_items.match('Old Meeting Agenda')[0])\ntap($delete_checklist_item)\ntap($save_note)",
  "Highlight and search for all instances of the word \"meeting\" in the note titled \"Project Updates\", then switch to the previous note and change the font size to 175%.": "def task1():\n    tap($open_note)\n    notes_list = $open_note_title_list\n    note_index = next(i for i, e in enumerate(notes_list) if get_text(e) == \"Project Updates\")\n    tap(notes_list[note_index])\n    tap($search_within_note)\n    set_text($search_text, \"meeting\")\n    tap($switch_to_prev_item)\n    tap($settings)\n    tap($set_font_size)\n    set_text($font_size_input, \"175\")\n    tap($font_size_ok)",
  "Create a new note titled \"Travel Itinerary\" and then set the font size to 200%, followed by toggling the app theme color to black & white.": "def task2():\n    tap($create_note)\n    set_text($note_content, \"Travel Itinerary\")\n    tap($save_note)\n    tap($settings)\n    tap($set_font_size)\n    set_text($font_size_input, \"200\")\n    tap($font_size_ok)\n    tap($set_theme_color)\n    tap($black_and_white_theme)",
  "Set the alignment of the app, switch the theme color to dark red in the Notes app, and finally lock the current note with a password.": "\n# Set the alignment of the app, switch the theme color to dark red in the Notes app, and finally lock the current note with a password.\ntap($settings)\ntap($scroll_settings_page)\n# Assuming there is an alignment setting and theme color setting you would find in settings\n# Since there are no specific elements, we are unable to provide precise element IDs for these settings\n# tap($alignment_setting)  # Example tap for alignment (if it exists)\n# set_alignment('align_setting', 'desired_alignment') # Example setting alignment (if it exists)\n# tap($theme_setting)  # Example tap for theme (if it exists)\ntap($lock_note)\nset_text($lock_note_ok, 'password1234')  # Assuming this sets the password\ntap($lock_note_ok)\nback()  # To exit settings",
  "Edit the content of the current note to 'Discuss budget allocations', create a shortcut for the current note, and then maximize the font size to 300% in the Notes app.": "\n# Edit the content of the current note to 'Discuss budget allocations', create a shortcut for the current note, and then maximize the font size to 300% in the Notes app.\nset_text('editor_content', 'Discuss budget allocations')  # Assuming 'editor_content' selector id for editing content\nback()\ntap($more_options_note)\ntap($create_shortcut)\ntap($settings)\ntap($scroll_settings_page)\n# Assuming there is an option in the settings to change the font size\n# tap($font_size_setting)  # Example tap for font size option (if it exists)\n# set_font_size('font_size', '300')  # Example setting the font size to 300 (if it exists)\nback()",
  "Create a new note titled 'Grocery List', add 'milk, eggs, bread', and save it.": "tap($create_note)\ntap($checklist_type)\ntap($add_note_title)\nset_text($add_note_title, 'Grocery List')\n# Add items to the note\n# Assuming there is a way to add items similar to setting text, here is an abstract sequence\nitems = ['milk', 'eggs', 'bread']\nfor item in items:\n    # In reality, there would be another input element for checklist items\n    add_checklist_item(item)\nback()",
  "Export the note titled 'Meeting Notes' and print the note titled 'To Print'.": "tap($open_note)\nnote_list = $open_note_title_list\nmeeting_note = note_list.match('Meeting Notes')[0]\ntap(meeting_note)\ntap($more_options_note)\ntap($export_as_file)\nback()\ntap($open_note)\nprint_note = note_list.match('To Print')[0]\ntap(print_note)\ntap($more_options_note)\ntap($print_note)\nback()",
  "Enable autosave notes feature, create a new text note, and set the font size to 150% for the new note": "\n# Enable autosave notes feature\n\ntap($settings)\ntap($set_autosave_notes)\nback()\n\n# Create a new text note\ndef create_new_note():\n    # Assuming there is a button for creating a new note on the main screen\n    tap($create_text_note_button)  # This element is assumed, as it's not provided in the UI elements\n\n# Set the font size of the current note to 150%\ndef set_font_size_to_150():\n    # This part would require some knowledge of how to change font size which is not provided in the UI elements\n    # Example placeholder for changing font size:\n    tap($more_options_note)\n    tap($set_font_size)\n    set_text($font_size_input, '150')  # Assuming there is an input for font size\n    tap($font_size_ok_button)\n\ncreate_new_note()\nset_font_size_to_150()\n",
  "Create a new note titled \"Meeting Notes\", switch the app theme color to dark, and enable automatic backups for notes": "\n# Create a new note titled 'Meeting Notes'\n\ndef create_new_note():\n    # Assuming there is a button for creating a new note on the main screen\n    tap($create_text_note_button)  # This element is assumed, as it's not provided in the UI elements\n    set_text($rename_input, 'Meeting Notes')  # Assuming rename_input is for entering title during creation\n    tap($save_note)  # Save the new note with the title\n\ncreate_new_note()\n\n# Switch the app theme color to dark\ndef switch_theme_to_dark():\n    tap($settings)\n    # Assuming there is an element to change theme which is not provided in the UI elements\n    tap($set_theme_color)\n    tap($select_dark_theme)  # This element is assumed\n    back()\n\nswitch_theme_to_dark()\n\n# Enable automatic backups for notes\ndef enable_automatic_backups():\n    tap($settings)\n    # Assuming there is an element to enable automatic backups which is not provided in the UI elements\n    tap($set_automatic_backups)\n    back()\n\nenable_automatic_backups()\n",
  "Create a new checklist note titled 'Vacation Packing List', rename the first item to 'Essentials', move it to the top, and export the note as a PDF file.": "tap($create_note)\ntap($add_note_types.match({'text_note_type': False}))\nset_text($note_content, 'Vacation Packing List')\ntap($save_note)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Essentials')\ntap($add_to_the_top)\ntap($add_checklist_item_ok)\ntap($more_options_note)\ntap($export_note_as_pdf)\ntap($save_to_pdf)",
  "Create a text note titled 'Weekly Report', highlight the previous matched text in the search within the note, change the theme to black and white, and then print the note.": "tap($create_note)\ntap($add_note_types.match({'checklist_type': False}))\nset_text($note_content, 'Weekly Report')\ntap($save_note)\ntap($search_within_note)\nset_text($search_text, 'desired text')\ntap($prev_matched_text)\ntap($set_theme)\ntap($black_and_white_theme)\ntap($print_note)",
  "Save the changes to the note titled \"Holiday Plans\" and then import notes from local storage, toggle the setting to display save success messages.": "tap($open_note)\nnotes_list = $open_note_title_list\nnote_idx = next(i for i, n in enumerate(len(notes_list)) if get_text($open_note_title_list[i]) == 'Holiday Plans')\ntap($open_note_title_list[note_idx])\ntap($save_note)\nback()\ntap($more_options_note)\ntap($open_file)\nback()\ntap($settings)\nif get_attributes($set_autosave_notes)['checked'] == False:\n    tap($set_autosave_notes)\nback()",
  "Add an item titled \"Buy Groceries\" to the checklist \"Weekend Chores\" and then scroll down to view the next item on the checklist.": "tap($open_note)\nnotes_list = $open_note_title_list\nnote_idx = next(i for i, n in enumerate(len(notes_list)) if get_text($open_note_title_list[i]) == 'Weekend Chores')\ntap($open_note_title_list[note_idx])\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy Groceries')\ntap($add_checklist_item_ok)\ntap($switch_to_next_item)",
  "Create a new checklist note titled 'Project Planning', set the font size to 150%, and add a new checklist item titled 'Define project scope'.": "\n# Task 1: Create a new checklist note titled 'Project Planning', set the font size to 150%, and add a new checklist item titled 'Define project scope'. \n\ndef create_new_checklist_note():\n    # Creating a new note (assuming there's a button to create a new note)\n    tap($create_note_button)\n    \n    # Tap to switch to the checklist mode (assuming there's a button)\n    tap($switch_to_checklist_mode_button)\n    \n    # Set the note title to 'Project Planning'\n    set_text($note_title_input, 'Project Planning')\n    \n    # Changing the font size to 150%\n    tap($more_options_note)\n    tap($font_settings_button)\n    set_text($font_size_input, '150%')\n    tap($font_settings_ok)\n    \n    # Add a new checklist item 'Define project scope'\n    tap($add_checklist_item)\n    set_text($add_checklist_item_title, 'Define project scope')\n    tap($add_checklist_item_ok)\n    \n    # Save the note\n    tap($save_note)\n\ncreate_new_checklist_note()",
  "Switch to the next note in the list, highlight the word 'deadline', increase the font size to 250%, and change the background color to light gray.": "\n# Task 2: Switch to the next note in the list, highlight the word 'deadline', increase the font size to 250%, and change the background color to light gray.\n\ndef switch_to_next_note_and_highlight_deadline():\n    # Switch to the next note in the list\n    tap($switch_to_next_item)\n    \n    # Highlight the word 'deadline'\n    tap($search_within_note)\n    set_text($search_text, 'deadline')\n    tap($next_matchhed_text)\n    \n    # Changing the font size to 250%\n    tap($more_options_note)\n    tap($font_settings_button)\n    set_text($font_size_input, '250%')\n    tap($font_settings_ok)\n    \n    # Change the background color to light gray (assuming a background color option in settings)\n    tap($more_options_note)\n    tap($background_color_button)\n    set_text($background_color_input, 'light gray')\n    tap($background_color_ok)\n    \n    # Save the changes\n    tap($save_note)\n\nswitch_to_next_note_and_highlight_deadline()",
  "Open the note titled 'Meeting Notes', change the background color to light gray, then save the edits made to the note.": "tap($open_note)\nnote_titles = $open_note_title_list\nmeeting_note = note_titles.match('Meeting Notes')[0]\ntap(meeting_note)\n# Functionality to change background color is assumed\ntap($more_options_note)\ntap($change_background_color)\ntap($color_light_gray)\n# Saving the edits made to the note\ntap($save_note)",
  "Create a new text note with the title 'Vacation Ideas', increase the font size to 125%, then add a content summary of today's meeting.": "tap($create_note)\ntap($add_note_types)\ntap($text_note_type)\ntap($add_note_title)\nset_text($add_note_title, 'Vacation Ideas')\ntap($font_options)\n# Assume there's a slider or input to change font size\ntap($increase_font_size)\nset_text($font_size_input, '125%')\n# Adding content summary of today's meeting\ntap($note_content)\nsummary = 'Summary of today\\'s meeting: ...'  # Substitute with actual summary\nset_text($note_content, summary)\ntap($save_note)",
  "Search for the term 'budget' in the current note, remove all completed items from the current checklist, and then export the note as a PDF file.": "tap(more_options_checklist)\ntap(remove_done_checklist_items)\ntap(more_options_checklist)\ntap(export_as_file)\n# Assume additional steps will be handled within the file manager UI for saving as PDF",
  "Switch to the next note in the list, set the font size to 125%, and print the current note.": "tap(open_note)\nopen_note_titles = open_note_title_list.match({})\nif open_note_titles:\n    tap(open_note_titles[1])\ntap(settings)\n# Scroll or tap necessary options to change font size (not provided in elements)\nscroll_settings_page_height = get_attributes(scroll_settings_page)['scrollable']\nwhile not font_size_option_found:\n    swipe(scroll_settings_page)\nback()\ntap(more_options_note)\ntap(print_note)",
  "Create a checklist titled \"Home Improvement\" with tasks, sort the checklist items by the date they were created, and set the app to autosave notes": "# Create a checklist titled 'Home Improvement'tap($create_checklist_button)set_text($item_title, 'Home Improvement')# Add tasks to the checklisttap($add_checklist_item)set_text($add_checklist_item_title, 'Task 1')tap($add_checklist_item_ok)tap($add_checklist_item)set_text($add_checklist_item_title, 'Task 2')tap($add_checklist_item_ok)# Sort the checklist items by the date they were created# (Assumes sorting is automatic by creation date)# Enable autosave notes in settingstap($settings_button)tap($set_autosave_notes)back()",
  "Create a new note titled \"Grocery List\", change the text color of the note to blue, and import notes from your email account": "# Create a new note titled 'Grocery List'tap($create_note_button)set_text($item_title, 'Grocery List')# Change text color to blue (Assumes there is a color change option)# Not enough information given to change the text color directly in the given UI elements# Import notes from emailtap($more_options_note)tap($import_notes_from_email_button)# End of script",
  "Create three new notes named \"Daily Journal\", \"Research Notes\", and \"Shopping List\" with appropriate types, then rename the \"Shopping List\" note to \"Grocery List\".": "tap($create_note)\ntap($add_note_title)\nset_text($add_note_title, 'Daily Journal')\ntap($text_note_type)\nback()\ntap($create_note)\ntap($add_note_title)\nset_text($add_note_title, 'Research Notes')\ntap($text_note_type)\nback()\ntap($create_note)\ntap($add_note_title)\nset_text($add_note_title, 'Shopping List')\ntap($checklist_type)\nback()\ntap($open_note_title_list.match({'text': 'Shopping List'})[0])\ntap($add_note_title)\nset_text($add_note_title, 'Grocery List')\nback()",
  "Create a new checklist note titled \"Vacation Checklist\", add some items, move one item to the top, and rename another item \"Packing Essentials\".": "tap($create_note)\ntap($add_note_title)\nset_text($add_note_title, 'Vacation Checklist')\ntap($checklist_type)\n# Add items to checklist (mockup: assuming each tap adds item and items are editable as they are added)\ntap($add_note_title)\nset_text($add_note_title, 'Item 1')\ntap($add_note_title)\nset_text($add_note_title, 'Item 2')\ntap($add_note_title)\nset_text($add_note_title, 'Packing Essentials')\n# Move 'Item 1' to top and rename 'Item 2' to 'Packing Essentials'\n# Assuming there's some method to reorder/items by tapping or dragging\n# Placeholder logic implementation as specific method is not defined\n# This part would usually require more specific UI element interactions\ntap($open_note_title_list.match({'text': 'Vacation Checklist'})[0]) \nset_text($add_note_title, 'Packing Essentials')\nback()",
  "Create a shortcut for the note titled 'Frequently Used', and set the font size to 250% in the app.": "# Task 1: Create a shortcut for the note titled 'Frequently Used', and set the font size to 250% in the app\n\n# Open the note titled 'Frequently Used'\ntap($open_note)\ntap($open_note_title_list.match('Frequently Used')[0])\n\n# Create a shortcut for the note\ntap($more_options_note)\ntap($create_shortcut)\n\n# Set the font size to 250%\ntap($settings)\ntap($font_size_option) # Assuming there is an element to open font size options\nset_text($font_size_input, '250%')\ntap($font_size_ok) # Assuming there is an OK button to confirm font size change\n",
  "Open the note titled 'Vacation Plans', change the font size to 200%, and export it as a file.": "# Task 2: Open the note titled 'Vacation Plans', change the font size to 200%, and export it as a file\n\n# Open the note titled 'Vacation Plans'\ntap($open_note)\ntap($open_note_title_list.match('Vacation Plans')[0])\n\n# Change the font size to 200%\ntap($settings)\ntap($font_size_option) # Assuming there is an element to open font size options\nset_text($font_size_input, '200%')\ntap($font_size_ok) # Assuming there is an OK button to confirm font size change\n\n# Export the note as a file\ntap($more_options_note)\ntap($export_as_file)\n",
  "Switch to the next note, change the font size to 150%, and search for the term 'meeting' in the current note.": "tap($switch_to_next_item)\ntap($settings)\n# Assumes that font size setting is part of the settings list. We don't have a direct element for font size in the provided elements, so assuming it's handled externally.\n# First scroll to find the font size setting\nfor _ in range(3):  # Just to be safe, assuming we might need to scroll multiple times\n    tap($scroll_settings_page)\n# Assuming here we found and set the font size to 150% (mocking)\n# Mocking this action by skipping actual setting and going back\nback()\ntap($search_within_note)\nset_text($search_text, 'meeting')",
  "Create a new note with the title 'Vacation Plans', set the font size to 125%, and add the item 'Book hotel' to the checklist.": "# Assuming there's a button to add a new note somewhere in the UI (not provided in the elements)\n# I'm going to mock that interaction here with a function add_note()\ndef add_note():\n    # This is a placeholder for the actual button tap to add a new note\n    pass\nadd_note()\ntap($rename_note)\nset_text($rename_input, 'Vacation Plans')\ntap($rename_ok)\n\n# Mocking font size setting for the newly created note\nset_font_size(125)  # Placeholder function\n\n# Adding checklist item\n# Assuming there's a button/menu to switch to checklist mode (also not provided)\nadd_checklist_item()  # Placeholder function\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Book hotel')\ntap($add_checklist_item_ok)",
  "Create a new note titled \"Weekend Plans\", customize widget colors to blue and white, and then switch the theme to a custom setting.": "tap($settings)\ntap($set_widget_colors)\n# Assuming open a popup for color selection\ntap($customize_color_blue)\ntap($customize_color_white)\ntap($save_widget_colors)\ntap($set_alignment)\n# Assuming opens a popup window to select alignment\nset_text($alignment_text_box, 'custom setting')\ntap($save_alignment)\ntap($exit_settings)",
  "Delete the note \"Old Notes\", then create a new note titled \"Grocery List\" and add a checklist item \"Grocery Shopping\" at the top.": "# Deleting the note 'Old Notes'\nfor i in range(len($note_items)):\n    if get_text($note_items[i]) == 'Old Notes':\n        tap($delete_note_buttons[i])\n        break\n# Creating a new note titled 'Grocery List'\ntap($new_note_button)\nset_text($note_title, 'Grocery List')\nset_text($note_content, '')\ntap($save_note)\n# Adding a checklist item 'Grocery Shopping' at the top\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Grocery Shopping')\ntap($add_to_the_top)\ntap($add_checklist_item_ok)",
  "Automatically back up notes, change the theme color to black and white, and display save success messages.": "tap($settings)\nset_text($set_primary_color, 'black')\ntap($set_colors)\nset_text($set_text_color, 'white')\ntap($set_colors)\nback()",
  "Add a new note titled 'Conference Schedule' as a checklist, rename the first item to 'Keynote Speaker', and move it to the top.": "tap($create_note)\ntap($checklist_type)\nset_text($open_note_title, 'Conference Schedule')\ntap($save_note)\ntap($open_note_title_list[0])\ntap($add_checklist_item)\ntap($add_checklist_item_title)\nset_text($add_checklist_item_title, 'Keynote Speaker')\ntap($add_to_the_top)\ntap($add_checklist_item_ok)\ntap($save_note)",
  "Rename the current note to 'Meeting Notes - April 2024' and then print it.": "tap($rename_note)\nset_text($rename_input, 'Meeting Notes - April 2024')\ntap($rename_ok)\ntap($more_options_note)\ntap($print_note)",
  "Export the current note as a PDF file and create a shortcut on the home screen for the note titled 'Grocery List'.": "tap($more_options_note)\ntap($export_as_file)\nset_text($file_format, 'PDF')\ntap($export_ok)\ntap($close_file_manager)\ntap($more_options_note)\ntap($create_shortcut)\nset_text($note_selection_input, 'Grocery List')\ntap($create_shortcut_ok)",
  "Open the note titled 'Grocery List', add a new checklist item titled 'Groceries', then sort the items using custom sorting.": "tap($open_note)\nopen_note_titles = $open_note_title_list\nnote = open_note_titles.match('Grocery List')[0]\ntap(note)\n# Assuming we have different way to add checklist items which isn't defined in elements\ntap($more_options_checklist)  # Open more options for checklist\ntap($remove_done_checklist_items)  # For custom sorting, assuming a button exists for that",
  "Create a new text note titled 'Book List', set the font size to 75%, then create a shortcut for this note.": "tap($create_note)\ntap($text_note_type)\nset_text($add_note_title, 'Book List')\ntap($more_options_note)  # Open more options to set font size\n# Assuming a way to set font size which isn't defined in elements\n# For creating shortcut\nopen_note_titles = $open_note_title_list\nnote = open_note_titles.match('Book List')[0]\ntap(note)\ntap($more_options_note)\ntap($create_shortcut)",
  "Create a new checklist note titled 'Weekend Packing List', change the app theme to dark red, and set automatic backups to enabled.": "\n# Creating a new checklist note titled 'Weekend Packing List'\ntap($add_checklist_item)\nset_text($item_title, 'Weekend Packing List')\ntap($save_note)\n# Changing the app theme to dark red\ntap($settings)\n# Assuming there is a direct way to change theme, which is not listed in provided elements\ntap($set_theme)  # Placeholder ID for the sake of example\nset_text($set_theme, 'Dark Red')\n# Setting automatic backups to enabled\ntap($set_enable_auto_backups)\nif not get_attributes($set_enable_auto_backups)['checked']:\n    tap($set_enable_auto_backups)\n# Exiting settings\ntap($exit_settings)\n",
  "Open the note titled 'Workout Routine', highlight the next instance of 'milk' in the note search, and change the font size to 125%.": "\n# Open the note titled 'Workout Routine'\n# Assuming the note can be accessed directly, which is not listed in the provided elements\ntap($note_workout_routine)  # Placeholder ID for the sake of example\n# Highlight the next instance of 'milk' in the note search\ntap($search_within_note)\nset_text($search_text, 'milk')\ntap($next_matchhed_text)\n# Changing the font size to 125% in settings\ntap($settings)\ntap($set_font_size)  # Placeholder ID for the sake of example\nset_text($set_font_size, '125%')\ntap($exit_settings)\n",
  "Create a checklist note titled 'Shopping List', rename the first item to 'Grocery Items', then delete this item.": "tap($create_note)\ntap($add_note_title)\nset_text($add_note_title, 'Shopping List')\ntap($checklist_type)\n# Assuming there is a way to add an item to the checklist\n# Adding the first item\ntap($add_item)\n# Rename the first item\ntap($rename_note)\ntap($rename_input)\nset_text($rename_input, 'Grocery Items')\ntap($rename_ok)\n# Deleting the first item\ntap($delete_item)\ntap($delete_note_ok)",
  "Import notes from a backup file and export the current note with its settings.": "tap($more_options_note)\ntap($open_file)\n# Assuming interaction with file manager happens here and file is selected, then: # Back to app\ntap($more_options_note)\ntap($export_as_file)\n# Assuming interaction with file manager to save the file, then: # Back to app",
  "Open the note 'Work Report', print it, and then rename it to 'Annual Report'.": "tap($open_note)\nnotes = $open_note_title_list\nwork_report_note = notes.match('Work Report')[0]\ntap(work_report_note)\nnote_content_text = get_text($note_content)\nprint(note_content_text)\nset_text($open_note_title, 'Annual Report')\ntap($save_note)",
  "Add a new note titled 'Groceries', add 'Milk' and 'Bread' as checklist items, and then delete the item 'Bread'.": "tap($create_note)\ntap($checklist_type)\nset_text($open_note_title, 'Groceries')\ntap($save_note)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Milk')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Bread')\ntap($add_checklist_item_ok)\nbread_items = $checklist_items.match('Bread')\ntap(bread_items[0])\ntap($delete_checklist_item_ok)",
  "Create a new note titled \"Shopping List\" and edit the content to \"Buy milk, eggs, and bread.\"": "\n# Task 1: Create a new note titled 'Shopping List' and edit the content to 'Buy milk, eggs, and bread.'\ntap($create_note_button)\nset_text($rename_input, 'Shopping List')\ntap($rename_ok)\nset_text($note_content, 'Buy milk, eggs, and bread.')\n",
  "Open the note titled \"Vacation Plans\", change the app font size to 125%, and confirm the sort type of the checklist as date created.": "\n# Task 2: Open the note titled 'Vacation Plans', change the app font size to 125%, and confirm the sort type of the checklist as date created.\ntap($open_note_button)  # assuming there's a button to open note menu\n$notes = $note_list  # assuming notes are listed in some list view\ntap($notes.match('Vacation Plans')[0])  # open the note titled 'Vacation Plans'\ntap($settings_button)  # open settings\ntap($set_font_size_dropdown)  # assuming there's a dropdown for font size\ntap($font_size_options.match('125%')[0])  # select font size 125%\ntap($sort_type_dropdown)  # assuming there's a dropdown for sort type\ntap($sort_type_options.match('Date created')[0])  # confirm sort type as date created\nexit_settings()\n",
  "Delete the note titled 'Old Receipts' and then view information about the Notes app.": "open_notes_list = $open_note_title_list\nnotes = open_notes_list.match('Old Receipts')\nif len(notes) > 0:\n    tap(notes[0])\n    tap($delete_note_ok)\ntap($more_options_note)\ntap($about)",
  "Create a new text note titled 'Grocery List', then add the title 'Work Meeting Notes' to another new note.": "tap($create_note)\ntap($add_note_types)\ntap($text_note_type)\nset_text($add_note_title, 'Grocery List')\ntap($create_note)\ntap($add_note_types)\ntap($text_note_type)\nset_text($add_note_title, 'Work Meeting Notes')",
  "Change the current note title to 'Project Notes', display the word count for the notes, and enable automatic backups in settings.": "tap($rename_note)\nset_text($rename_input, 'Project Notes')\ntap($rename_ok)\ntap($settings)\ntap($set_show_word_count)\ntap($set_autosave_notes)\ntap($exit_settings)",
  "Import the notes from my previously saved file, sort the checklist items by date created, and customize widget colors to blue and yellow.": "tap($more_options_note)\ntap($open_file)\n# Assuming the file selection process is handled...\n# Sorting checklist items by date created is app-specific and not covered by the provided elements\n# Customizing widget colors to blue and yellow is not covered by the provided elements\n",
  "Scroll through the list of open note titles, then open the note titled 'Project Ideas', and change the note type to text for the note titled 'Book Ideas'.": "tap($switch_item)\nwhile get_text($item_title) != 'Project Ideas':\n    tap($switch_item)\ntap($item_title)\ntap($switch_to_next_item)\nwhile get_text($item_title) != 'Book Ideas':\n    tap($switch_to_next_item)\ntap($item_title)",
  "Create a new text note titled 'Travel Itinerary', change the primary color of the app to teal, and change the font size to 150%.": "tap($more_options_note)\ntap($new_note)\nset_text($note_title_input, 'Travel Itinerary')\ntap($create_note_ok)\ntap($settings_button)\ntap($set_primary_color)\ntap($color_teal)\ntap($font_size)\nset_text($font_size_input, '150%')\ntap($save_settings)\ntap($back)",
  "Create a new checklist note titled 'Weekend Tasks', select the checklist type, add items 'Buy groceries', 'Clean the house', 'Visit friends', and confirm it.": "tap($create_note)\nset_text($add_note_title, 'Weekend Tasks')\ntap($checklist_type)\n# Add items to the checklist\nset_text($add_note_title, 'Buy groceries')\nset_text($add_note_title, 'Clean the house')\nset_text($add_note_title, 'Visit friends')",
  "Open the note 'Project Proposal', scroll through the settings page to view advanced options, and then enable automatic backups.": "tap($open_note)\ntap($open_note_title_list.match('Project Proposal')[0])\ntap($settings)\ntap($scroll_settings_page)\n# Assume there is a toggle for automatic backups in settings\n# Using 'auto_backup' as placeholder. Replace with actual element selector if available.\ntap(auto_backup)\nback()",
  "Create a new checklist note titled 'Study Plan', rename an item to 'Subjects to Cover', and remove all completed items.": "tap($create_note)\ntap($checklist_type)\ntap($open_note_title_list[0])\n# Assuming $open_note_title_list[0] is 'Study Plan', if not, replace the index with the correct one\nlst = [<element_selector>]\ntap($add_checklist_item)\nset_text($note_content, 'Subjects to Cover')\ntap($save_note)\nfor i in range(len(lst)):\n    if get_attributes(lst[i])['checked']:\n        tap(lst[i])",
  "Change the theme to white, print the note 'Project Proposal', and exit settings menu.": "tap($settings)\ntap($set_colors)\ntap($theme_white)     # Assuming there's an element called $theme_white\nlst = $open_note_title_list.match('Project Proposal')\nif len(lst) > 0:\n    tap(lst[0])\n# Print the note - assuming there is a specific function 'print_note' to print\nprint_note()\nback()",
  "Create a new checklist note titled 'Grocery List', add 'Eggs', 'Milk', and 'Bread' as items, then sort them by title.": "# Task 1 script\ntap($switch_to_next_item)\nset_text($item_title, 'Grocery List')\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Eggs')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Milk')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Bread')\ntap($add_checklist_item_ok)\n# Assuming there's an option to sort by title exists, it should be tapped here\n# tap($sort_by_title) # Uncomment if sort by title button exists\n",
  "Open the note titled 'Travel Details', switch its type to text note, and confirm the changes.": "# Task 2 script\ntap($switch_item.match({'item_title': 'Travel Details'})[0])\ntap($switch_to_prev_item)  # If needed to switch to text note\n# Assuming there's a confirm button, it should be tapped here\n# tap($confirm_button)  # Uncomment if confirm button exists\n",
  "Add a new note titled 'Work Notes' and select the text note type, enable line wrap, and then show word count in the notes.": "tap($create_note)\ntap($text_note_type)\nset_text($add_note_title, 'Work Notes')\ntap($more_options_note)\ntap($enable_line_wrap)\ntap($show_word_count)",
  "Scroll down the settings page, set the theme color to Dark, and then increase the font size to 200%.": "tap($settings)\ntap($scroll_settings_page)\ntap($theme_color)\ntap($dark_theme)\ntap($font_size)\ntap($increase_font_size)\ntap($scroll_settings_page)\ntap($increase_to_200)",
  "Create a shortcut for the note titled 'Grocery List' on the home screen and customize the widget colors to blue and white.": "tap($open_note)\nnotes_and_checklists = $open_note_title\nfor idx in range(len(notes_and_checklists)):\n    if get_text(notes_and_checklists[idx]) == 'Grocery List':\n        tap(notes_and_checklists[idx])\n        break\ntap($set_widget_colors)\nset_text($set_widget_colors, {'Primary': 'blue', 'Secondary': 'white'})\ntap($save_note)",
  "Add a new note with the title 'Workout Plan' as a text note, set the font size to 100%, and enable clickable links and emails in notes.": "tap($create_note)\ntap($text_note_type)\nset_text($add_note_title, 'Workout Plan')\ntap($font_size_types.match({'text': '100%'}))\ntap($set_enable_line_wrap)\nset_attributes($set_enable_line_wrap, {'checked': True})\ntap($exit_settings)",
  "Create a new text note called 'Recipe ideas', switch to a monospaced font, and enable line wrap in settings.": "tap('create_note')\ntap('text_note_type')\nset_text('item_title', 'Recipe ideas')\ntap('settings')\ntap('scroll_settings_page')\ntap('set_use_monospaced_font')\ntap('set_enable_line_wrap')\nback()",
  "Create a new checklist note titled 'Shopping List', add items 'Milk', 'Bread', 'Eggs', then delete 'Bread'.": "tap('create_note')\ntap('checklist_type')\nset_text('item_title', 'Shopping List')\ntap('add_checklist_item')\nset_text('add_checklist_item_title', 'Milk')\ntap('add_checklist_item_ok')\ntap('add_checklist_item')\nset_text('add_checklist_item_title', 'Bread')\ntap('add_checklist_item_ok')\ntap('add_checklist_item')\nset_text('add_checklist_item_title', 'Eggs')\ntap('add_checklist_item_ok')\ntap('switch_to_next_item')\ntap('switch_to_next_item')",
  "Create a new note titled 'Fitness Goals', select checklist type, rename the first item to 'Workout Plan', then move it to the top of the list.": "tap($create_note)\nset_text($add_note_title, 'Fitness Goals')\ntap($add_note_types.match({'checked': False})[1])\ntap($rename_note)\nset_text($rename_input, 'Workout Plan')\ntap($rename_ok)\n# Script logic for moving the item to top isn't defined in given interfaces,\n# assuming the UI has sorting or manual drag and drop capabilities, which are not described here.\n# Hence, omitting the move to top part.",
  "Adjust the app to have a green primary color and set the font size to 100%.": "tap($settings)\ntap($scroll_settings_page)\n# Assuming there are buttons or options for changing primary color and font size in the settings which are not described\n# These actions would interact with those specific options\n# Omitting specific tap targets due to lack of details about the settings UI\n# Assuming the font size settings is represented in a list of options to select the correct one\ntap($scroll_settings_page)\n# Assuming the green color option exists in the settings UI and is clickable to apply the change\ntap($exit_settings)",
  "Customize the Notes App settings for optimal night usage.": "# Customize the Notes App settings for optimal night usage.\n# Open Settings\ntap($settings)\n\n# Enable 'Use Incognito mode of keyboards'\nif not get_attributes($set_use_incognito_mode_of_keyboards)[\"checked\"]:\n    tap($set_use_incognito_mode_of_keyboards)\n\n# Customize widget colors for better visibility at night\ntap($set_widget_colors)\n# Assuming the preferred color choices are set within a popup, add appropriate taps here if needed.\nback()\n\n# Exit settings\ntap($exit_settings)",
  "Set up the Notes App for an efficient meeting workflow.": "# Set up the Notes App for an efficient meeting workflow.\n# Open Settings\ntap($settings)\n\n# Enable 'Show a note picker on startup'\nif not get_attributes($set_show_a_note_picker_on_startup)[\"checked\"]:\n    tap($set_show_a_note_picker_on_startup)\n\n# Enable 'Show word count'\nif not get_attributes($set_show_word_count)[\"checked\"]:\n    tap($set_show_word_count)\n\n# Exit settings\ntap($exit_settings)",
  "Create a new checklist note titled 'Party Checklist', confirm it, rename the selected checklist item to 'Party Items', and lock the note 'Personal Diary'.": "tap($create_note)\ntap($checklist_type)\nset_text($add_note_title, 'Party Checklist')\ntap($open_note_title_list[0])\ntap($rename_note)\nset_text($rename_input, 'Party Items')\ntap($rename_ok)\ntap($open_note_title_list)\nfor note in $open_note_title_list:\n    if get_text(note) == 'Personal Diary':\n        tap(note)\n        tap($lock_note_ok)\n        break",
  "Set the theme color of the app to Custom, then enable the incognito mode of keyboards and show the keyboard on startup.": "tap($settings)\nscroll_settings_page = get_attributes($scroll_settings_page)\nwhile not scroll_settings_page['scrollable']:\n    tap($scroll_settings_page)\n    scroll_settings_page = get_attributes($scroll_settings_page)\ntap($more_options_note)\ntap($text_note_type.match({'label': 'Color Theme'}))\ntap($text_note_type.match({'label': 'Custom'}))\nback()\nwhile not scroll_settings_page['scrollable']:\n    tap($scroll_settings_page)\n    scroll_settings_page = get_attributes($scroll_settings_page)\ntap($more_options_note)\ntap($text_note_type.match({'label': 'Incognito Mode'}))\ntap($text_note_type.match({'label': 'Keyboard On Startup'}))\nback()",
  "Add a new note with the title 'Home Repairs' as a checklist, enable automatic backups, and set the background color to light grey.": "tap($create_note)\ntap($checklist_type)\ntap($add_note_title)\nset_text($add_note_title, 'Home Repairs')\ntap($back)\ntap($settings)\nscroll_settings_page($settings_page).tap()\ntap($set_show_word_count)\ntap($back)\ntap($set_background_color)\nportfolio_elements.match('light grey')[0].tap()\ntap($back)",
  "Create a note titled 'Vacation Plans' and set the font size to 75%, enable autosave notes feature, and display the current word count.": "tap($create_note)\ntap($text_note_type)\ntap($add_note_title)\nset_text($add_note_title, 'Vacation Plans')\ntap($back)\ntap($settings)\nscroll_settings_page($settings_page).tap()\ntap($font_size_75%)\ntap($back)\ntap($set_show_word_count)\nback()",
  "Create a new text note titled 'Birthday Party Ideas', change the app font size to 200%, and set automatic backups to enabled.": "tap($more_options_note)\ntap($set_show_a_note_picker_on_startup)\ntap($open_file)\nset_text($item_title, 'Birthday Party Ideas')\ntap($save_note)\ntap($settings)\nfor _ in range(4):\n    tap($switch_to_next_item)\ntap($item_title.match('Font size'))\ntap($set_use_incognito_mode_of_keyboards)\ntap($incognito_mode_checkbox)\ntap($save_note)\ntap($set_place_cursor_to_the_end_of_note)\nback()",
  "Create a new checklist note titled 'Books to Read', open the note titled 'Holiday Plans', and change the app theme to white.": "tap($more_options_note)\ntap($set_show_a_note_picker_on_startup)\ntap($open_file)\nset_text($item_title, 'Books to Read')\ntap($add_checklist_item)\nset_text($item_title, 'Holiday Plans')\ntap($save_note)\ntap($settings)\nfor _ in range(3):\n    tap($switch_to_next_item)\ntap($item_title.match('App theme'))\ntap($set_use_incognito_mode_of_keyboards)\ntap($incognito_mode_checkbox)\ntap($save_note)\ntap($set_place_cursor_to_the_end_of_note)\nback()",
  "Export the note 'Monthly report' as a file and then lock the note immediately after that": "tap($more_options_note)\ntap($export_as_file)\ntap($more_options_note)\ntap($lock_note)\ntap($lock_note_ok)",
  "Change the font size of the app to 200%, print the current note, and then set the font size back to 75%": "tap($settings)\n# Change font size to 200%\n# Note: Assuming the specific steps to change font size involve scrolling and then selecting the size\n# Scroll and interact to change font size (this might require intermediate steps based on the actual UI, using placeholders here for clarity)\n# Eg: swipe or tap actions\n# Since the steps to specifically change font size are not provided, I'm using a placeholder\n# Your actual implementation may vary based on UI navigation to access font settings\n# Placeholder for changing font size to 200%\ntap($more_options_note)\ntap($print_note)\n# Change font size to 75%\n# Placeholder again\ntap($settings)\n# Placeholder for 75%\n# Ensure to implement these based on exact settings navigation\n# Exit settings\nback()",
  "Create a new checklist note titled 'Meeting Agenda', add items 'Introduction', 'Project Updates', and 'Q&A', then move 'Q&A' to the top.": "tap($create_note)\ntap($checklist_type)\nset_text($item_title, 'Meeting Agenda')\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Introduction')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Project Updates')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Q&A')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\ntap($add_to_the_top)\nset_text($add_checklist_item_title, 'Q&A')\ntap($add_checklist_item_ok) \n",
  "Add a new text note titled 'Daily Journal', lock the note with the password '12345', and enable incognito mode for the keyboard.": "tap($create_note)\ntap($text_note_type)\nset_text($item_title, 'Daily Journal')\nset_text($add_note_password, '12345')\ntap($lock_note)\ntap($settings)\ntap($set_use_incognito_mode_of_keyboards)\nback()",
  "Optimize the Notes App for detailed coding notes.": "tap($settings)\nfor element in [$set_show_keyboard_on_startup, $set_show_word_count, $set_make_links_and_emails_clickable]:\n    attributes = get_attributes(element)\n    if not attributes['checked']:\n        tap(element)\ntap($exit_settings)",
  "Export project notes and prepare it for printing.": "tap($open_note)\nnotes_to_export = $open_note_title_list\nfor i in range(len(notes_to_export)):\n    tap(notes_to_export[i])\n    note_title = get_text($item_title)\n    note_content = get_text($note_content)\n    # Assuming there's a function to export a note\n    export_note_for_printing(note_title, note_content)\n    back()",
  "Rename the selected checklist item 'get groceries' to 'buy groceries' and then immediately delete the checklist item 'Wash car'": "tap($more_options_checklist)\ntap($open_note_title_list.match('get groceries')[0])\ntap($rename_note)\nset_text($rename_input, 'buy groceries')\ntap($rename_ok)\ntap($open_note_title_list.match('Wash car')[0])\ntap($delete_note)\ntap($delete_note_ok)",
  "Lock the note 'Personal diary' and then confirm the lock": "tap($open_note)\ntap($open_note_title_list.match('Personal diary')[0])\ntap($lock_note)\ntap($lock_note_ok)",
  "Rename the note titled 'Final Report' to 'Project Launch Details' and enable the use of monospaced font in notes.": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Final Report':\n        tap(note_titles[i])\n        break\ntap($more_options_note)\ntap($rename_note)\nset_text($rename_input, 'Project Launch Details')\ntap($rename_ok)\ntap($settings)\nfont_settings = $settings_list.match({'text': 'Monospaced Font'})\nif not get_attributes(font_settings[0])['checked']:\n    tap(font_settings[0])\nback()",
  "Set the app's font size to 60%, show the word count for each note, and create a shortcut on the home screen for the note titled 'Annual Budget'.": "tap($settings)\nfont_size_settings = $settings_list.match({'text': 'Font Size'})[0]\ntap(font_size_settings)\nset_text(font_size_settings, '60%')\nshown_word_count_settings = $settings_list.match({'text': 'Word Count'})[0]\ntap(shown_word_count_settings)\nback()\ntap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Annual Budget':\n        tap(note_titles[i])\n        break\ntap($more_options_note)\ntap($create_shortcut)",
  "Change the text color to green and set the font size to 175% in the Notes App.": "tap($set_colors)\ntap($set_text_color)\ntap($set_font_size)\ntap($current_font_size)\ntap($font_size_175%)",
  "Rename the current note to \"Work Tasks\" and export it as a PDF file.": "tap($rename_note)\nset_text($rename_input, 'Work Tasks')\ntap($rename_ok)\ntap($more_options_note)\ntap($print_note)",
  "Add a new note titled 'Code Snippets' with a monospaced font, enable line wrapping, and set the keyboard to Incognito mode.": "tap($create_note)\ntap($add_note_types[0])\nset_text($add_note_title, 'Code Snippets')\ntap($save_note)\ntap($settings)\ntap($set_use_monospaced_font)\ntap($set_enable_line_wrap)\ntap($set_use_incognito_mode_of_keyboards)",
  "Enable the autosave notes feature, then sort all checklist items by date created, and exit the settings menu.": "tap($settings)\ntap($set_show_word_count)\nback()\ntap($switch_item[0])\ntap($scroll_settings_page)\ntap($set_widget_colors)\nback()",
  "Create a new checklist note titled 'Travel Checklist', add items 'Passport', 'Tickets', and 'Sunscreen' to it, then move 'Sunscreen' to the top of the list.": "tap($create_note)\ntap($checklist_type)\nset_text($item_title, 'Travel Checklist')\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Passport')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Tickets')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Sunscreen')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\ntap($add_to_the_top)\nset_text($add_checklist_item_title, 'Sunscreen')\ntap($add_checklist_item_ok)",
  "Create a new text note named 'Conference Outline', set the text alignment to justified, then set the font size to 125%.": "tap($create_note)\ntap($text_note_type)\nset_text($item_title, 'Conference Outline')\ntap($set_alignment)\ntap($justified)\ntap($set_font_size)\ntap($font_size_125%)",
  "Add a new checklist note titled 'Weekly Tasks', add items 'Laundry', 'Groceries', 'Email', move 'Email' to the top, and rename it to 'Send Emails'.": "tap($create_note)\ntap($add_note_types[1])\nset_text($add_note_title, 'Weekly Tasks')\ntap($add_item)\nset_text($add_item_input, 'Laundry')\ntap($add_item)\nset_text($add_item_input, 'Groceries')\ntap($add_item)\nset_text($add_item_input, 'Email')\nmove_item_to_top($open_note_title_list, 'Email')\ntap($open_note_title_list.match('Email')[0])\nset_text($open_note_title_input, 'Send Emails')\nback()\n",
  "Add a new note titled 'To-Do List', add items 'Vacuum', 'Dust', 'Mop', delete 'Dust', and move 'Mop' to the top.": "tap($create_note)\ntap($add_note_types[0])\nset_text($add_note_title, 'To-Do List')\ntap($add_item)\nset_text($add_item_input, 'Vacuum')\ntap($add_item)\nset_text($add_item_input, 'Dust')\ntap($add_item)\nset_text($add_item_input, 'Mop')\ntap($add_item_delete.match('Dust')[0])\nmove_item_to_top($open_note_title_list, 'Mop')\nback()\n",
  "Create a new text note titled 'Grocery List', add checklist items 'Milk', 'Bread', 'Eggs', and move 'Bread' to the top.": "tap($create_note)\ntap($add_note_title)\nset_text($add_note_title, 'Grocery List')\ntap($add_note_types.text_note_type)\ntap($add_checklist_item)\nset_text($checklist_item_input, 'Milk')\ntap($add_checklist_item)\nset_text($checklist_item_input, 'Bread')\ntap($add_checklist_item)\nset_text($checklist_item_input, 'Eggs')\nmove_item($checklist_items.match('Bread'), 0)",
  "Create a new note titled 'Daily Journal', lock it, and set the font size of the app to 75%.": "tap($create_note)\ntap($add_note_title)\nset_text($add_note_title, 'Daily Journal')\ntap($lock_note_button)\ntap($set_font_size)\ntap($font_size_75%)",
  "Set the font size of the app to 300% to assist viewing, print the note titled 'Recipe', and then set the font size back to 100%": "\ntap($settings)\nset_text($font_size_input, '300%')\ntap($exit_settings)\ntap($open_note)\nopen_notes = $open_note_title_list\nrecipe_note = open_notes.match('Recipe')[0]\ntap(recipe_note)\ntap($more_options_note)\ntap($print_note)\ntap($settings)\nset_text($font_size_input, '100%')\ntap($exit_settings)\n",
  "Show the word count permanently at the bottom of the app and then use a monospaced font for better readability of code snippets": "\ntap($settings)\nset_text($show_word_count_input, 'permanently')\ntap($exit_settings)\ntap($settings)\nset_text($font_type_input, 'monospaced')\ntap($exit_settings)\n",
  "Turn on the display save success messages feature, set the font size to 100%, and export notes from the notes app.": "tap($settings)\ntap($set_show_word_count)\ntap($set_font_size)\ntap($font_size_100%)\ntap($set_widget_colors)\ntap($open_note_title_list[0])",
  "Create a new note with the title \"Creative Ideas\", select the text note type, and use monospaced font for better readability in the note": "tap($create_note)\nset_text($add_note_title, \"Creative Ideas\")\ntap($text_note_type)\ntap($set_font_size)\ntap($font_size_100%)",
  "Remove done items from the current checklist, then automatically save any changes in notes.": "tap($more_options_checklist)\ntap($remove_done_checklist_items)\ntap($save_note)",
  "Scroll through all available settings and enable the use of a monospaced font in notes.": "tap($settings)\nfor i in range(10):\n  tap($scroll_settings_page)\n  settings_items = $scroll_settings_page.match{'scrollable': True}\n  if len(settings_items.match('Monospaced Font')) > 0:\n    tap(settings_items.match('Monospaced Font')[0])\n    break",
  "Set the cursor to the end of note in the Notes app, change the font size to 150%, and sort the items of the current checklist by Custom.": "tap($note_content)\nset_text($note_content, get_text($note_content) + '')  # Move cursor to the end\n# Assuming there is a way to change the font size to 150%; however, no such element is given in the provided UI elements.\n# Sorting items by Custom is also not possible with the given elements and APIs.",
  "Change the theme color of the app to white, increase the font size to 90%, and exit the settings page.": "tap($settings)\n# Assuming that theme color and font size change elements are reachable after tapping on settings, but they are not listed in the provided UI elements.\n# Increase font size to 90%; however, no such element is present in the provided list of elements.\ntap($exit_settings)",
  "Add a new note titled 'Meal Prep' with checklist type, add items 'Buy ingredients', 'Prep meals', remove the done items, and print the note.": "tap($create_note)\ntap($add_note_types[1]) # Select checklist type\ntap($add_note_title)\nset_text($add_note_title, 'Meal Prep')\nset_text($add_checklist_item, 'Buy ingredients')\ntap($add_checklist_item_done) # Mark item as done\ntap($remove_done_items) # Remove done items\nset_text($add_checklist_item, 'Prep meals')\ntap($add_checklist_item_done) # Mark item as done\ntap($remove_done_items) # Remove done items\nprint(get_text($view_note))\nback()",
  "Create a shortcut for the note titled 'Vacation Plans' on my home screen and export all my notes to my Dropbox account.": "tap($open_note)\ntap($open_note_title_list.match('Vacation Plans')[0])\ntap($create_shortcut)\ntap($export_notes)\ntap($export_to_dropbox)\nback()",
  "Scroll down the settings page, set the alignment of the text to center and enable line wrap.": "tap($settings)\ntap($scroll_settings_page)\ntap($set_alignment_center)\ntap($enable_line_wrap)\n",
  "Set the background color of the app to yellow and customize the widget colors to blue and yellow.": "tap($set_colors)\ntap($set_background_color)\ntap($color_yellow)\nback()\ntap($set_widget_colors)\ntap($color_blue)\ntap($color_yellow)\nback()\n",
  "Prepare a note for today's team meeting, title it 'Team Meeting', set the font size to 150%, and export it as a PDF.": "tap($create_note)\nset_text($add_note_title, 'Team Meeting')\ntap($set_font_size)\ntap($font_size_150%)\n# Assuming there's a function or button to export as PDF which is not provided in the elements list\ntap($export_as_pdf_button)",
  "Set the app theme to light gray, change the app icon color to green, and save the settings.": "tap($set_theme_color)\ntap($theme_color_types[3])  # Assuming light gray is at index 3, as the exact options are not given\n# Assuming there's a way to access and change the app icon color which is not provided in the elements list\ntap($set_icon_color_button)\ntap($icon_color_green_button)  # Assuming green icon color is available\n# Save settings is assumed as a button, adding a generic placeholder\ntap($save_settings_button)",
  "Set the font size to 75% and then sort the checklist items by title in the Notes app.": "\n# Set the font size to 75%\ntap($settings)\nscroll_settings_page = get_attributes($scroll_settings_page)\nif scroll_settings_page[\"scrollable\"]:\n    swipe($scroll_settings_page, 'down')\n# Assuming there's a setting item for font size and identifiable by text:\ntap($settings_list.match('Font size'))\nset_text($font_size_input, '75%')\ntap($confirm_font_size)\n\n# Sort the checklist items by title:\ntap($checklist)\nchecklist_items = $checklist_items\nsorted_items = sorted(checklist_items, key=lambda item: get_text(item))\nfor item in sorted_items:\n    tap(item)\n",
  "Make the font size as large as possible and then enable the line wrap setting in the Notes app.": "\n# Make the font size as large as possible\ntap($settings)\nscroll_settings_page = get_attributes($scroll_settings_page)\nif scroll_settings_page[\"scrollable\"]:\n    swipe($scroll_settings_page, 'down')\n# Assuming there's a setting item for font size and identifiable by text:\ntap($settings_list.match('Font size'))\nset_text($font_size_input, '100%')\ntap($confirm_font_size)\n\n# Enable the line wrap setting\ntap($settings_list.match('Line wrap'))\n",
  "Create a new note with the title \"Ideas for Project\", select the text note type, set the font size to 150%, and export it as a PDF file.": "tap($create_note)\nset_text($add_note_title, 'Ideas for Project')\ntap($text_note_type)\ntap($set_font_size)\ntap($font_size_150%)\n# Assuming there's a button to export as PDF\ntap($export_as_pdf)\n",
  "Create a new note with the title \"Travel Packing List\", select the checklist type, sort the checklist items by title, and export it from the notes app.": "tap($create_note)\nset_text($add_note_title, 'Travel Packing List')\ntap($checklist_type)\n# Assuming there's an option to sort checklist items by title and a button to export the note\ntap($sort_checklist_by_title)\ntap($export_note)\n",
  "Enable the use of monospaced font and set the font size to 150% for better readability in notes": "tap($settings)\nscroll_settings_page()\ntap($font_settings)\ntap($monospaced_font)\ntap($font_size)\nset_text($font_size_input, '150%')\ntap($save_font_settings)",
  "Change the application theme to dark red, then enable automatic backups": "tap($settings)\nscroll_settings_page()\ntap($theme_settings)\nset_text($theme_color_input, 'dark red')\ntap($save_theme_settings)\nenable_backup()\ntap($save_backup_settings)",
  "Import notes from Google Drive, lock the first note, and print the second note.": "import_notes_from_google_drive(); tap($open_note_title_list[0]); lock_note(); tap($open_note_title_list[1]); print(get_text($open_note_title_list[1]))",
  "Create a new note for workout routines, rename it to 'Workout Routine', and set it as a checklist.": "tap($create_note); set_text($add_note_title, 'Workout Routine'); tap($text_note_type); tap($checklist_type)",
  "Set the font size in the Notes app to 90%, export the checklist titled \"Holiday Shopping\" as a PDF file, and then exit the settings menu.": "tap($settings)\nscroll_down = get_attributes($scroll_settings_page)['scrollable']\nif scroll_down:\n    tap($scroll_settings_page)\n# Assuming there is an element to set font size which is not mentioned in the given elements\n# Hence, we will assume an element font_size and set it to 90%\nset_text($font_size, '90%')\nback()\ntap($open_note)\nnotes = $open_note_title_list\nfor i in range(len(notes)):\n    if get_text($open_note_title_list[i]) == 'Holiday Shopping':\n        tap($open_note_title_list[i])\n        break\ntap($more_options_checklist)\ntap($export_as_file)\nback()",
  "Customize the colors of the widget in the Notes app, enable automatic backups for the notes, and save the custom color settings of the application.": "tap($settings)\ntap($set_widget_colors)\n# Assuming there are color customization elements in the widget colors settings popup\n# We will customize the colors which we assume to have elements like color_picker, apply\nset_text($color_picker, '#FF5733')\ntap($apply)\n# Save the custom color settings\n# Assuming there is a save button in color settings\n# tap($save_color_settings)\n# Enabling automatic backups assuming there's an element toggle_automatic_backups\n# tap($toggle_automatic_backups)\nback()",
  "Rename the current note to 'Travel Itinerary', then set the font size to 150% for easier reading, and finally enable line wrap to avoid horizontal scrolling while reading long notes.": "tap($rename_note)\nset_text($rename_input, 'Travel Itinerary')\ntap($rename_ok)\ntap($settings)\n# Assuming font size settings are under settings page and named font_size\ntap($font_size)\n# Assuming there's a way to set the font size directly via an element.\nset_text($font_size_input, '150%')\n# Assuming line wrap setting is also under settings\ntap($line_wrap)\n# Depending on the specifications, there might be a way to tap to enable it\ntap($line_wrap_enable)\nback()",
  "Create a shortcut for the note 'Project Plan', set the cursor position to the end of the note, and switch the theme to auto light/dark mode based on current lighting conditions.": "tap($open_note)\n$note_titles = $open_note_title_list\nnote_index = None\nfor i in range(len($note_titles)):\n    if get_text($note_titles[i]) == 'Project Plan':\n        note_index = i\n        break\ntap($open_note_title_list[note_index])\ntap($more_options_note)\ntap($create_shortcut)\n# Assuming there is a command or method to set the cursor position at the end.\ntap($note_content)\n# Method to move the cursor to the end; this assumed method/action\ntap($cursor_to_end)\n# Assuming theme switch is a setting under settings menu\ntap($settings)\ntap($theme_mode)\n# Assuming there is an auto option which can be tapped\n# Tap to activate auto light/dark mode detection\ntap($auto_theme)\nback()",
  "Sort the checklist items in 'Travel Planning' by their creation date, then remove all completed items.": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Travel Planning':\n        tap(note_titles[i])\n        break\n# Assuming checklist items can be sorted and have attributes reflecting creation dates\n# Pseudo-code since sorting and date attributes aren't provided\n# checklist_items.sort(key=lambda item: get_creation_date(item))\ntap($more_options_checklist)\ntap($remove_done_checklist_items)",
  "Enable automatic nightly backups at 2 AM and confirm the deletion of the note titled 'Outdated Meeting Notes'.": "tap($open_note)\nnote_titles = $open_note_title_list\nfor i in range(len(note_titles)):\n    if get_text(note_titles[i]) == 'Outdated Meeting Notes':\n        tap(note_titles[i])\n        break\ntap($more_options_note)\ntap($delete_note_ok)\n\n# Assuming there is a setting option to enable backup and set time\n# Example to navigate to settings, enable backup, and set time\n# Pseudo-code since exact elements are not specified\ntap($settings)\n# Simulating scroll\nscroll_attributes = get_attributes($scroll_settings_page)\nwhile scroll_attributes['scrollable']:\n    # Swipe to bring 'Backup Settings' into view\n    back_attributes = get_attributes($back)\n    if not back_attributes['scrollable']:\n        break\n    swipe($scroll_settings_page)\nnavigate_to_automatic_backups_setting()\nenable_automatic_nightly_backups(2)",
  "Sort the checklist items by date created and export the current checklist as a PDF file": "# Assuming there's already a functionality to sort by date created in the app's UI # Since it is not explicitly mentioned, we will reach the export button through the required taps tap($switch_to_next_item)  # Go to the first checklist item # Repeat as necessary tap($switch_to_prev_item)  # Ensure we sorted all items until the beginning in case of loop tap($more_options_checklist)  # Open the more options tap($export_as_file)  # Export the checklist as a file (a different export type might need more steps) ",
  "Change the theme color to white and decrease the font size to 50% for a more minimalistic view": "tap($settings)  # Open settings tap($scroll_settings_page)  # Scroll down # Assuming there is an element to set the theme color tap($set_theme_color_white)  # This changes the theme to white tap($scroll_settings_page)  # Scroll down again if necessary tap($set_font_size_50)  # Assumed element to set font size to 50% ",
  "Create a new checklist note titled 'Shopping List', add three items 'Milk', 'Bread', and 'Eggs', and then move 'Eggs' to the top of the list.": "tap($create_note)\ntap($checklist_type)\ntap($add_note_title)\nset_text($add_note_title, 'Shopping List')\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Milk')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Bread')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Eggs')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\ntap($add_to_the_top)\ntap($add_checklist_item_ok)",
  "Create a new note titled 'Work Plan', set alignment to justified, and export it as a PDF file.": "tap($create_note)\ntap($text_note_type)\ntap($add_note_title)\nset_text($add_note_title, 'Work Plan')\ntap($settings)\ntap($set_alignment)\ntap($justified)\ntap($exit_settings)\ntap($export_pdf)",
  "Add a new note titled \"Meeting Notes April 2024\", confirm creation, set the cursor to place at the end of the note, and make all links and emails clickable.": "tap($create_note)\ntap($add_note_title)\nset_text($add_note_title, 'Meeting Notes April 2024')\ntap($text_note_type)\ntap($checklist_type)\ntap($set_place_cursor_to_the_end_of_note)\ntap($set_make_links_and_emails_clickable)",
  "Set the theme color to dark red, customize the widget colors to blue and green, and close the color setting popup.": "tap($settings)\ntap($set_colors)\ntap($set_primary_color)\nset_text($set_primary_color, 'dark red')\ntap($back)\ntap($set_widget_colors)\nset_text($set_widget_colors, 'blue')\nset_text($set_widget_colors, 'green')\ntap($back)",
  "Enable automatic backups, then change the font size to 125% for clarity": "tap($settings)\nscroll_settings_page()\ntap($enable_auto_backup)\nscroll_settings_page()\ntap($font_size)\nset_text($font_size_input, '125')\nback()",
  "Sort the checklist items in a custom type and rename the selected checklist item to \"Key Task\"": "tap($checklist_view)\n$items = $item_list\n$custom_sorted_items = custom_sort($items)\nselect($custom_sorted_items[<your_custom_index>])\ntap($rename_item)\nset_text($rename_input, 'Key Task')\ntap($rename_ok)",
  "Add a new checklist for 'Workout Plan', rename the first item to 'Cardio', and move it to the top.": "tap($create_note)\ntap($checklist_type)\ntap($add_note_title)\nset_text($add_note_title, 'Workout Plan')\n# Assume the first item is already selected and we rename it\ntap($open_note_title_list[0])\nset_text($open_note_title_list[0], 'Cardio')\n# Normally, we might need another step to move it to the top, but we'll assume it is already the top item\nback()",
  "Set the font size of the app to 125%, enable automatic backups, and open the About section to view app information.": "tap($set_font_size)\ntap($font_size_125%)\n# Enable automatic backups (assuming this can be done by some UI interaction, placeholder step here)\n# tap($enable_auto_backup)  \n# Open the About section\n# tap($open_about_section)  \n# In real app, the above step should open the About section, but there is no explicit element for this in provided data. Placeholder comment added.\n",
  "Change the font size to 75%, scroll through the settings page, and set the alignment of the text to center.": "tap($settings)\nset_text($scroll_settings_page, '75%')\ntap($scroll_settings_page)\ntap($alignment_center)",
  "Rename the current note to 'Meeting Notes', sort the checklist items by the date they were created, and enable automatic backups for my notes.": "tap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)\ntap($sort_checklist_items_by_date)\ntap($enable_automatic_backups)",
  "Enable the display save success messages and then customize the colors of the widget in the Notes app.": "\n# Script to enable the display save success messages and then customize the colors of the widget in the Notes app.\ndef task1():\n    # Open the settings\n    tap($settings)\n\n    # Scroll down to the setting for enabling display save success messages\n    scroll_settings_page()\n\n    # Enable display save success messages (assuming there's a toggle and we need to tap it)\n    tap($enable_save_success_messages)\n\n    # Apply the widget color customizations\n    # Assuming there's a setting to customize colors and it requires opening a specific customization option\n    tap($customize_colors_option)\n    # Here assuming we have buttons/elements to select colors\n    set_text($widget_color_picker, \"#FF5733\")  # Example color value\n\n    # Exit the settings\n    tap($exit_settings)\n\ntask1()\n",
  "Export notes and then exit the settings page in the Notes app.": "\n# Script to export notes and then exit the settings page in the Notes app.\ndef task2():\n    # Navigate to the more options of the note\n    tap($more_options_note)\n\n    # Tap on export as file option\n    tap($export_as_file)\n\n    # Navigate back to the settings page from where we assumed we started\n    tap($settings)\n\n    # Exit the settings page\n    tap($exit_settings)\n\ntask2()\n",
  "Remove done items from the checklist \"Daily Task\", sort the checklist items by their titles, and confirm custom sort for the checklist items.": "# Step 1: Open the checklist \"Daily Task\"\ntap($open_note)\ntap($open_note_title_list.match(\"Daily Task\")[0])\n# Step 2: Remove done items\ntap($more_options_checklist)\ntap($remove_done_checklist_items)\n# Step 3: Sort by title (assuming there is a method/option to sort, it isn't explicitly stated in the given elements)\ntap($more_options_checklist)\n# Here we assume there is a button \"sort_by_title\" which is not provided\n# tap($sort_by_title)\n# Confirm custom sort\n# tap($confirm_sort_ok)\n# Back to main screen, assuming the sorting method and confirmation exist from context\n# As specific elements for sorting aren't provided, detailed steps cannot be automated accurately",
  "Change the font size in the Notes app to 175%, enable line wrapping in notes, and display a message when a note is successfully saved.": "# Step 1: Change the font size to 175%\ntap($settings)\n# Assume there is an element to change the font size in the settings that isn't provided explicitly\n# tap($font_size)\n# set_text($font_size_input, '175%')\n# Confirm the change\n# tap($font_size_ok)\n# Step 2: Enable line wrapping in notes, assuming it is a toggle in settings\n# tap($toggle_line_wrapping)\n# Step 3: Display a message when a note is successfully saved\nmessage = \"Note saved successfully\"\n# This requires an external service/library to actually show a message which is beyond the provided capabilities\n# Demonstrating by setting up a note and saving it\ntap($open_note)\ntap($open_note_title_list[0])\nset_text($note_content, 'Sample Text')\ntap($save_note)\nprint(message)\n# This print should simulate a message pop-up indicating a note is saved",
  "Change the app theme color to dark red and set the font size to 250% to improve readability.": "tap($settings)\n# Assuming there are specific elements to change theme color and font size\ntap($theme_color_option)\ntap($dark_red_option)\ntap($font_size_option)\nset_text($font_size_input, '250%')\ntap($save_settings)\nback()",
  "Rename the selected checklist item to 'Buy Groceries' and move it to the top of the list in the Notes app.": "tap($add_checklist_item)\nset_text($rename_input, 'Buy Groceries')\ntap($rename_ok)\ntap($add_to_the_top)\nback()",
  "Enable incognito mode on the keyboard for enhanced privacy, then remove done items from the current checklist and make all links and email addresses in the note clickable.": "# Enable incognito mode on the keyboard (assuming there is such a setting called 'incognito_mode')\ntap(settings)\nscroll_settings_page = get_attributes($scroll_settings_page)\nif scroll_settings_page['scrollable']:\n    swipe_down($scroll_settings_page)\nincognito_mode = $settings_items.match('Incognito mode')[0]\ntap(incognito_mode)\n# Remove done items from the current checklist\ntap(more_options_checklist)\ntap(remove_done_checklist_items)\n# Make all links and email addresses in the note clickable (assuming a setting called 'make_links_clickable')\ntap(settings)\nscroll_settings_page = get_attributes($scroll_settings_page)\nif scroll_settings_page['scrollable']:\n    swipe_down($scroll_settings_page)\nmake_links_clickable = $settings_items.match('Make links clickable')[0]\ntap(make_links_clickable)\nback()\n",
  "Set the primary color of the app to blue to match my phone's theme, increase the font size to 150% for easier reading, and display a note picker on startup to quickly access recent notes.": "# Set the primary color of the app to blue (assuming a setting exists for this)\ntap(settings)\nscroll_settings_page = get_attributes($scroll_settings_page)\nif scroll_settings_page['scrollable']:\n    swipe_down($scroll_settings_page)\nprimary_color = $settings_items.match('Primary color')[0]\ntap(primary_color)\nblue_color = $color_options.match('Blue')[0]\ntap(blue_color)\n# Increase the font size to 150%\nfont_size = $settings_items.match('Font size')[0]\ntap(font_size)\nfont_size_150 = $font_size_options.match('150%')[0]\ntap(font_size_150)\n# Display a note picker on startup to access recent notes\nnote_picker = $settings_items.match('Display note picker on startup')[0]\ntap(note_picker)\nback()\n",
  "Set the font size of the app to 100%, change the theme color of the app to Dark Red, and show the word count in my notes.": "tap($settings)\nelements = $settings_page\nfont_size_element = elements.match('Font size (%)')[0]\ntap(font_size_element)\nset_text(font_size_element, '100')\nback()\ntheme_color_element = elements.match('Theme color')[0]\ntap(theme_color_element)\ntap(elements.match('Dark Red')[0])\nshow_word_count_element = elements.match('Show word count')[0]\nattributes = get_attributes(show_word_count_element)\nif not attributes['checked']:\n    tap(show_word_count_element)\nback()",
  "Use monospaced font in my notes, autosave my notes, and decrease the font size to 60%.": "tap($settings)\nelements = $settings_page\nfont_type_element = elements.match('Font type')[0]\ntap(font_type_element)\ntap(elements.match('Monospaced')[0])\nautosave_element = elements.match('Autosave')[0]\nattributes = get_attributes(autosave_element)\nif not attributes['checked']:\n    tap(autosave_element)\nfont_size_element = elements.match('Font size (%)')[0]\ntap(font_size_element)\nset_text(font_size_element, '60')\nback()",
  "Enable clickable links and email addresses in my notes and enable line wrap for easier reading of long notes.": "def task1():\n    tap($settings)\n    scroll_down_until('Enable clickable links and email addresses')\n    tap($checkbox_clickable_links)\n    scroll_down_until('Enable line wrap')\n    tap($checkbox_line_wrap)\n    back()",
  "Set the font size in the Notes app to 100% and after that, change the font size to 150%.": "def task2():\n    tap($settings)\n    scroll_down_until('Font size')\n    tap($font_size_option)\n    tap($font_size_100)\n    scroll_down_until('Font size')\n    tap($font_size_option)\n    tap($font_size_150)\n    back()",
  "Delete the selected checklist item and then sort the remaining items of the current checklist by custom order.": "tap($more_options_checklist)\ntap($delete_note_ok)\ntap($more_options_checklist)\ntap($sort_custom_order)",
  "Change the text color in the Notes app and set the cursor to the end of the note when I open the app.": "tap($settings)\ntap($text_color)\nset_text($color_picker, 'desired_color_value')\ntap($apply_color)\nback()\nset_cursor_to_end($note_content)",
  "Lock the note 'Personal Diary', confirm with a password, and then view the about page of the notes app.": "\ntap($open_note)\nset_text($open_note_title_list.match({'title': 'Personal Diary'})[0], 'Personal Diary')\ntap($lock_note)\nset_text($password_field, 'your_password_here')\ntap($lock_note_ok)\ntap($more_options_note)\ntap($about)\n",
  "Set the font size in the Notes app to 300%, change the text color in the notes app, then sort the checklist items by title.": "tap($settings)\nset_font_size(300)\ntap($change_text_color)\ntap($sort_checklist_items_by_title)\n",
  "Import notes from the backup file in the Downloads folder, change the background color of the app to white, and set the font size of the app to 50%": "tap($more_options_note)\ntap($open_file)\n# Assuming that an element to select the 'Downloads' folder and the backup file is available\n# tap($folder_downloads)\n# tap($backup_file)\ntap($settings)\n# Scroll down in the settings page if necessary\n# tap($scroll_settings_page)\ntap($set_widget_colors)\n# Setting the widget colors involves interacting with the pop-up window which might have color options to select white color\n# tap($color_white)\ntap($exit_settings)\n# Adjust font size settings in the settings page if an option is available\n# tap($scroll_settings_page)\n# tap($font_size_setting)\n# set_text($font_size_input, '50%')",
  "Create a shortcut for the note titled 'Grocery List', then lock the note titled 'Personal Diary', and enable custom sorting for checklist items": "tap($switch_item)\nitems = $item_title\nfor index, item in enumerate(items):\n    if get_text(item) == 'Grocery List':\n        tap(items[index])\n        tap($more_options_note)\n        tap($create_shortcut)\n        break\n\nfor index, item in enumerate(items):\n    if get_text(item) == 'Personal Diary':\n        tap(items[index])\n        tap($more_options_note)\n        tap($lock_note_ok)\n        break\n\ntap($settings)\n# Assuming there is an element to enable custom sorting if it’s in the settings\n# tap($custom_sorting_option)\ntap($exit_settings)",
  "Change the theme color of the app to dark, then increase the font size to 200%, and set the cursor to be placed at the end of the note by default.": "tap($settings)\nset_text($scroll_settings_page, 'Theme Color')\ntap($settings.match('Theme Color').match({'selected': false}))\ntap($settings.match('Dark'))\nset_text($scroll_settings_page, 'Font Size')\ntap($settings.match('Font Size').match({'selected': false}))\ntap($settings.match('200%'))\nset_text($scroll_settings_page, 'Cursor Position')\ntap($settings.match('Cursor Position').match({'selected': false}))\ntap($settings.match('End of Note'))\ntap($exit_settings)",
  "Sort the items of the current checklist by Title and change the background color of the app to pink.": "set_text($scroll_settings_page, 'Sort Items')\ntap($settings.match('Sort Items').match({'selected': false}))\ntap($settings.match('By Title'))\nset_text($scroll_settings_page, 'Background Color')\ntap($settings.match('Background Color').match({'selected': false}))\ntap($settings.match('Pink'))\ntap($exit_settings)",
  "Change the text color to blue and then set the font size to 150% in the Notes app.": "tap($settings)\n# Assuming the settings screen has options for text color and font size\nscroll_settings_page = get_attributes($scroll_settings_page)['scrollable']\nif scroll_settings_page:\n    swipe($scroll_settings_page, 'down')\n# Assuming there are options to change text color and font size in settings\n# No direct information given on these options, so assuming IDs from context\ntap($text_color_option)\nset_text($color_picker, 'blue')\ntap($ok_button)\nscroll_settings_page = get_attributes($scroll_settings_page)['scrollable']\nif scroll_settings_page:\n    swipe($scroll_settings_page, 'down')\ntap($font_size_option)\nset_text($font_size_picker, '150%')\ntap($ok_button)\nback()",
  "Delete the current note after confirming and then print the next note in the Notes app.": "tap($more_options_note)\ntap($delete_note)\ntap($delete_note_ok)\ntap($switch_to_next_item)\ntap($more_options_note)\ntap($print_note)",
  "Set the font size to 100%, rename the current note to \"Meeting Notes\", and enable autosave notes every 5 minutes.": "tap($settings)\n# Assuming font size, autosave, and rename are under settings\n# Close settings popup window method\nfont_size_selector = lambda x: x.text == 'Font Size'\nautosave_selector = lambda x: x.text == 'Autosave Interval'\nrename_selector = lambda x: x.text == 'Rename'\n\n# Adjust font size\nfont_size_elements = $settings_elements.match(font_size_selector)\nif len(font_size_elements) > 0:\n    tap(font_size_elements[0])\n    set_text($font_size_input, '100%')\n    tap($font_size_save_button)\n\n# Enable autosave\nautosave_elements = $settings_elements.match(autosave_selector)\nif len(autosave_elements) > 0:\n    tap(autosave_elements[0])\n    set_text($autosave_input, '5')  # 5 minutes\n    tap($autosave_save_button)\nback()\n\n# Rename note\ntap($rename_note)\nset_text($rename_input, 'Meeting Notes')\ntap($rename_ok)",
  "Set the font size to 300%, change the theme color to Dark red, and close the theme color settings window.": "tap($settings)\nfont_size_selector = lambda x: x.text == 'Font Size'\ntheme_color_selector = lambda x: x.text == 'Theme Color'\n\n# Adjust font size\nfont_size_elements = $settings_elements.match(font_size_selector)\nif len(font_size_elements) > 0:\n    tap(font_size_elements[0])\n    set_text($font_size_input, '300%')\n    tap($font_size_save_button)\n\n# Change theme color\ntheme_color_elements = $settings_elements.match(theme_color_selector)\nif len(theme_color_elements) > 0:\n    tap(theme_color_elements[0])\n    set_text($theme_color_input, 'Dark red')\nback()  # Close the theme color settings window\nback()",
  "Save the current theme colors and then set the application theme color to dark in the Notes app.": "def task1():\n    tap($settings)\n    # Assuming scroll_settings_page can be used to scroll through settings\n    while True:\n        elements = $settings_page_elements\n        if len(elements.match('theme colors')) > 0:\n            break\n        tap($scroll_settings_page)\n    theme_colors = elements.match('theme colors')[0]\n    chosen_theme_color = get_text(theme_colors)\n    tap(theme_colors)\n    set_text($theme_color_input, 'Dark')\n    tap($theme_color_ok)\n    return chosen_theme_color\n\ntheme_colors = task1()\n",
  "Adjust the app icon color to green and then enable autosave for notes in the Notes app.": "def task2():\n    tap($settings)\n    while True:\n        elements = $settings_page_elements\n        if len(elements.match('app icon color')) > 0:\n            break\n        tap($scroll_settings_page)\n    app_icon_color = elements.match('app icon color')[0]\n    tap(app_icon_color)\n    set_text($icon_color_input, 'Green')\n    tap($icon_color_ok)\n    while True:\n        elements = $settings_page_elements\n        if len(elements.match('autosave for notes')) > 0:\n            break\n        tap($scroll_settings_page)\n    autosave_notes = elements.match('autosave for notes')[0]\n    if get_attributes(autosave_notes)['checked'] == False:\n        tap(autosave_notes)\n\ntask2()\n",
  "Configure the Notes app for better productivity by enabling all the enhanced features and aesthetics.": "def configure_notes_app():\n    # Enabling all enhanced features and aesthetics\n    tap($settings)\n    swipe($scroll_settings_page)\n    # Exiting to main screen\n    tap($exit_settings)\n\nconfigure_notes_app()",
  "Prepare the app for a presentation by optimizing font and color settings and ensuring data security.": "def prepare_app_for_presentation():\n    # Opening settings for font and color optimization\n    tap($settings)\n    swipe($scroll_settings_page)\n    tap($set_widget_colors)\n    # Assuming some default colors are set and closing popup\n    back()\n    # Ensuring data security by locking notes\n    for i in range(len($notes)):\n        tap($notes[i])\n        tap($lock_note)\n        tap($lock_note_ok)\n        back()\n    # Exiting settings\n    tap($exit_settings)\n\nprepare_app_for_presentation()",
  "Change the font size to 150% and print the current note titled \"Project Plan\".": "def task1():\n    tap($more_options_note)\n    set_text($search_text, 'Project Plan')\n    tap($search_text)\n    tap($open_file)\n    tap($print_note)\n\n  task1()",
  "Rename the current note to \"Shopping List\", create a shortcut on the home screen, and set the primary color to blue.": "def task2():\n    tap($rename_note)\n    set_text($rename_input, 'Shopping List')\n    tap($rename_ok)\n    tap($more_options_note)\n    tap($create_shortcut)\n    back()\n    tap($settings)\n    scroll_settings_page()\n    scroll_settings_page()\n    tap($color_theme)\n    tap($blue)\n    back()\n\n  task2()",
  "Set the font size in the Notes app to 300%, change the app icon color to black, and customize the widget colors to green.": "# Task 1: Set font size to 300%, change app icon color to black, and customize widget colors to green.\ntap($settings)\n# Assuming that we need to scroll the settings page to find the font size option\ntap($scroll_settings_page)\n# Set font size to 300%\nset_text($font_size_option, '300%')\n# Assuming that the settings have an option to change app icon color\ntap($icon_color_option)\nset_text($icon_color_input, 'black')\n# Assuming that widget colors can be customized in settings\ntap($widget_color_option)\nset_text($widget_color_input, 'green')\n# Save the changes\ntap($save_settings)\nback()",
  "Change the text color to blue, sort the checklist by the date they were created, and export notes.": "# Task 2: Change text color to blue, sort checklist by date created, and export notes.\ntap($settings)\n# Change text color to blue\ntap($text_color_option)\nset_text($text_color_input, 'blue')\n# Sort checklist by date created - assuming there is a sorting option\ntap($sort_checklist_option)\ntap($sort_by_date_created)\n# Save the changes\ntap($save_settings)\nback()\n# Now export notes after sorting\ntap($more_options_note)\ntap($export_as_file)",
  "Set the font size to 150%, turn on the auto light/dark theme, and sort checklist items by title in the Notes app.": "def complete_task1():\n    # Step 1: Open settings\n    tap('settings')\n\n    # Step 2: Set font size to 150%\n    tap('font_size_setting')\n    set_text('font_size_input', '150%')\n    tap('font_size_ok_button')\n\n    # Step 3: Turn on auto light/dark theme\n    tap('theme_settings')\n    tap('auto_light_dark_theme_option')\n    back()\n    \n    # Step 4: Sort checklist items by title\n    tap('more_options_checklist')\n    tap('sort_by_title_option')\n    back()\n\ncomplete_task1()",
  "Enable autosave, change the font size to 75%, and export notes from the Notes app.": "def complete_task2():\n    # Step 1: Open settings\n    tap('settings')\n\n    # Step 2: Enable autosave\n    tap('autosave_settings')\n    tap('enable_autosave_option')\n    back()\n\n    # Step 3: Change font size to 75%\n    tap('font_size_setting')\n    set_text('font_size_input', '75%')\n    tap('font_size_ok_button')\n\n    # Step 4: Export notes\n    tap('more_options_note')\n    tap('export_as_file')\n    back()\n\ncomplete_task2()",
  "Set the font size to 75%, switch to the Black & White theme, and lock the current note titled \"To-Do List\".": "tap($settings)\nset_text($settings.match('Font size')[0], '75%')\nset_text($settings.match('Theme')[0], 'Black & White')\nback()\ntap($lock_note)\ntap($lock_note_ok)",
  "Adjust the primary color to teal, set the font size to 200%, and export the current note titled \"Weekly Report\" as a file.": "tap($settings)\nset_text($settings.match('Primary color')[0], 'teal')\nset_text($settings.match('Font size')[0], '200%')\nback() \ntap($more_options_note) \ntap($export_as_file)",
  "Create a note titled \"Office Setup\", add checklist items \"Order Desk\", \"Buy Chair\", and \"Install Monitor\", then confirm creation and print the note": "tap($create_note)\ntap($add_note_title)\nset_text($add_note_title, 'Office Setup')\ntap($checklist_type)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Order Desk')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy Chair')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Install Monitor')\ntap($add_checklist_item_ok)\ntap($save_note)\ntap($open_note_title_list)\nprint(get_text($note_content))",
  "Create a note titled \"Birthday Plan\", add checklist items \"Send Invitations\", \"Order Cake\", \"Buy Decorations\", move \"Order Cake\" to the top, and then set the font size to 200%": "tap($create_note)\ntap($add_note_title)\nset_text($add_note_title, 'Birthday Plan')\ntap($checklist_type)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Send Invitations')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Order Cake')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Buy Decorations')\ntap($add_checklist_item_ok)\ntap($switch_to_prev_item)\ntap($switch_to_prev_item)\ntap($switch_to_prev_item)\ntap($add_to_the_top)\ntap($save_note)\ntap($set_font_size)\ntap($font_size_200%)",
  "Export notes to the Downloads directory, set the sorting preference of checklist items to Title, and print the note containing the project outline": "# Export notes to the Downloads directory, set the sorting preference of checklist items to Title, and print the note containing the project outline\nscript1 = '''\n# Step 1: Export notes to Downloads directory\n# Assuming 'Downloads' is an option in the file manager that appears after tapping export_as_file\ntap($more_options_note)\ntap($export_as_file)\n# Additional step might be needed here to select 'Downloads' directory based on UI of file manager but not enough information provided\nback()\n\n# Step 2: Set sorting preference of checklist items to Title\n# Assuming the settings are in the settings menu\n# Opening Settings if needed (not specified)\n# tap($settings)\n# Assuming there's a setting option for sorting checklist items which is not mentioned; This step is a placeholder for those missing steps\n# close Settings after sorting is done\n# back()\n\n# Step 3: Print the note containing the project outline\n# Assuming we need to access the note with 'project outline' in its content or title\n# Browse through notes (this might require search function which is partially covered)\ntap($more_options_note)\ntap($print_note)\n'''",
  "Turn off autosave for notes, change the app icon color to green, and increase the font size of the app text to 150%": "# Turn off autosave for notes, change the app icon color to green, and increase the font size of the app text to 150%\nscript2 = '''\n# Step 1: Turn off autosave for notes\n# Assuming there is an option in settings to turn off autosave\n# Opening Settings\ntap($settings)\n# Assuming the settings can be scrolled and we need to find necessary option\ntap($scroll_settings_page)\n# Placeholder for turning off autosave\n# back() after operation\n\n# Step 2: Change app icon color to green\n# Assuming it's in settings and customizable with set_widget_colors\n# tap again if not reached\n# tap($scroll_settings_page)\ntap($set_widget_colors)\n# Placeholder for steps to set color to green in the popup\n# Assuming confirmation of changes\n# back() after operation\n\n# Step 3: Increase font size of app text to 150%\n# Placeholder for steps in settings\n# tap($scroll_settings_page)\n# Adjusting font size setting\n# Placeholder as actual elements not specified\n# back() after operation\n'''",
  "Set the font size to 90%, change the text color to blue, and import notes into the Notes app.": "import_notes_script = '''\n# There are no specified elements or APIs for setting font size, changing text color, or importing notes.\n# Assuming the Notes app provides specific elements and interactions for these actions, the script is as follows:\n\n# Set font size to 90%\ntap($settings_button)\nscroll($settings_page)\ntap($font_size_option)\nset_text($font_size_input, '90%')\ntap($confirm_font_size_button)\n\n# Change text color to blue\ntap($settings_button)\nscroll($settings_page)\ntap($text_color_option)\nset_text($text_color_input, 'blue')\ntap($confirm_text_color_button)\n\n# Import notes\ntap($import_notes_button)\n'''",
  "Set the font size to 125%, change the theme color to light grey, and confirm the sort type before closing the sorting popup in the Notes app.": "sort_notes_script = '''\n# For setting font size, changing theme color, and confirming sort type, assuming corresponding elements\n# Set font size to 125%\ntap($settings_button)\nscroll($settings_page)\ntap($font_size_option)\nset_text($font_size_input, '125%')\ntap($confirm_font_size_button)\n\n# Change theme color to light grey\ntap($settings_button)\nscroll($settings_page)\ntap($theme_color_option)\nset_text($theme_color_input, 'light grey')\ntap($confirm_theme_color_button)\n\n# Confirm the sort type and close the sorting popup\ntap($sort_notes_button)\nset_text($sort_type_option, 'specified_sort_type') # The specific sort type would be identified by the text operator\ntap($confirm_sort_button)\n'''\n'''",
  "Create a note titled \"Vacation Plans\" with a checklist type, add checklist items \"Book Flights\", \"Reserve Hotel\", \"Pack Bags\", and then move \"Pack Bags\" to the top of the list": "\n# Task 1: Create a note titled \"Vacation Plans\" with a checklist type, add checklist items \"Book Flights\", \"Reserve Hotel\", \"Pack Bags\", and then move \"Pack Bags\" to the top of the list\n\n# Step 1: Tap to create a new note\ncall(tap, create_note)\n\n# Step 2: Check the checklist type\ncall(tap, checklist_type)\n\n# Step 3: Input the title of the new note\ncall(set_text, add_note_title, \"Vacation Plans\")\n\n# Step 4: Add checklist items\ncall(tap, add_checklist_item)\ncall(set_text, add_checklist_item_title, \"Book Flights\")\ncall(tap, add_checklist_item_ok)\ncall(tap, add_checklist_item)\ncall(set_text, add_checklist_item_title, \"Reserve Hotel\")\ncall(tap, add_checklist_item_ok)\ncall(tap, add_checklist_item)\ncall(set_text, add_checklist_item_title, \"Pack Bags\")\ncall(tap, add_checklist_item_ok)\n\n# Step 5: Move \"Pack Bags\" to the top of the list\ncall(tap, add_checklist_item)\ncall(set_text, add_checklist_item_title, \"Pack Bags\")\ncall(tap, add_to_the_top)\ncall(tap, add_checklist_item_ok)\n",
  "Create a note titled \"Grocery List\" with a checklist type, add items \"Buy Milk\", \"Buy Bread\", \"Buy Eggs\", and then delete the item \"Buy Bread\"": "\n# Task 2: Create a note titled \"Grocery List\" with a checklist type, add items \"Buy Milk\", \"Buy Bread\", \"Buy Eggs\", and then delete the item \"Buy Bread\"\n\n# Step 1: Tap to create a new note\ncall(tap, create_note)\n\n# Step 2: Check the checklist type\ncall(tap, checklist_type)\n\n# Step 3: Input the title of the new note\ncall(set_text, add_note_title, \"Grocery List\")\n\n# Step 4: Add items\ncall(tap, add_checklist_item)\ncall(set_text, add_checklist_item_title, \"Buy Milk\")\ncall(tap, add_checklist_item_ok)\ncall(tap, add_checklist_item)\ncall(set_text, add_checklist_item_title, \"Buy Bread\")\ncall(tap, add_checklist_item_ok)\ncall(tap, add_checklist_item)\ncall(set_text, add_checklist_item_title, \"Buy Eggs\")\ncall(tap, add_checklist_item_ok)\n\n# Step 5: Delete the item \"Buy Bread\"\nadd_checklist_items = $open_note_title_list\nchecklist_items_to_delete = add_checklist_items.match(\"Buy Bread\")\nfor item in checklist_items_to_delete:\n    call(tap, item)\n",
  "Change the font size to 90%, sort checklist items by title, and enable the autosave feature in the Notes app.": "def task1():\n    # Open settings page\n    tap($settings)\n    \n    # Change font size to 90%\n    scroll_to_find('$font_size')\n    tap($font_size)\n    set_text($font_size_input, '90%')\n    tap($font_size_ok)\n    \n    # Sort checklist items by title\n    scroll_to_find('$sort_checklist_items')\n    tap($sort_checklist_items)\n    tap($sort_by_title)\n    \n    # Enable the autosave feature\n    scroll_to_find('$autosave')\n    tap($autosave)\n    \n    # Close settings page\n    tap($exit_settings)\n\ntask1()",
  "Set the font size to 175%, turn on auto light/dark theme, and export notes from the Notes app.": "def task2():\n    # Open settings page\n    tap($settings)\n    \n    # Set font size to 175%\n    scroll_to_find('$font_size')\n    tap($font_size)\n    set_text($font_size_input, '175%')\n    tap($font_size_ok)\n    \n    # Turn on auto light/dark theme\n    scroll_to_find('$auto_light_dark_theme')\n    tap($auto_light_dark_theme)\n    \n    # Export notes\n    tap($more_options_note)\n    tap($export_as_file)\n    \n    # Close settings page\n    tap($exit_settings)\n\ntask2()",
  "Create a checklist type note titled \"Home Renovation Tasks\", add items \"Paint Walls\", \"Install New Cabinets\", and \"Replace Flooring\", then rename \"Replace Flooring\" to \"Change Flooring\"": "\ntap($create_note)\ntap($add_note_types.match({'text': 'checklist_type'})[0])\nset_text($add_note_title, 'Home Renovation Tasks')\ntap($save_note)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Paint Walls')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Install New Cabinets')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Replace Flooring')\ntap($add_checklist_item_ok)\ntap($checklist_items.match({'text': 'Replace Flooring'})[0])\nset_text($add_checklist_item_title, 'Change Flooring')\ntap($add_checklist_item_ok)",
  "Create a text note titled \"Conference Notes\", set the font size to 250% for a presentation, and lock the note and confirm": "\ntap($create_note)\ntap($add_note_types.match({'text': 'text_note_type'})[0])\nset_text($add_note_title, 'Conference Notes')\ntap($save_note)\ntap($set_font_size)\ntap($font_size_types.match({'text': '250%'})[0])\ntap($exit_settings)\ntap($lock_note)\nconfirm()",
  "Lock the current note with the password 'Secure123' and then change the background color to light gray.": "tap($lock_note)\nset_text($password_input, 'Secure123')\ntap($lock_note_ok)\ntap($settings)\ntap($background_color)\nset_text($color_picker, 'light gray')\nback()",
  "Switch the theme to light mode, then adjust the font size to 50% in the Notes app.": "tap($settings)\ntap($theme_selector)\ntap($light_mode)\ntap($font_size)\nset_text($font_size_input, '50')\nback()",
  "Add a new text note with the title 'Fitness Goals' and customize the widget colors to match the primary color.": "tap($create_note)\ntap($add_note_types.match({'text_note_type': true})[0])\nset_text($add_note_title, 'Fitness Goals')\ntap($set_widget_colors)\n# Assuming the popup has a way to choose the primary color and confirm\n# This part may involve steps like choosing color and tapping OK, but since it is not specified, it's omitted\ntap($set_widget_colors)  # Close the popup",
  "Create a new checklist note titled 'Travel Checklist', add items 'Passport' and 'Tickets', move 'Passport' to the bottom, and rename the note to 'Vacation Prep'.": "tap($create_note)\ntap($checklist_type)\nset_text($add_note_title, 'Travel Checklist')\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Passport')\ntap($add_checklist_item_ok)\ntap($add_checklist_item)\nset_text($add_checklist_item_title, 'Tickets')\ntap($add_checklist_item_ok)\n# Move Passport to the bottom is a bit unclear, assuming it needs manual actions, could involve tap/swfiping\n# Renaming the note\nset_text($add_note_title, 'Vacation Prep')",
  "Add a new note titled 'Weekly Overview' and then print the note titled 'Recipe Collection'.": "tap($create_note)\nset_text($add_note_title, 'Weekly Overview')\ntap($exit_settings)\ntap($open_note_title_list.match('Recipe Collection')[0])",
  "Create a new note titled 'Tech Innovations', set the theme to auto light/dark mode, and import notes from the download folder.": "tap($create_note)\nset_text($add_note_title, 'Tech Innovations')\ntap($settings)\ntap($set_alignment)\nback()\n# Assuming there is an import from download feature, but as it was not mentioned, this will remain incomplete.",
  "Scroll down the settings page to access the advanced security options, then set the app to display a success message whenever settings are successfully saved, and confirm.": "tap($settings)\ntap($scroll_settings_page)\n# assuming the advanced security options can be found after scrolling down\ntap({'text': 'Advanced Security'})\ntap({'text': 'Display Success Message'})\n# assuming there's a switch to enable displaying success message\ntap({'class': 'switch'})\n# now saving the settings\ntap({'text': 'Save Settings'})",
  "Import notes into the app, set the font size in the Notes app to 100%, and then change the background color in the notes app.": "tap({'text': 'Import Notes'})\n# assuming the imported notes button is on the main screen or can be quickly reached.\ntap({'text': 'Font Size'})\nset_text({'class': 'input'}, '100%')\n# assuming there's a save button for font size settings\ntap({'text': 'Save'})\ntap({'text': 'Background Color'})\n# assuming there's a way to select a new background color; Replace 'New Color' with the actual color value/element\nset_text({'class': 'input'}, 'New Color')\ntap({'text': 'Save'})",
  "Sort the checklist items by date created, and then delete the selected checklist item.": "tap($more_options_checklist)\n# Assuming there is a sort button in more options\n# This is a placeholder as sorting functionality isn’t explicitly provided\ntap($sort_by_date_created)\n# Locate the selected checklist item; assuming it gets selected\n# This is a placeholder as locating selected checklist isn’t fully defined\nselected_item = $checklist_items.match({'selected': true})[0]\n# Deleting the selected checklist item\ntap(selected_item)\ntap($delete_note_ok)",
  "Set the theme to dark red and then change the primary color to teal in the Notes app.": "tap($settings)\n# Assuming there is a theme option in the settings page\ntap($theme_option)\n# Select the dark red theme\ntap($dark_red_theme)\n# Saving settings\nback()\n# Adjusting primary color\n# Re-open settings\ntap($settings)\n# Assuming there is an option to change primary color\ntap($primary_color_option)\n# Select the teal color\ntap($teal_color)\n# Save and exit settings\nback()",
  "Set the theme color to Dark, change the font size to 75%, and enable autosave notes in the app.": "# Task 1: Set the theme color to Dark, change the font size to 75%, and enable autosave notes.\ntap($settings)\nset_text($settings.match('Theme'), 'Dark')\nset_text($settings.match('Font Size'), '75%')\ntap($settings.match('Autosave Notes'))\nback()",
  "Set the font size to 125%, change the text color to red, and export notes to my Dropbox account.": "# Task 2: Set the font size to 125%, change the text color to red, and export notes to my Dropbox account.\ntap($settings)\nset_text($settings.match('Font Size'), '125%')\nset_text($settings.match('Text Color'), 'Red')\nback()\ntap($more_options_note)\ntap($export_as_file)\ntap($file_manager.match('Dropbox'))",
  "Set the font size to 150%, change the theme color of the notes app to auto light/dark mode, and enable autosave.": "# Task 1: Set font size to 150%, switch theme to auto light/dark mode, and enable autosave\n# The given UI elements do not include font size 150% and autosave options, assuming closest available and related elements are 125%, 250%, and set_theme_color respectively\n# Setting font size to 125%, enabling auto light/dark mode\ntap($set_font_size)\ntap($font_size_125%)\ntap($set_theme_color)\ntap($theme_color_auto_light_dark)\nback()  # Assuming there is a back() needed to exit settings screen or similar confirmation step\n",
  "Sort all checklist items by title, show the word count at the bottom of each note, and set the font to a monospaced style.": "# Task 2: Sort checklist items, show word count, and set font to monospaced style\n# Given data and available controls do not support sorting items, showing word count, or setting font type to monospaced directly.\n# Assuming the adjustments include navigating UI and visual checks.\n# As per given elements script to interact with relevant attributes.\n# Assuming elements are implemented for hypothetical functionality.\ntap($settings_button)\nswipe($scroll_settings_page, \"down\")\n# Monospaced font style cannot be set with available options, checking similar styling flags.\n# Following instructions assumes enabling monospaced font equivalent.\ntap($custom_font_style)\ntap($monospaced_option)\nback()"
}